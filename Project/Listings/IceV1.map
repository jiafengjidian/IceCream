Component: ARM Compiler 5.06 update 4 (build 422) Tool: armlink [4d35d2]

==============================================================================

Section Cross References

    system_stm32f4xx.o(i.SystemCoreClockUpdate) refers to system_stm32f4xx.o(.data) for .data
    system_stm32f4xx.o(i.SystemInit) refers to system_stm32f4xx.o(i.SetSysClock) for SetSysClock
    startup_stm32f40_41xxx.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f40_41xxx.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f40_41xxx.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f40_41xxx.o(RESET) refers to startup_stm32f40_41xxx.o(STACK) for __initial_sp
    startup_stm32f40_41xxx.o(RESET) refers to startup_stm32f40_41xxx.o(.text) for Reset_Handler
    startup_stm32f40_41xxx.o(RESET) refers to irq_cm4f.o(.text) for SVC_Handler
    startup_stm32f40_41xxx.o(RESET) refers to devicebluetooth.o(i.USART2_IRQHandler) for USART2_IRQHandler
    startup_stm32f40_41xxx.o(RESET) refers to usb_it.o(i.OTG_FS_IRQHandler) for OTG_FS_IRQHandler
    startup_stm32f40_41xxx.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f40_41xxx.o(.text) refers to system_stm32f4xx.o(i.SystemInit) for SystemInit
    startup_stm32f40_41xxx.o(.text) refers to __main.o(!!!main) for __main
    startup_stm32f40_41xxx.o(.text) refers to startup_stm32f40_41xxx.o(HEAP) for Heap_Mem
    startup_stm32f40_41xxx.o(.text) refers to startup_stm32f40_41xxx.o(STACK) for Stack_Mem
    main.o(i.main) refers to systimer.o(i.vSysTimerInit) for vSysTimerInit
    main.o(i.main) refers to device74hc165.o(i.v74HC165Init) for v74HC165Init
    main.o(i.main) refers to devicenrf2401.o(i.vNrf2401Init) for vNrf2401Init
    main.o(i.main) refers to devicech451s.o(i.vCh451sInit) for vCh451sInit
    main.o(i.main) refers to main.o(i.vUart3Init) for vUart3Init
    main.o(i.main) refers to periphtimer.o(i.vTimer3Init) for vTimer3Init
    main.o(i.main) refers to periphtimer.o(i.vTimer5Init) for vTimer5Init
    main.o(i.main) refers to periphtimer.o(i.vTimer2Init) for vTimer2Init
    main.o(i.main) refers to periphtimer.o(i.vTimer4Init) for vTimer4Init
    main.o(i.main) refers to periphtimer.o(i.vTimer1Init) for vTimer1Init
    main.o(i.main) refers to devicebluetooth.o(i.vBluetoothInit) for vBluetoothInit
    main.o(i.main) refers to devicemoto.o(i.vMotoInit) for vMotoInit
    main.o(i.main) refers to devicemoto.o(i.vMotoDisableAll) for vMotoDisableAll
    main.o(i.main) refers to systimer.o(i.vSysTimerDelay) for vSysTimerDelay
    main.o(i.main) refers to devicemoto.o(i.vMotoSelect) for vMotoSelect
    main.o(i.main) refers to devicemoto.o(i.vMotoSetDir) for vMotoSetDir
    main.o(i.main) refers to devicenrf2401.o(i.xNrfCheck) for xNrfCheck
    main.o(i.main) refers to devicenrf2401.o(i.vNrfEnterTxMode) for vNrfEnterTxMode
    main.o(i.vUart3WriteString) refers to main.o(i.vUart3WriteByte) for vUart3WriteByte
    xstring.o(i.vStrFormat) refers to xstring.o(i.xStrValueOfUInt) for xStrValueOfUInt
    xstring.o(i.vStrFormat) refers to xstring.o(i.xStrCopy) for xStrCopy
    xstring.o(i.xStrValueOfUInt) refers to xstring.o(i.xGetNumberLength) for xGetNumberLength
    xstring.o(i.xStrValueOfUInt) refers to xstring.o(.constdata) for .constdata
    bluetoothprotocol.o(i.vCreateReportSensOstepDataProtocol) refers to bluetoothprotocol.o(i.vCreateGPProtocol) for vCreateGPProtocol
    bluetoothprotocol.o(i.vCreateReportStatusDataProtocol) refers to bluetoothprotocol.o(i.vCreateGPProtocol) for vCreateGPProtocol
    bluetoothprotocol.o(i.vCreateUpdateSensOstepDataProtocol) refers to bluetoothprotocol.o(i.vCreateGPProtocol) for vCreateGPProtocol
    periphfsmc.o(i.vFsmcInit) refers to periphfsmc.o(i.vFsmcGpioInit) for vFsmcGpioInit
    periphtimer.o(i.vTimerRobotInit) refers to periphtimer.o(.data) for .data
    periphtimer.o(i.xGetRobot1Cycle) refers to periphtimer.o(.data) for .data
    periphtimer.o(i.xGetRobot2Cycle) refers to periphtimer.o(.data) for .data
    devicelcd.o(i.vLcdDisplayAscii) refers to devicelcd.o(i.vLcdOpenWindow) for vLcdOpenWindow
    devicelcd.o(i.vLcdDisplayAscii) refers to devicelcd.o(.constdata) for .constdata
    devicelcd.o(i.vLcdDisplayAsciiString) refers to devicelcd.o(i.vLcdDisplayAscii) for vLcdDisplayAscii
    devicelcd.o(i.vLcdDisplayChar) refers to devicelcd.o(i.vLcdOpenWindow) for vLcdOpenWindow
    devicelcd.o(i.vLcdDisplayChar) refers to devicelcd.o(.constdata) for .constdata
    devicelcd.o(i.vLcdFullRect) refers to devicelcd.o(i.vLcdOpenWindow) for vLcdOpenWindow
    devicelcd.o(i.vLcdInit) refers to systimer.o(i.vSysTimerDelay) for vSysTimerDelay
    devicech451s.o(i.vCh451sDisplay) refers to devicech451s.o(i.vCh451sWriteData) for vCh451sWriteData
    devicech451s.o(i.vCh451sInit) refers to devicech451s.o(i.vCh451sWriteData) for vCh451sWriteData
    devicech451s.o(i.vCh451sWriteData) refers to devicech451s.o(i.delay) for delay
    devicebluetooth.o(i.USART2_IRQHandler) refers to devicebluetooth.o(i.vBluetoothBufferOver) for vBluetoothBufferOver
    devicebluetooth.o(i.USART2_IRQHandler) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for osMessageQueuePut
    devicebluetooth.o(i.USART2_IRQHandler) refers to devicebluetooth.o(.data) for .data
    devicebluetooth.o(i.USART2_IRQHandler) refers to devicebluetooth.o(.bss) for .bss
    devicebluetooth.o(i.USART2_IRQHandler) refers to bluetoothreceivertask.o(.data) for BluetoothReceiverMQId
    devicebluetooth.o(i.vBluetoothBufferOver) refers to devicebluetooth.o(.data) for .data
    devicebluetooth.o(i.vBluetoothBufferOver) refers to devicebluetooth.o(.bss) for .bss
    devicebluetooth.o(i.vBluetoothInit) refers to devicebluetooth.o(i.vBluetoothGpioInit) for vBluetoothGpioInit
    devicebluetooth.o(i.vBluetoothInit) refers to rtx_mutex.o(.text.osMutexNew) for osMutexNew
    devicebluetooth.o(i.vBluetoothInit) refers to devicebluetooth.o(.bss) for .bss
    devicebluetooth.o(i.vBluetoothInit) refers to devicebluetooth.o(.data) for .data
    devicebluetooth.o(i.vBluetoothWrite) refers to rtx_mutex.o(.text.osMutexAcquire) for osMutexAcquire
    devicebluetooth.o(i.vBluetoothWrite) refers to devicebluetooth.o(i.vBluetoothWriteByte) for vBluetoothWriteByte
    devicebluetooth.o(i.vBluetoothWrite) refers to rtx_mutex.o(.text.osMutexRelease) for osMutexRelease
    devicebluetooth.o(i.vBluetoothWrite) refers to devicebluetooth.o(.data) for .data
    devicebluetooth.o(i.vBluetoothWriteByteArray) refers to rtx_mutex.o(.text.osMutexAcquire) for osMutexAcquire
    devicebluetooth.o(i.vBluetoothWriteByteArray) refers to rtx_delay.o(.text.osDelay) for osDelay
    devicebluetooth.o(i.vBluetoothWriteByteArray) refers to devicebluetooth.o(i.vBluetoothWriteByte) for vBluetoothWriteByte
    devicebluetooth.o(i.vBluetoothWriteByteArray) refers to rtx_mutex.o(.text.osMutexRelease) for osMutexRelease
    devicebluetooth.o(i.vBluetoothWriteByteArray) refers to devicebluetooth.o(.data) for .data
    devicebluetooth.o(i.vBluetoothWriteString) refers to rtx_mutex.o(.text.osMutexAcquire) for osMutexAcquire
    devicebluetooth.o(i.vBluetoothWriteString) refers to devicebluetooth.o(i.vBluetoothWriteByte) for vBluetoothWriteByte
    devicebluetooth.o(i.vBluetoothWriteString) refers to rtx_mutex.o(.text.osMutexRelease) for osMutexRelease
    devicebluetooth.o(i.vBluetoothWriteString) refers to devicebluetooth.o(.data) for .data
    devicebluetooth.o(.data) refers to devicebluetooth.o(.conststring) for .conststring
    devicenrf2401.o(i.vNrfEnterTxMode) refers to devicenrf2401.o(i.xNrfWriteRegisterOfBuffer) for xNrfWriteRegisterOfBuffer
    devicenrf2401.o(i.vNrfEnterTxMode) refers to devicenrf2401.o(i.xNrfWriteRegister) for xNrfWriteRegister
    devicenrf2401.o(i.vNrfEnterTxMode) refers to devicenrf2401.o(.constdata) for .constdata
    devicenrf2401.o(i.xNrfCheck) refers to devicenrf2401.o(i.xNrfWriteRegisterOfBuffer) for xNrfWriteRegisterOfBuffer
    devicenrf2401.o(i.xNrfCheck) refers to devicenrf2401.o(i.xNrfReadRegisterOfBuffer) for xNrfReadRegisterOfBuffer
    devicenrf2401.o(i.xNrfReadRegister) refers to devicenrf2401.o(i.xSpiTranslateByte) for xSpiTranslateByte
    devicenrf2401.o(i.xNrfReadRegisterOfBuffer) refers to devicenrf2401.o(i.xSpiTranslateByte) for xSpiTranslateByte
    devicenrf2401.o(i.xNrfSendPacket) refers to devicenrf2401.o(i.xNrfWriteRegisterOfBuffer) for xNrfWriteRegisterOfBuffer
    devicenrf2401.o(i.xNrfSendPacket) refers to devicenrf2401.o(i.xNrfReadRegister) for xNrfReadRegister
    devicenrf2401.o(i.xNrfSendPacket) refers to devicenrf2401.o(i.xNrfWriteRegister) for xNrfWriteRegister
    devicenrf2401.o(i.xNrfWriteRegister) refers to devicenrf2401.o(i.xSpiTranslateByte) for xSpiTranslateByte
    devicenrf2401.o(i.xNrfWriteRegisterOfBuffer) refers to devicenrf2401.o(i.xSpiTranslateByte) for xSpiTranslateByte
    ch451stask.o(i.AppCh451sTask) refers to devicech451s.o(i.vCh451sInit) for vCh451sInit
    ch451stask.o(i.AppCh451sTask) refers to timertask.o(i.vTimerTaskStart) for vTimerTaskStart
    ch451stask.o(i.AppCh451sTask) refers to rtx_delay.o(.text.osDelay) for osDelay
    ch451stask.o(i.AppCh451sTask) refers to periphtimer.o(i.vTimerRobotInit) for vTimerRobotInit
    ch451stask.o(i.AppCh451sTask) refers to devicech451s.o(i.vCh451sDisplay) for vCh451sDisplay
    ch451stask.o(i.vCh451sTaskStart) refers to rtx_thread.o(.text.osThreadNew) for osThreadNew
    ch451stask.o(i.vCh451sTaskStart) refers to ch451stask.o(.data) for .data
    ch451stask.o(i.vCh451sTaskStart) refers to ch451stask.o(i.AppCh451sTask) for AppCh451sTask
    ch451stask.o(.data) refers to ch451stask.o(.conststring) for .conststring
    ch451stask.o(.data) refers to ch451stask.o(.bss) for Ch451sTaskStack
    bluetoothreceivertask.o(i.AppBluetoothTask) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for osMessageQueueGet
    bluetoothreceivertask.o(i.AppBluetoothTask) refers to bluetoothprotocol.o(i.xParseBluetoothProtocol) for xParseBluetoothProtocol
    bluetoothreceivertask.o(i.AppBluetoothTask) refers to motoupdowncontroltask.o(i.vMotoUpDownTaskStart) for vMotoUpDownTaskStart
    bluetoothreceivertask.o(i.AppBluetoothTask) refers to motocontroltask.o(i.vMotoControlTaskStop) for vMotoControlTaskStop
    bluetoothreceivertask.o(i.AppBluetoothTask) refers to motocontroltask.o(i.vMotoControlTaskStart) for vMotoControlTaskStart
    bluetoothreceivertask.o(i.AppBluetoothTask) refers to bluetoothreceivertask.o(.data) for .data
    bluetoothreceivertask.o(i.AppBluetoothTask) refers to bluetoothreceivertask.o(.bss) for .bss
    bluetoothreceivertask.o(i.vBluetoothTaskStart) refers to rtx_msgqueue.o(.text.osMessageQueueNew) for osMessageQueueNew
    bluetoothreceivertask.o(i.vBluetoothTaskStart) refers to rtx_thread.o(.text.osThreadNew) for osThreadNew
    bluetoothreceivertask.o(i.vBluetoothTaskStart) refers to bluetoothreceivertask.o(.data) for .data
    bluetoothreceivertask.o(i.vBluetoothTaskStart) refers to bluetoothreceivertask.o(i.AppBluetoothTask) for AppBluetoothTask
    bluetoothreceivertask.o(.data) refers to bluetoothreceivertask.o(.conststring) for .conststring
    bluetoothreceivertask.o(.data) refers to bluetoothreceivertask.o(.bss) for BluetoothTaskStack
    timertask.o(i.AppSensOstepDataUpdateTimer) refers to periphtimer.o(i.xGetRobot1Cycle) for xGetRobot1Cycle
    timertask.o(i.AppSensOstepDataUpdateTimer) refers to periphtimer.o(i.xGetRobot2Cycle) for xGetRobot2Cycle
    timertask.o(i.AppSensOstepDataUpdateTimer) refers to bluetoothprotocol.o(i.vCreateUpdateSensOstepDataProtocol) for vCreateUpdateSensOstepDataProtocol
    timertask.o(i.AppSensOstepDataUpdateTimer) refers to devicebluetooth.o(i.vBluetoothWriteByteArray) for vBluetoothWriteByteArray
    timertask.o(i.AppSensOstepDataUpdateTimer) refers to timertask.o(.bss) for .bss
    timertask.o(i.vTimerTaskStart) refers to rtx_timer.o(.text.osTimerNew) for osTimerNew
    timertask.o(i.vTimerTaskStart) refers to rtx_timer.o(.text.osTimerStart) for osTimerStart
    timertask.o(i.vTimerTaskStart) refers to timertask.o(i.AppSensOstepDataUpdateTimer) for AppSensOstepDataUpdateTimer
    timertask.o(i.vTimerTaskStart) refers to timertask.o(.data) for .data
    motocontroltask.o(i.AppMotoControlTask) refers to motocontroltask.o(i.vDoorMotoDown) for vDoorMotoDown
    motocontroltask.o(i.AppMotoControlTask) refers to rtx_thread.o(.text.osThreadExit) for osThreadExit
    motocontroltask.o(i.AppMotoControlTask) refers to motocontroltask.o(.data) for .data
    motocontroltask.o(i.vDoorMotoDown) refers to device74hc165.o(i.x74HC165ReadByte) for x74HC165ReadByte
    motocontroltask.o(i.vDoorMotoDown) refers to devicemoto.o(i.vMotoDisableAll) for vMotoDisableAll
    motocontroltask.o(i.vDoorMotoDown) refers to rtx_delay.o(.text.osDelay) for osDelay
    motocontroltask.o(i.vDoorMotoDown) refers to devicemoto.o(i.vMotoSelect) for vMotoSelect
    motocontroltask.o(i.vDoorMotoDown) refers to devicemoto.o(i.vMotoSetDir) for vMotoSetDir
    motocontroltask.o(i.vDoorMotoUp) refers to device74hc165.o(i.x74HC165ReadByte) for x74HC165ReadByte
    motocontroltask.o(i.vDoorMotoUp) refers to devicemoto.o(i.vMotoDisableAll) for vMotoDisableAll
    motocontroltask.o(i.vDoorMotoUp) refers to rtx_delay.o(.text.osDelay) for osDelay
    motocontroltask.o(i.vDoorMotoUp) refers to devicemoto.o(i.vMotoSelect) for vMotoSelect
    motocontroltask.o(i.vDoorMotoUp) refers to devicemoto.o(i.vMotoSetDir) for vMotoSetDir
    motocontroltask.o(i.vMotoControlTaskStart) refers to rtx_thread.o(.text.osThreadNew) for osThreadNew
    motocontroltask.o(i.vMotoControlTaskStart) refers to motocontroltask.o(.constdata) for .constdata
    motocontroltask.o(i.vMotoControlTaskStart) refers to motocontroltask.o(i.AppMotoControlTask) for AppMotoControlTask
    motocontroltask.o(i.vMotoControlTaskStart) refers to motocontroltask.o(.data) for .data
    motocontroltask.o(i.vMotoControlTaskStop) refers to rtx_thread.o(.text.osThreadTerminate) for osThreadTerminate
    motocontroltask.o(i.vMotoControlTaskStop) refers to motocontroltask.o(.data) for .data
    motocontroltask.o(i.vShipmentMotoDown) refers to devicemoto.o(i.vMotoDisableAll) for vMotoDisableAll
    motocontroltask.o(i.vShipmentMotoDown) refers to rtx_delay.o(.text.osDelay) for osDelay
    motocontroltask.o(i.vShipmentMotoDown) refers to devicemoto.o(i.vMotoSelect) for vMotoSelect
    motocontroltask.o(i.vShipmentMotoDown) refers to devicemoto.o(i.vMotoSetDir) for vMotoSetDir
    motocontroltask.o(i.vShipmentMotoUp) refers to devicemoto.o(i.vMotoDisableAll) for vMotoDisableAll
    motocontroltask.o(i.vShipmentMotoUp) refers to rtx_delay.o(.text.osDelay) for osDelay
    motocontroltask.o(i.vShipmentMotoUp) refers to devicemoto.o(i.vMotoSelect) for vMotoSelect
    motocontroltask.o(i.vShipmentMotoUp) refers to devicemoto.o(i.vMotoSetDir) for vMotoSetDir
    motocontroltask.o(i.vShipmentMotoUp) refers to device74hc165.o(i.x74HC165ReadByte) for x74HC165ReadByte
    motocontroltask.o(.constdata) refers to motocontroltask.o(.conststring) for .conststring
    motocontroltask.o(.constdata) refers to motocontroltask.o(.bss) for MotoTaskStack
    motoupdowncontroltask.o(i.AppMotoUpDownTask) refers to devicemoto.o(i.vMotoDisableAll) for vMotoDisableAll
    motoupdowncontroltask.o(i.AppMotoUpDownTask) refers to rtx_delay.o(.text.osDelay) for osDelay
    motoupdowncontroltask.o(i.AppMotoUpDownTask) refers to devicemoto.o(i.vMotoSelect) for vMotoSelect
    motoupdowncontroltask.o(i.AppMotoUpDownTask) refers to devicemoto.o(i.vMotoSetDir) for vMotoSetDir
    motoupdowncontroltask.o(i.AppMotoUpDownTask) refers to rtx_thread.o(.text.osThreadExit) for osThreadExit
    motoupdowncontroltask.o(i.AppMotoUpDownTask) refers to motoupdowncontroltask.o(.data) for .data
    motoupdowncontroltask.o(i.vMotoUpDownTaskStart) refers to rtx_thread.o(.text.osThreadTerminate) for osThreadTerminate
    motoupdowncontroltask.o(i.vMotoUpDownTaskStart) refers to rtx_thread.o(.text.osThreadNew) for osThreadNew
    motoupdowncontroltask.o(i.vMotoUpDownTaskStart) refers to motoupdowncontroltask.o(.data) for .data
    motoupdowncontroltask.o(i.vMotoUpDownTaskStart) refers to motoupdowncontroltask.o(i.AppMotoUpDownTask) for AppMotoUpDownTask
    motoupdowncontroltask.o(i.vMotoUpDownTaskStop) refers to rtx_thread.o(.text.osThreadTerminate) for osThreadTerminate
    motoupdowncontroltask.o(i.vMotoUpDownTaskStop) refers to motoupdowncontroltask.o(.data) for .data
    statuschecktask.o(i.AppStatusCheckTask) refers to device74hc165.o(i.x74HC165ReadByte) for x74HC165ReadByte
    statuschecktask.o(i.AppStatusCheckTask) refers to rtx_delay.o(.text.osDelay) for osDelay
    statuschecktask.o(i.AppStatusCheckTask) refers to bluetoothprotocol.o(i.vCreateReportStatusDataProtocol) for vCreateReportStatusDataProtocol
    statuschecktask.o(i.AppStatusCheckTask) refers to devicebluetooth.o(i.vBluetoothWriteByteArray) for vBluetoothWriteByteArray
    statuschecktask.o(i.vStartStatusCheckTask) refers to statuschecktask.o(i.vStopStatusCheckTask) for vStopStatusCheckTask
    statuschecktask.o(i.vStartStatusCheckTask) refers to rtx_thread.o(.text.osThreadNew) for osThreadNew
    statuschecktask.o(i.vStartStatusCheckTask) refers to statuschecktask.o(.constdata) for .constdata
    statuschecktask.o(i.vStartStatusCheckTask) refers to statuschecktask.o(i.AppStatusCheckTask) for AppStatusCheckTask
    statuschecktask.o(i.vStartStatusCheckTask) refers to statuschecktask.o(.data) for .data
    statuschecktask.o(i.vStopStatusCheckTask) refers to rtx_thread.o(.text.osThreadTerminate) for osThreadTerminate
    statuschecktask.o(i.vStopStatusCheckTask) refers to statuschecktask.o(.data) for .data
    statuschecktask.o(.constdata) refers to statuschecktask.o(.conststring) for .conststring
    statuschecktask.o(.constdata) refers to statuschecktask.o(.bss) for StatusCheckTaskStack
    usb_dcd.o(i.DCD_DevConnect) refers to usb_bsp.o(i.USB_OTG_BSP_mDelay) for USB_OTG_BSP_mDelay
    usb_dcd.o(i.DCD_DevDisconnect) refers to usb_bsp.o(i.USB_OTG_BSP_mDelay) for USB_OTG_BSP_mDelay
    usb_dcd.o(i.DCD_EP_Close) refers to usb_core.o(i.USB_OTG_EPDeactivate) for USB_OTG_EPDeactivate
    usb_dcd.o(i.DCD_EP_ClrStall) refers to usb_core.o(i.USB_OTG_EPClearStall) for USB_OTG_EPClearStall
    usb_dcd.o(i.DCD_EP_Flush) refers to usb_core.o(i.USB_OTG_FlushTxFifo) for USB_OTG_FlushTxFifo
    usb_dcd.o(i.DCD_EP_Flush) refers to usb_core.o(i.USB_OTG_FlushRxFifo) for USB_OTG_FlushRxFifo
    usb_dcd.o(i.DCD_EP_Open) refers to usb_core.o(i.USB_OTG_EPActivate) for USB_OTG_EPActivate
    usb_dcd.o(i.DCD_EP_PrepareRx) refers to usb_core.o(i.USB_OTG_EPStartXfer) for USB_OTG_EPStartXfer
    usb_dcd.o(i.DCD_EP_PrepareRx) refers to usb_core.o(i.USB_OTG_EP0StartXfer) for USB_OTG_EP0StartXfer
    usb_dcd.o(i.DCD_EP_Stall) refers to usb_core.o(i.USB_OTG_EPSetStall) for USB_OTG_EPSetStall
    usb_dcd.o(i.DCD_EP_Tx) refers to usb_core.o(i.USB_OTG_EPStartXfer) for USB_OTG_EPStartXfer
    usb_dcd.o(i.DCD_EP_Tx) refers to usb_core.o(i.USB_OTG_EP0StartXfer) for USB_OTG_EP0StartXfer
    usb_dcd.o(i.DCD_GetEPStatus) refers to usb_core.o(i.USB_OTG_GetEPStatus) for USB_OTG_GetEPStatus
    usb_dcd.o(i.DCD_Init) refers to usb_core.o(i.USB_OTG_SelectCore) for USB_OTG_SelectCore
    usb_dcd.o(i.DCD_Init) refers to usb_core.o(i.USB_OTG_DisableGlobalInt) for USB_OTG_DisableGlobalInt
    usb_dcd.o(i.DCD_Init) refers to usb_core.o(i.USB_OTG_CoreInit) for USB_OTG_CoreInit
    usb_dcd.o(i.DCD_Init) refers to usb_core.o(i.USB_OTG_SetCurrentMode) for USB_OTG_SetCurrentMode
    usb_dcd.o(i.DCD_Init) refers to usb_core.o(i.USB_OTG_CoreInitDev) for USB_OTG_CoreInitDev
    usb_dcd.o(i.DCD_Init) refers to usb_core.o(i.USB_OTG_EnableGlobalInt) for USB_OTG_EnableGlobalInt
    usb_dcd.o(i.DCD_SetEPStatus) refers to usb_core.o(i.USB_OTG_SetEPStatus) for USB_OTG_SetEPStatus
    usb_dcd_int.o(i.DCD_HandleInEP_ISR) refers to usb_core.o(i.USB_OTG_ReadDevAllInEPItr) for USB_OTG_ReadDevAllInEPItr
    usb_dcd_int.o(i.DCD_HandleInEP_ISR) refers to usb_core.o(i.USB_OTG_EP0_OutStart) for USB_OTG_EP0_OutStart
    usb_dcd_int.o(i.DCD_HandleInEP_ISR) refers to usb_dcd_int.o(i.DCD_WriteEmptyTxFifo) for DCD_WriteEmptyTxFifo
    usb_dcd_int.o(i.DCD_HandleInEP_ISR) refers to usbd_core.o(.data) for USBD_DCD_INT_fops
    usb_dcd_int.o(i.DCD_HandleOutEP_ISR) refers to usb_core.o(i.USB_OTG_ReadDevAllOutEp_itr) for USB_OTG_ReadDevAllOutEp_itr
    usb_dcd_int.o(i.DCD_HandleOutEP_ISR) refers to usb_core.o(i.USB_OTG_ReadDevOutEP_itr) for USB_OTG_ReadDevOutEP_itr
    usb_dcd_int.o(i.DCD_HandleOutEP_ISR) refers to usb_core.o(i.USB_OTG_EP0_OutStart) for USB_OTG_EP0_OutStart
    usb_dcd_int.o(i.DCD_HandleOutEP_ISR) refers to usbd_core.o(.data) for USBD_DCD_INT_fops
    usb_dcd_int.o(i.DCD_HandleRxStatusQueueLevel_ISR) refers to usb_core.o(i.USB_OTG_ReadPacket) for USB_OTG_ReadPacket
    usb_dcd_int.o(i.DCD_HandleUSBSuspend_ISR) refers to usbd_core.o(.data) for USBD_DCD_INT_fops
    usb_dcd_int.o(i.DCD_HandleUsbReset_ISR) refers to usb_core.o(i.USB_OTG_FlushTxFifo) for USB_OTG_FlushTxFifo
    usb_dcd_int.o(i.DCD_HandleUsbReset_ISR) refers to usb_core.o(i.USB_OTG_EP0_OutStart) for USB_OTG_EP0_OutStart
    usb_dcd_int.o(i.DCD_HandleUsbReset_ISR) refers to usbd_core.o(.data) for USBD_DCD_INT_fops
    usb_dcd_int.o(i.DCD_WriteEmptyTxFifo) refers to usb_core.o(i.USB_OTG_WritePacket) for USB_OTG_WritePacket
    usb_dcd_int.o(i.DCD_WriteEmptyTxFifo) refers to usb_dcd_int.o(.data) for .data
    usb_dcd_int.o(i.USBD_OTG_ISR_Handler) refers to usb_core.o(i.USB_OTG_IsDeviceMode) for USB_OTG_IsDeviceMode
    usb_dcd_int.o(i.USBD_OTG_ISR_Handler) refers to usb_core.o(i.USB_OTG_ReadCoreItr) for USB_OTG_ReadCoreItr
    usb_dcd_int.o(i.USBD_OTG_ISR_Handler) refers to usb_dcd_int.o(i.DCD_HandleOutEP_ISR) for DCD_HandleOutEP_ISR
    usb_dcd_int.o(i.USBD_OTG_ISR_Handler) refers to usb_dcd_int.o(i.DCD_HandleInEP_ISR) for DCD_HandleInEP_ISR
    usb_dcd_int.o(i.USBD_OTG_ISR_Handler) refers to usb_dcd_int.o(i.DCD_HandleUSBSuspend_ISR) for DCD_HandleUSBSuspend_ISR
    usb_dcd_int.o(i.USBD_OTG_ISR_Handler) refers to usb_dcd_int.o(i.DCD_HandleRxStatusQueueLevel_ISR) for DCD_HandleRxStatusQueueLevel_ISR
    usb_dcd_int.o(i.USBD_OTG_ISR_Handler) refers to usb_dcd_int.o(i.DCD_HandleUsbReset_ISR) for DCD_HandleUsbReset_ISR
    usb_dcd_int.o(i.USBD_OTG_ISR_Handler) refers to usb_core.o(i.USB_OTG_EP0Activate) for USB_OTG_EP0Activate
    usb_dcd_int.o(i.USBD_OTG_ISR_Handler) refers to usb_core.o(i.USB_OTG_GetDeviceSpeed) for USB_OTG_GetDeviceSpeed
    usb_dcd_int.o(i.USBD_OTG_ISR_Handler) refers to usbd_core.o(.data) for USBD_DCD_INT_fops
    usb_core.o(i.USB_OTG_ActiveRemoteWakeup) refers to usb_bsp.o(i.USB_OTG_BSP_mDelay) for USB_OTG_BSP_mDelay
    usb_core.o(i.USB_OTG_CoreInit) refers to usb_core.o(i.USB_OTG_CoreReset) for USB_OTG_CoreReset
    usb_core.o(i.USB_OTG_CoreInit) refers to usb_bsp.o(i.USB_OTG_BSP_mDelay) for USB_OTG_BSP_mDelay
    usb_core.o(i.USB_OTG_CoreInitDev) refers to usb_core.o(i.USB_OTG_InitDevSpeed) for USB_OTG_InitDevSpeed
    usb_core.o(i.USB_OTG_CoreInitDev) refers to usb_core.o(i.USB_OTG_FlushTxFifo) for USB_OTG_FlushTxFifo
    usb_core.o(i.USB_OTG_CoreInitDev) refers to usb_core.o(i.USB_OTG_FlushRxFifo) for USB_OTG_FlushRxFifo
    usb_core.o(i.USB_OTG_CoreInitDev) refers to usb_core.o(i.USB_OTG_EnableDevInt) for USB_OTG_EnableDevInt
    usb_core.o(i.USB_OTG_CoreReset) refers to usb_bsp.o(i.USB_OTG_BSP_uDelay) for USB_OTG_BSP_uDelay
    usb_core.o(i.USB_OTG_EPStartXfer) refers to usb_core.o(i.USB_OTG_WritePacket) for USB_OTG_WritePacket
    usb_core.o(i.USB_OTG_FlushRxFifo) refers to usb_bsp.o(i.USB_OTG_BSP_uDelay) for USB_OTG_BSP_uDelay
    usb_core.o(i.USB_OTG_FlushTxFifo) refers to usb_bsp.o(i.USB_OTG_BSP_uDelay) for USB_OTG_BSP_uDelay
    usb_core.o(i.USB_OTG_SetCurrentMode) refers to usb_bsp.o(i.USB_OTG_BSP_mDelay) for USB_OTG_BSP_mDelay
    usb_core.o(i.USB_OTG_SetEPStatus) refers to usb_core.o(i.USB_OTG_EPSetStall) for USB_OTG_EPSetStall
    usb_core.o(i.USB_OTG_SetEPStatus) refers to usb_core.o(i.USB_OTG_EPClearStall) for USB_OTG_EPClearStall
    usb_core.o(i.USB_OTG_StopDevice) refers to usb_core.o(i.USB_OTG_FlushRxFifo) for USB_OTG_FlushRxFifo
    usb_core.o(i.USB_OTG_StopDevice) refers to usb_core.o(i.USB_OTG_FlushTxFifo) for USB_OTG_FlushTxFifo
    usbd_core.o(i.USBD_DataInStage) refers to usbd_ioreq.o(i.USBD_CtlContinueSendData) for USBD_CtlContinueSendData
    usbd_core.o(i.USBD_DataInStage) refers to usbd_ioreq.o(i.USBD_CtlReceiveStatus) for USBD_CtlReceiveStatus
    usbd_core.o(i.USBD_DataInStage) refers to usbd_core.o(.data) for .data
    usbd_core.o(i.USBD_DataOutStage) refers to usbd_ioreq.o(i.USBD_CtlContinueRx) for USBD_CtlContinueRx
    usbd_core.o(i.USBD_DataOutStage) refers to usbd_ioreq.o(i.USBD_CtlSendStatus) for USBD_CtlSendStatus
    usbd_core.o(i.USBD_Init) refers to usb_bsp.o(i.USB_OTG_BSP_Init) for USB_OTG_BSP_Init
    usbd_core.o(i.USBD_Init) refers to usb_dcd.o(i.DCD_Init) for DCD_Init
    usbd_core.o(i.USBD_Init) refers to usb_bsp.o(i.USB_OTG_BSP_EnableInterrupt) for USB_OTG_BSP_EnableInterrupt
    usbd_core.o(i.USBD_Reset) refers to usb_dcd.o(i.DCD_EP_Open) for DCD_EP_Open
    usbd_core.o(i.USBD_SetupStage) refers to usbd_req.o(i.USBD_ParseSetupRequest) for USBD_ParseSetupRequest
    usbd_core.o(i.USBD_SetupStage) refers to usb_dcd.o(i.DCD_EP_Stall) for DCD_EP_Stall
    usbd_core.o(i.USBD_SetupStage) refers to usbd_req.o(i.USBD_StdDevReq) for USBD_StdDevReq
    usbd_core.o(i.USBD_SetupStage) refers to usbd_req.o(i.USBD_StdItfReq) for USBD_StdItfReq
    usbd_core.o(i.USBD_SetupStage) refers to usbd_req.o(i.USBD_StdEPReq) for USBD_StdEPReq
    usbd_core.o(.data) refers to usbd_core.o(i.USBD_DataOutStage) for USBD_DataOutStage
    usbd_core.o(.data) refers to usbd_core.o(i.USBD_DataInStage) for USBD_DataInStage
    usbd_core.o(.data) refers to usbd_core.o(i.USBD_SetupStage) for USBD_SetupStage
    usbd_core.o(.data) refers to usbd_core.o(i.USBD_SOF) for USBD_SOF
    usbd_core.o(.data) refers to usbd_core.o(i.USBD_Reset) for USBD_Reset
    usbd_core.o(.data) refers to usbd_core.o(i.USBD_Suspend) for USBD_Suspend
    usbd_core.o(.data) refers to usbd_core.o(i.USBD_Resume) for USBD_Resume
    usbd_core.o(.data) refers to usbd_core.o(i.USBD_IsoINIncomplete) for USBD_IsoINIncomplete
    usbd_core.o(.data) refers to usbd_core.o(i.USBD_IsoOUTIncomplete) for USBD_IsoOUTIncomplete
    usbd_core.o(.data) refers to usbd_core.o(.data) for USBD_DCD_INT_cb
    usbd_ioreq.o(i.USBD_CtlContinueRx) refers to usb_dcd.o(i.DCD_EP_PrepareRx) for DCD_EP_PrepareRx
    usbd_ioreq.o(i.USBD_CtlContinueSendData) refers to usb_dcd.o(i.DCD_EP_Tx) for DCD_EP_Tx
    usbd_ioreq.o(i.USBD_CtlPrepareRx) refers to usb_dcd.o(i.DCD_EP_PrepareRx) for DCD_EP_PrepareRx
    usbd_ioreq.o(i.USBD_CtlReceiveStatus) refers to usb_dcd.o(i.DCD_EP_PrepareRx) for DCD_EP_PrepareRx
    usbd_ioreq.o(i.USBD_CtlReceiveStatus) refers to usb_core.o(i.USB_OTG_EP0_OutStart) for USB_OTG_EP0_OutStart
    usbd_ioreq.o(i.USBD_CtlSendData) refers to usb_dcd.o(i.DCD_EP_Tx) for DCD_EP_Tx
    usbd_ioreq.o(i.USBD_CtlSendStatus) refers to usb_dcd.o(i.DCD_EP_Tx) for DCD_EP_Tx
    usbd_ioreq.o(i.USBD_CtlSendStatus) refers to usb_core.o(i.USB_OTG_EP0_OutStart) for USB_OTG_EP0_OutStart
    usbd_req.o(i.USBD_CtlError) refers to usb_dcd.o(i.DCD_EP_Stall) for DCD_EP_Stall
    usbd_req.o(i.USBD_CtlError) refers to usb_core.o(i.USB_OTG_EP0_OutStart) for USB_OTG_EP0_OutStart
    usbd_req.o(i.USBD_GetDescriptor) refers to usbd_ioreq.o(i.USBD_CtlSendData) for USBD_CtlSendData
    usbd_req.o(i.USBD_GetDescriptor) refers to usbd_req.o(i.USBD_CtlError) for USBD_CtlError
    usbd_req.o(i.USBD_SetConfig) refers to usbd_req.o(i.USBD_CtlError) for USBD_CtlError
    usbd_req.o(i.USBD_SetConfig) refers to usbd_core.o(i.USBD_ClrCfg) for USBD_ClrCfg
    usbd_req.o(i.USBD_SetConfig) refers to usbd_core.o(i.USBD_SetCfg) for USBD_SetCfg
    usbd_req.o(i.USBD_SetConfig) refers to usbd_ioreq.o(i.USBD_CtlSendStatus) for USBD_CtlSendStatus
    usbd_req.o(i.USBD_SetConfig) refers to usbd_req.o(.data) for .data
    usbd_req.o(i.USBD_SetFeature) refers to usbd_ioreq.o(i.USBD_CtlSendStatus) for USBD_CtlSendStatus
    usbd_req.o(i.USBD_SetFeature) refers to usbd_core.o(.data) for SET_TEST_MODE
    usbd_req.o(i.USBD_StdDevReq) refers to usbd_req.o(i.USBD_GetDescriptor) for USBD_GetDescriptor
    usbd_req.o(i.USBD_StdDevReq) refers to usb_dcd.o(i.DCD_EP_SetAddress) for DCD_EP_SetAddress
    usbd_req.o(i.USBD_StdDevReq) refers to usbd_ioreq.o(i.USBD_CtlSendStatus) for USBD_CtlSendStatus
    usbd_req.o(i.USBD_StdDevReq) refers to usbd_req.o(i.USBD_SetConfig) for USBD_SetConfig
    usbd_req.o(i.USBD_StdDevReq) refers to usbd_req.o(i.USBD_CtlError) for USBD_CtlError
    usbd_req.o(i.USBD_StdDevReq) refers to usbd_ioreq.o(i.USBD_CtlSendData) for USBD_CtlSendData
    usbd_req.o(i.USBD_StdDevReq) refers to usbd_req.o(i.USBD_SetFeature) for USBD_SetFeature
    usbd_req.o(i.USBD_StdDevReq) refers to usbd_req.o(.data) for .data
    usbd_req.o(i.USBD_StdEPReq) refers to usb_dcd.o(i.DCD_EP_Stall) for DCD_EP_Stall
    usbd_req.o(i.USBD_StdEPReq) refers to usb_dcd.o(i.DCD_EP_ClrStall) for DCD_EP_ClrStall
    usbd_req.o(i.USBD_StdEPReq) refers to usbd_ioreq.o(i.USBD_CtlSendStatus) for USBD_CtlSendStatus
    usbd_req.o(i.USBD_StdEPReq) refers to usbd_req.o(i.USBD_CtlError) for USBD_CtlError
    usbd_req.o(i.USBD_StdEPReq) refers to usbd_ioreq.o(i.USBD_CtlSendData) for USBD_CtlSendData
    usbd_req.o(i.USBD_StdEPReq) refers to usbd_req.o(.data) for .data
    usbd_req.o(i.USBD_StdItfReq) refers to usbd_ioreq.o(i.USBD_CtlSendStatus) for USBD_CtlSendStatus
    usbd_req.o(i.USBD_StdItfReq) refers to usbd_req.o(i.USBD_CtlError) for USBD_CtlError
    usbd_hid_core.o(i.USBD_Bulk_Send_ep1) refers to usb_dcd.o(i.DCD_EP_Tx) for DCD_EP_Tx
    usbd_hid_core.o(i.USBD_Bulk_Send_ep2) refers to usb_dcd.o(i.DCD_EP_Tx) for DCD_EP_Tx
    usbd_hid_core.o(i.USBD_HID_DataIn) refers to usb_dcd.o(i.DCD_EP_Flush) for DCD_EP_Flush
    usbd_hid_core.o(i.USBD_HID_DataOut) refers to usb_dcd.o(i.DCD_EP_PrepareRx) for DCD_EP_PrepareRx
    usbd_hid_core.o(i.USBD_HID_DataOut) refers to usb_dcd.o(.bss) for HIDRxBuf
    usbd_hid_core.o(i.USBD_HID_DataOut) refers to usb_dcd_int.o(.data) for send_flag_ep1
    usbd_hid_core.o(i.USBD_HID_DataOut) refers to usb_dcd.o(.bss) for MassBuf
    usbd_hid_core.o(i.USBD_HID_DataOut) refers to usb_dcd_int.o(.data) for send_flag_ep2
    usbd_hid_core.o(i.USBD_HID_DeInit) refers to usb_dcd.o(i.DCD_EP_Close) for DCD_EP_Close
    usbd_hid_core.o(i.USBD_HID_GetCfgDesc) refers to usbd_hid_core.o(.data) for .data
    usbd_hid_core.o(i.USBD_HID_Init) refers to usb_dcd.o(i.DCD_EP_Open) for DCD_EP_Open
    usbd_hid_core.o(i.USBD_HID_Init) refers to usb_dcd.o(i.DCD_EP_PrepareRx) for DCD_EP_PrepareRx
    usbd_hid_core.o(i.USBD_HID_Init) refers to usb_dcd.o(.bss) for HIDRxBuf
    usbd_hid_core.o(i.USBD_HID_Init) refers to usb_dcd.o(.bss) for MassBuf
    usbd_hid_core.o(i.USBD_HID_Setup) refers to usbd_req.o(i.USBD_CtlError) for USBD_CtlError
    usbd_hid_core.o(i.USBD_HID_Setup) refers to usbd_ioreq.o(i.USBD_CtlSendData) for USBD_CtlSendData
    usbd_hid_core.o(i.USBD_HID_Setup) refers to usbd_hid_core.o(.data) for .data
    usbd_hid_core.o(.data) refers to usbd_hid_core.o(i.USBD_HID_Init) for USBD_HID_Init
    usbd_hid_core.o(.data) refers to usbd_hid_core.o(i.USBD_HID_DeInit) for USBD_HID_DeInit
    usbd_hid_core.o(.data) refers to usbd_hid_core.o(i.USBD_HID_Setup) for USBD_HID_Setup
    usbd_hid_core.o(.data) refers to usbd_hid_core.o(i.USBD_HID_DataIn) for USBD_HID_DataIn
    usbd_hid_core.o(.data) refers to usbd_hid_core.o(i.USBD_HID_DataOut) for USBD_HID_DataOut
    usbd_hid_core.o(.data) refers to usbd_hid_core.o(i.USBD_HID_GetCfgDesc) for USBD_HID_GetCfgDesc
    usbd_usr.o(i.usbd_CloseUsb) refers to usb_dcd.o(i.DCD_DevDisconnect) for DCD_DevDisconnect
    usbd_usr.o(i.usbd_CloseUsb) refers to usbd_usr.o(.bss) for .bss
    usbd_usr.o(i.usbd_OpenUsb) refers to usbd_core.o(i.USBD_Init) for USBD_Init
    usbd_usr.o(i.usbd_OpenUsb) refers to usbd_usr.o(.data) for .data
    usbd_usr.o(i.usbd_OpenUsb) refers to usbd_hid_core.o(.data) for USBD_HID_cb
    usbd_usr.o(i.usbd_OpenUsb) refers to usbd_desc.o(.data) for USR_desc
    usbd_usr.o(i.usbd_OpenUsb) refers to usbd_usr.o(.bss) for .bss
    usbd_usr.o(.data) refers to usbd_usr.o(i.USBD_USR_Init) for USBD_USR_Init
    usbd_usr.o(.data) refers to usbd_usr.o(i.USBD_USR_DeviceReset) for USBD_USR_DeviceReset
    usbd_usr.o(.data) refers to usbd_usr.o(i.USBD_USR_DeviceConfigured) for USBD_USR_DeviceConfigured
    usbd_usr.o(.data) refers to usbd_usr.o(i.USBD_USR_DeviceSuspended) for USBD_USR_DeviceSuspended
    usbd_usr.o(.data) refers to usbd_usr.o(i.USBD_USR_DeviceResumed) for USBD_USR_DeviceResumed
    usbd_usr.o(.data) refers to usbd_usr.o(i.USBD_USR_DeviceConnected) for USBD_USR_DeviceConnected
    usbd_usr.o(.data) refers to usbd_usr.o(i.USBD_USR_DeviceDisconnected) for USBD_USR_DeviceDisconnected
    usbd_desc.o(i.USBD_USR_ConfigStrDescriptor) refers to usbd_req.o(i.USBD_GetString) for USBD_GetString
    usbd_desc.o(i.USBD_USR_ConfigStrDescriptor) refers to usbd_req.o(.bss) for USBD_StrDesc
    usbd_desc.o(i.USBD_USR_DeviceDescriptor) refers to usbd_desc.o(.data) for .data
    usbd_desc.o(i.USBD_USR_InterfaceStrDescriptor) refers to usbd_req.o(i.USBD_GetString) for USBD_GetString
    usbd_desc.o(i.USBD_USR_InterfaceStrDescriptor) refers to usbd_req.o(.bss) for USBD_StrDesc
    usbd_desc.o(i.USBD_USR_LangIDStrDescriptor) refers to usbd_desc.o(.data) for .data
    usbd_desc.o(i.USBD_USR_ManufacturerStrDescriptor) refers to usbd_req.o(i.USBD_GetString) for USBD_GetString
    usbd_desc.o(i.USBD_USR_ManufacturerStrDescriptor) refers to usbd_req.o(.bss) for USBD_StrDesc
    usbd_desc.o(i.USBD_USR_ProductStrDescriptor) refers to usbd_req.o(i.USBD_GetString) for USBD_GetString
    usbd_desc.o(i.USBD_USR_ProductStrDescriptor) refers to usbd_req.o(.bss) for USBD_StrDesc
    usbd_desc.o(i.USBD_USR_SerialStrDescriptor) refers to usbd_req.o(i.USBD_GetString) for USBD_GetString
    usbd_desc.o(i.USBD_USR_SerialStrDescriptor) refers to usbd_req.o(.bss) for USBD_StrDesc
    usbd_desc.o(.data) refers to usbd_desc.o(i.USBD_USR_DeviceDescriptor) for USBD_USR_DeviceDescriptor
    usbd_desc.o(.data) refers to usbd_desc.o(i.USBD_USR_LangIDStrDescriptor) for USBD_USR_LangIDStrDescriptor
    usbd_desc.o(.data) refers to usbd_desc.o(i.USBD_USR_ManufacturerStrDescriptor) for USBD_USR_ManufacturerStrDescriptor
    usbd_desc.o(.data) refers to usbd_desc.o(i.USBD_USR_ProductStrDescriptor) for USBD_USR_ProductStrDescriptor
    usbd_desc.o(.data) refers to usbd_desc.o(i.USBD_USR_SerialStrDescriptor) for USBD_USR_SerialStrDescriptor
    usbd_desc.o(.data) refers to usbd_desc.o(i.USBD_USR_ConfigStrDescriptor) for USBD_USR_ConfigStrDescriptor
    usbd_desc.o(.data) refers to usbd_desc.o(i.USBD_USR_InterfaceStrDescriptor) for USBD_USR_InterfaceStrDescriptor
    usb_bsp.o(i.USB_OTG_BSP_mDelay) refers to usb_bsp.o(i.USB_OTG_BSP_uDelay) for USB_OTG_BSP_uDelay
    usb_it.o(i.OTG_FS_IRQHandler) refers to usb_dcd_int.o(i.USBD_OTG_ISR_Handler) for USBD_OTG_ISR_Handler
    usb_it.o(i.OTG_FS_IRQHandler) refers to usbd_usr.o(.bss) for USB_OTG_dev
    rtx_lib.o(i.__user_perthread_libspace) refers to rtx_lib.o(i.os_kernel_is_active) for os_kernel_is_active
    rtx_lib.o(i.__user_perthread_libspace) refers to rtx_thread.o(.text.osThreadGetId) for osThreadGetId
    rtx_lib.o(i.__user_perthread_libspace) refers to rtx_config.o(i.osRtxErrorNotify) for osRtxErrorNotify
    rtx_lib.o(i.__user_perthread_libspace) refers to rtx_lib.o(.bss.os.libspace) for .bss.os.libspace
    rtx_lib.o(i._mutex_acquire) refers to rtx_lib.o(i.os_kernel_is_active) for os_kernel_is_active
    rtx_lib.o(i._mutex_acquire) refers to rtx_mutex.o(.text.osMutexAcquire) for osMutexAcquire
    rtx_lib.o(i._mutex_free) refers to rtx_mutex.o(.text.osMutexDelete) for osMutexDelete
    rtx_lib.o(i._mutex_initialize) refers to rtx_mutex.o(.text.osMutexNew) for osMutexNew
    rtx_lib.o(i._mutex_initialize) refers to rtx_config.o(i.osRtxErrorNotify) for osRtxErrorNotify
    rtx_lib.o(i._mutex_release) refers to rtx_lib.o(i.os_kernel_is_active) for os_kernel_is_active
    rtx_lib.o(i._mutex_release) refers to rtx_mutex.o(.text.osMutexRelease) for osMutexRelease
    rtx_lib.o(i._platform_post_stackheap_init) refers to rtx_kernel.o(.text.osKernelInitialize) for osKernelInitialize
    rtx_lib.o(i.os_kernel_is_active) refers to rtx_kernel.o(.text.osKernelGetState) for osKernelGetState
    rtx_lib.o(i.os_kernel_is_active) refers to rtx_lib.o(.data) for .data
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.thread.cb) for os_idle_thread_cb
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.thread.stack) for os_idle_thread_stack
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.thread.cb) for os_timer_thread_cb
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.thread.stack) for os_timer_thread_stack
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.msgqueue.cb) for os_timer_mq_cb
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.msgqueue.mem) for os_timer_mq_data
    rtx_lib.o(.data) refers to irq_cm4f.o(.constdata) for irqRtxLib
    rtx_lib.o(.data.os.thread.mpi) refers to rtx_lib.o(.bss.os.thread.cb) for os_thread_cb
    rtx_lib.o(.data.os.timer.mpi) refers to rtx_lib.o(.bss.os.timer.cb) for os_timer_cb
    rtx_lib.o(.rodata) refers to rtx_lib.o(.bss.os) for os_isr_queue
    rtx_lib.o(.rodata) refers to rtx_lib.o(.bss.os) for os_mem
    rtx_lib.o(.rodata) refers to rtx_lib.o(.data.os.thread.mpi) for os_mpi_thread
    rtx_lib.o(.rodata) refers to rtx_lib.o(.data.os.timer.mpi) for os_mpi_timer
    rtx_lib.o(.rodata) refers to rtx_lib.o(.constdata) for os_idle_thread_attr
    rtx_lib.o(.rodata) refers to rtx_lib.o(.constdata) for os_timer_thread_attr
    rtx_lib.o(.rodata) refers to rtx_lib.o(.constdata) for os_timer_mq_attr
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_kernel.o(.text.svcRtxKernelInitialize) for svcRtxKernelInitialize
    rtx_kernel.o(.ARM.exidx.text.osKernelInitialize) refers to rtx_kernel.o(.text.osKernelInitialize) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetInfo) refers to rtx_kernel.o(.text.svcRtxKernelGetInfo) for svcRtxKernelGetInfo
    rtx_kernel.o(.ARM.exidx.text.osKernelGetInfo) refers to rtx_kernel.o(.text.osKernelGetInfo) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to rtx_kernel.o(.rodata.str1.4) for .L.str
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetInfo) refers to rtx_kernel.o(.text.svcRtxKernelGetInfo) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.text.svcRtxKernelGetState) for svcRtxKernelGetState
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.osKernelGetState) refers to rtx_kernel.o(.text.osKernelGetState) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetState) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetState) refers to rtx_kernel.o(.text.svcRtxKernelGetState) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelStart) refers to rtx_kernel.o(.text.svcRtxKernelStart) for svcRtxKernelStart
    rtx_kernel.o(.ARM.exidx.text.osKernelStart) refers to rtx_kernel.o(.text.osKernelStart) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelLock) refers to rtx_kernel.o(.text.svcRtxKernelLock) for svcRtxKernelLock
    rtx_kernel.o(.ARM.exidx.text.osKernelLock) refers to rtx_kernel.o(.text.osKernelLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelUnlock) refers to rtx_kernel.o(.text.svcRtxKernelUnlock) for svcRtxKernelUnlock
    rtx_kernel.o(.ARM.exidx.text.osKernelUnlock) refers to rtx_kernel.o(.text.osKernelUnlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.svcRtxKernelRestoreLock) for svcRtxKernelRestoreLock
    rtx_kernel.o(.ARM.exidx.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.osKernelRestoreLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelSuspend) refers to rtx_kernel.o(.text.svcRtxKernelSuspend) for svcRtxKernelSuspend
    rtx_kernel.o(.ARM.exidx.text.osKernelSuspend) refers to rtx_kernel.o(.text.osKernelSuspend) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelResume) refers to rtx_kernel.o(.text.svcRtxKernelResume) for svcRtxKernelResume
    rtx_kernel.o(.ARM.exidx.text.osKernelResume) refers to rtx_kernel.o(.text.osKernelResume) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetTickCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.svcRtxKernelGetTickCount) for svcRtxKernelGetTickCount
    rtx_kernel.o(.ARM.exidx.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.osKernelGetTickCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetTickCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickCount) refers to rtx_kernel.o(.text.svcRtxKernelGetTickCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetTickFreq) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetTickFreq) for svcRtxKernelGetTickFreq
    rtx_kernel.o(.ARM.exidx.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.osKernelGetTickFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetTickFreq) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetTickFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) for svcRtxKernelGetSysTimerCount
    rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.osKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetCount) for OS_Tick_GetCount
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetOverflow) for OS_Tick_GetOverflow
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetInterval) for OS_Tick_GetInterval
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerCount) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to os_systick.o(.text.OS_Tick_GetClock) for OS_Tick_GetClock
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) for svcRtxKernelGetSysTimerFreq
    rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.osKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) refers to os_systick.o(.text.OS_Tick_GetClock) for OS_Tick_GetClock
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_memory.o(.text.osRtxMemoryInit) for osRtxMemoryInit
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.text.svcRtxKernelInitialize) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadStartup) for osRtxThreadStartup
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_Setup) for OS_Tick_Setup
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_GetIRQn) for OS_Tick_GetIRQn
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_Enable) for OS_Tick_Enable
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.svcRtxKernelStart) refers to irq_cm4f.o(.text) for SysTick_Handler
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelStart) refers to rtx_kernel.o(.text.svcRtxKernelStart) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelLock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelLock) refers to rtx_kernel.o(.text.svcRtxKernelLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelUnlock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelUnlock) refers to rtx_kernel.o(.text.svcRtxKernelUnlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelRestoreLock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelRestoreLock) refers to rtx_kernel.o(.text.svcRtxKernelRestoreLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to os_systick.o(.text.OS_Tick_Disable) for OS_Tick_Disable
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.text.svcRtxKernelSuspend) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for osRtxThreadDelayTick
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_kernel.o(.text.svcRtxKernelResume) refers to os_systick.o(.text.OS_Tick_Enable) for OS_Tick_Enable
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelResume) refers to rtx_kernel.o(.text.svcRtxKernelResume) for [Anonymous Symbol]
    rtx_kernel.o(.data.os) refers to rtx_kernel.o(.rodata.str1.4) for .L.str
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListPut) refers to rtx_thread.o(.text.osRtxThreadListPut) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListGet) refers to rtx_thread.o(.text.osRtxThreadListGet) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListSort) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListRemove) refers to rtx_thread.o(.text.osRtxThreadListRemove) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadReadyPut) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_thread.o(.text.osRtxThreadReadyPut) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadReadyPut) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadRegPtr) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadSwitch) refers to rtx_lib.o(i.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.text.osRtxThreadSwitch) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadSwitch) refers to rtx_thread.o(.text.osRtxThreadSwitch) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadStackCheck) refers to rtx_config.o(i.osRtxErrorNotify) for osRtxErrorNotify
    rtx_thread.o(.text.osRtxThreadStackCheck) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadStackCheck) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadBlock) for osRtxThreadBlock
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadDispatch) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadBlock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadBlock) refers to rtx_thread.o(.text.osRtxThreadBlock) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayRemove) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayRemove) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for osRtxThreadDelayInsert
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayInsert) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayInsert) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_config.o(i.osRtxIdleThread) for osRtxIdleThread
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_timer.o(.text.osRtxTimerThread) for osRtxTimerThread
    rtx_thread.o(.ARM.exidx.text.osRtxThreadStartup) refers to rtx_thread.o(.text.osRtxThreadStartup) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.svcRtxThreadNew) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osThreadExit) for osThreadExit
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osRtxThreadPostProcess) for osRtxThreadPostProcess
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_thread.o(.ARM.exidx.text.osThreadNew) refers to rtx_thread.o(.text.osThreadNew) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetName) refers to rtx_thread.o(.text.svcRtxThreadGetName) for svcRtxThreadGetName
    rtx_thread.o(.ARM.exidx.text.osThreadGetName) refers to rtx_thread.o(.text.osThreadGetName) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetId) refers to rtx_thread.o(.text.svcRtxThreadGetId) for svcRtxThreadGetId
    rtx_thread.o(.ARM.exidx.text.osThreadGetId) refers to rtx_thread.o(.text.osThreadGetId) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetState) refers to rtx_thread.o(.text.svcRtxThreadGetState) for svcRtxThreadGetState
    rtx_thread.o(.ARM.exidx.text.osThreadGetState) refers to rtx_thread.o(.text.osThreadGetState) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetStackSize) refers to rtx_thread.o(.text.svcRtxThreadGetStackSize) for svcRtxThreadGetStackSize
    rtx_thread.o(.ARM.exidx.text.osThreadGetStackSize) refers to rtx_thread.o(.text.osThreadGetStackSize) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.svcRtxThreadGetStackSpace) for svcRtxThreadGetStackSpace
    rtx_thread.o(.ARM.exidx.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.osThreadGetStackSpace) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSetPriority) refers to rtx_thread.o(.text.svcRtxThreadSetPriority) for svcRtxThreadSetPriority
    rtx_thread.o(.ARM.exidx.text.osThreadSetPriority) refers to rtx_thread.o(.text.osThreadSetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetPriority) refers to rtx_thread.o(.text.svcRtxThreadGetPriority) for svcRtxThreadGetPriority
    rtx_thread.o(.ARM.exidx.text.osThreadGetPriority) refers to rtx_thread.o(.text.osThreadGetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadYield) refers to rtx_thread.o(.text.svcRtxThreadYield) for svcRtxThreadYield
    rtx_thread.o(.ARM.exidx.text.osThreadYield) refers to rtx_thread.o(.text.osThreadYield) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSuspend) refers to rtx_thread.o(.text.svcRtxThreadSuspend) for svcRtxThreadSuspend
    rtx_thread.o(.ARM.exidx.text.osThreadSuspend) refers to rtx_thread.o(.text.osThreadSuspend) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadResume) refers to rtx_thread.o(.text.svcRtxThreadResume) for svcRtxThreadResume
    rtx_thread.o(.ARM.exidx.text.osThreadResume) refers to rtx_thread.o(.text.osThreadResume) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadDetach) refers to rtx_thread.o(.text.svcRtxThreadDetach) for svcRtxThreadDetach
    rtx_thread.o(.ARM.exidx.text.osThreadDetach) refers to rtx_thread.o(.text.osThreadDetach) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadJoin) refers to rtx_thread.o(.text.svcRtxThreadJoin) for svcRtxThreadJoin
    rtx_thread.o(.ARM.exidx.text.osThreadJoin) refers to rtx_thread.o(.text.osThreadJoin) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadExit) refers to rtx_thread.o(.text.svcRtxThreadExit) for svcRtxThreadExit
    rtx_thread.o(.ARM.exidx.text.osThreadExit) refers to rtx_thread.o(.text.osThreadExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadTerminate) refers to rtx_thread.o(.text.svcRtxThreadTerminate) for svcRtxThreadTerminate
    rtx_thread.o(.ARM.exidx.text.osThreadTerminate) refers to rtx_thread.o(.text.osThreadTerminate) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetCount) refers to rtx_thread.o(.text.svcRtxThreadGetCount) for svcRtxThreadGetCount
    rtx_thread.o(.ARM.exidx.text.osThreadGetCount) refers to rtx_thread.o(.text.osThreadGetCount) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadEnumerate) refers to rtx_thread.o(.text.svcRtxThreadEnumerate) for svcRtxThreadEnumerate
    rtx_thread.o(.ARM.exidx.text.osThreadEnumerate) refers to rtx_thread.o(.text.osThreadEnumerate) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_thread.o(.text.svcRtxThreadFlagsSet) for svcRtxThreadFlagsSet
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsSet) refers to rtx_thread.o(.text.osThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsClear) refers to rtx_thread.o(.text.svcRtxThreadFlagsClear) for svcRtxThreadFlagsClear
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsClear) refers to rtx_thread.o(.text.osThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsGet) refers to rtx_thread.o(.text.svcRtxThreadFlagsGet) for svcRtxThreadFlagsGet
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsGet) refers to rtx_thread.o(.text.osThreadFlagsGet) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsWait) refers to rtx_thread.o(.text.svcRtxThreadFlagsWait) for svcRtxThreadFlagsWait
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsWait) refers to rtx_thread.o(.text.osThreadFlagsWait) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.ARM.exidx.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.osRtxThreadPostProcess) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.ThreadFlagsCheck) refers to rtx_thread.o(.text.ThreadFlagsCheck) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetName) refers to rtx_thread.o(.text.svcRtxThreadGetName) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetId) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetId) refers to rtx_thread.o(.text.svcRtxThreadGetId) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetState) refers to rtx_thread.o(.text.svcRtxThreadGetState) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSize) refers to rtx_thread.o(.text.svcRtxThreadGetStackSize) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetStackSpace) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSpace) refers to rtx_thread.o(.text.svcRtxThreadGetStackSpace) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.svcRtxThreadSetPriority) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetPriority) refers to rtx_thread.o(.text.svcRtxThreadGetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadYield) refers to rtx_thread.o(.text.svcRtxThreadYield) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for osRtxThreadDelayInsert
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.svcRtxThreadSuspend) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadResume) refers to rtx_thread.o(.text.svcRtxThreadResume) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for osRtxThreadListUnlink
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.svcRtxThreadDetach) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadListUnlink) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListUnlink) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadFree) refers to rtx_thread.o(.text.osRtxThreadFree) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for osRtxThreadListUnlink
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.svcRtxThreadJoin) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for osRtxMutexOwnerRelease
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadExit) refers to rtx_thread.o(.text.svcRtxThreadExit) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for osRtxMutexOwnerRelease
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.svcRtxThreadTerminate) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetCount) refers to rtx_thread.o(.text.svcRtxThreadGetCount) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadEnumerate) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadEnumerate) refers to rtx_thread.o(.text.svcRtxThreadEnumerate) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.svcRtxThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsClear) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsClear) refers to rtx_thread.o(.text.svcRtxThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsGet) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsGet) refers to rtx_thread.o(.text.svcRtxThreadFlagsGet) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.svcRtxThreadFlagsWait) for [Anonymous Symbol]
    rtx_delay.o(.text.osDelay) refers to rtx_delay.o(.text.svcRtxDelay) for svcRtxDelay
    rtx_delay.o(.ARM.exidx.text.osDelay) refers to rtx_delay.o(.text.osDelay) for [Anonymous Symbol]
    rtx_delay.o(.text.osDelayUntil) refers to rtx_delay.o(.text.svcRtxDelayUntil) for svcRtxDelayUntil
    rtx_delay.o(.ARM.exidx.text.osDelayUntil) refers to rtx_delay.o(.text.osDelayUntil) for [Anonymous Symbol]
    rtx_delay.o(.text.svcRtxDelay) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_delay.o(.ARM.exidx.text.svcRtxDelay) refers to rtx_delay.o(.text.svcRtxDelay) for [Anonymous Symbol]
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_delay.o(.ARM.exidx.text.svcRtxDelayUntil) refers to rtx_delay.o(.text.svcRtxDelayUntil) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_msgqueue.o(.text.osMessageQueueNew) for osMessageQueueNew
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for osMessageQueueGet
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_timer.o(.text.osRtxTimerTick) for osRtxTimerTick
    rtx_timer.o(.ARM.exidx.text.osRtxTimerThread) refers to rtx_timer.o(.text.osRtxTimerThread) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for osMessageQueuePut
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_config.o(i.osRtxErrorNotify) for osRtxErrorNotify
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_timer.o(.text.TimerInsert) for TimerInsert
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.osRtxTimerTick) refers to rtx_timer.o(.text.osRtxTimerTick) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerNew) refers to rtx_timer.o(.text.svcRtxTimerNew) for svcRtxTimerNew
    rtx_timer.o(.ARM.exidx.text.osTimerNew) refers to rtx_timer.o(.text.osTimerNew) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerGetName) refers to rtx_timer.o(.text.svcRtxTimerGetName) for svcRtxTimerGetName
    rtx_timer.o(.ARM.exidx.text.osTimerGetName) refers to rtx_timer.o(.text.osTimerGetName) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerStart) refers to rtx_timer.o(.text.svcRtxTimerStart) for svcRtxTimerStart
    rtx_timer.o(.ARM.exidx.text.osTimerStart) refers to rtx_timer.o(.text.osTimerStart) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerStop) refers to rtx_timer.o(.text.svcRtxTimerStop) for svcRtxTimerStop
    rtx_timer.o(.ARM.exidx.text.osTimerStop) refers to rtx_timer.o(.text.osTimerStop) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerIsRunning) refers to rtx_timer.o(.text.svcRtxTimerIsRunning) for svcRtxTimerIsRunning
    rtx_timer.o(.ARM.exidx.text.osTimerIsRunning) refers to rtx_timer.o(.text.osTimerIsRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerDelete) refers to rtx_timer.o(.text.svcRtxTimerDelete) for svcRtxTimerDelete
    rtx_timer.o(.ARM.exidx.text.osTimerDelete) refers to rtx_timer.o(.text.osTimerDelete) for [Anonymous Symbol]
    rtx_timer.o(.text.TimerInsert) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.TimerInsert) refers to rtx_timer.o(.text.TimerInsert) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerNew) refers to rtx_timer.o(.text.svcRtxTimerNew) for [Anonymous Symbol]
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerGetName) refers to rtx_timer.o(.text.svcRtxTimerGetName) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_timer.o(.text.TimerInsert) for TimerInsert
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerStart) refers to rtx_timer.o(.text.svcRtxTimerStart) for [Anonymous Symbol]
    rtx_timer.o(.text.TimerRemove) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.TimerRemove) refers to rtx_timer.o(.text.TimerRemove) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerStop) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerStop) refers to rtx_timer.o(.text.svcRtxTimerStop) for [Anonymous Symbol]
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerIsRunning) refers to rtx_timer.o(.text.svcRtxTimerIsRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerDelete) refers to rtx_timer.o(.text.svcRtxTimerDelete) for [Anonymous Symbol]
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRelease) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexNew) refers to rtx_mutex.o(.text.svcRtxMutexNew) for svcRtxMutexNew
    rtx_mutex.o(.ARM.exidx.text.osMutexNew) refers to rtx_mutex.o(.text.osMutexNew) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexGetName) refers to rtx_mutex.o(.text.svcRtxMutexGetName) for svcRtxMutexGetName
    rtx_mutex.o(.ARM.exidx.text.osMutexGetName) refers to rtx_mutex.o(.text.osMutexGetName) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexAcquire) refers to rtx_mutex.o(.text.svcRtxMutexAcquire) for svcRtxMutexAcquire
    rtx_mutex.o(.ARM.exidx.text.osMutexAcquire) refers to rtx_mutex.o(.text.osMutexAcquire) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexRelease) refers to rtx_mutex.o(.text.svcRtxMutexRelease) for svcRtxMutexRelease
    rtx_mutex.o(.ARM.exidx.text.osMutexRelease) refers to rtx_mutex.o(.text.osMutexRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexGetOwner) refers to rtx_mutex.o(.text.svcRtxMutexGetOwner) for svcRtxMutexGetOwner
    rtx_mutex.o(.ARM.exidx.text.osMutexGetOwner) refers to rtx_mutex.o(.text.osMutexGetOwner) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexDelete) refers to rtx_mutex.o(.text.svcRtxMutexDelete) for svcRtxMutexDelete
    rtx_mutex.o(.ARM.exidx.text.osMutexDelete) refers to rtx_mutex.o(.text.osMutexDelete) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexNew) refers to rtx_mutex.o(.text.svcRtxMutexNew) for [Anonymous Symbol]
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetName) refers to rtx_mutex.o(.text.svcRtxMutexGetName) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexAcquire) refers to rtx_mutex.o(.text.svcRtxMutexAcquire) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexRelease) refers to rtx_mutex.o(.text.svcRtxMutexRelease) for [Anonymous Symbol]
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetOwner) refers to rtx_mutex.o(.text.svcRtxMutexGetOwner) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexDelete) refers to rtx_mutex.o(.text.svcRtxMutexDelete) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for svcRtxMessageQueueNew
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.osMessageQueueNew) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) for svcRtxMessageQueueGetName
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.osMessageQueueGetName) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.svcRtxMessageQueuePut) for svcRtxMessageQueuePut
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGet) for svcRtxMessageQueueGet
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) for svcRtxMessageQueueGetCapacity
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.osMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) for svcRtxMessageQueueGetMsgSize
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) for svcRtxMessageQueueGetCount
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.osMessageQueueGetCount) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCount) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) for svcRtxMessageQueueGetSpace
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.osMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueReset) for svcRtxMessageQueueReset
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.osMessageQueueReset) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) for svcRtxMessageQueueDelete
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.osMessageQueueDelete) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rt_memclr.o(.text) for __aeabi_memclr
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) for osRtxMessageQueuePostProcess
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueNew) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueueRemove) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueuePut) refers to rtx_msgqueue.o(.text.MessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetName) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.svcRtxMessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueReset) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueDelete) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) for [Anonymous Symbol]
    irq_cm4f.o(.text) refers to rtx_system.o(.text.osRtxPendSV_Handler) for osRtxPendSV_Handler
    irq_cm4f.o(.text) refers to rtx_system.o(.text.osRtxTick_Handler) for osRtxTick_Handler
    irq_cm4f.o(.text) refers to rtx_kernel.o(.data.os) for osRtxInfo
    irq_cm4f.o(.text) refers to rtx_lib.o(.constdata) for osRtxUserSVC
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryInit) refers to rtx_memory.o(.text.osRtxMemoryInit) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryAlloc) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryFree) refers to rtx_memory.o(.text.osRtxMemoryFree) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolInit) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.svcRtxMemoryPoolNew) for svcRtxMemoryPoolNew
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.osMemoryPoolNew) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetName) for svcRtxMemoryPoolGetName
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.osMemoryPoolGetName) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) for svcRtxMemoryPoolAlloc
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.osMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.svcRtxMemoryPoolFree) for svcRtxMemoryPoolFree
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.osMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) for svcRtxMemoryPoolGetCapacity
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.osMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) for svcRtxMemoryPoolGetBlockSize
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.osMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) for svcRtxMemoryPoolGetCount
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.osMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCount) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) for svcRtxMemoryPoolGetSpace
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.osMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetSpace) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.svcRtxMemoryPoolDelete) for svcRtxMemoryPoolDelete
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.osMemoryPoolDelete) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rt_memclr.o(.text) for __aeabi_memclr
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) for osRtxMemoryPoolPostProcess
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.svcRtxMemoryPoolNew) for [Anonymous Symbol]
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolPostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetName) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetName) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.svcRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolDelete) refers to rtx_mempool.o(.text.svcRtxMemoryPoolDelete) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxTick_Handler) refers to os_systick.o(.text.OS_Tick_AcknowledgeIRQ) for OS_Tick_AcknowledgeIRQ
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for osRtxThreadDelayTick
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxTick_Handler) refers to rtx_system.o(.text.osRtxTick_Handler) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxPendSV_Handler) refers to rtx_system.o(.text.osRtxPendSV_Handler) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_config.o(i.osRtxErrorNotify) for osRtxErrorNotify
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxPostProcess) refers to rtx_system.o(.text.osRtxPostProcess) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Setup) refers to system_stm32f4xx.o(.data) for SystemCoreClock
    os_systick.o(.text.OS_Tick_Setup) refers to os_systick.o(.bss.PendST) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_Setup) refers to os_systick.o(.text.OS_Tick_Setup) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Enable) refers to os_systick.o(.bss.PendST) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_Enable) refers to os_systick.o(.text.OS_Tick_Enable) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Disable) refers to os_systick.o(.bss.PendST) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_Disable) refers to os_systick.o(.text.OS_Tick_Disable) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ) refers to os_systick.o(.text.OS_Tick_AcknowledgeIRQ) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn) refers to os_systick.o(.text.OS_Tick_GetIRQn) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_GetClock) refers to system_stm32f4xx.o(.data) for SystemCoreClock
    os_systick.o(.ARM.exidx.text.OS_Tick_GetClock) refers to os_systick.o(.text.OS_Tick_GetClock) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval) refers to os_systick.o(.text.OS_Tick_GetInterval) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetCount) refers to os_systick.o(.text.OS_Tick_GetCount) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow) refers to os_systick.o(.text.OS_Tick_GetOverflow) for [Anonymous Symbol]
    rt_memcpy_v6.o(.text) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    rt_memclr.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to rtx_lib.o(i._platform_post_stackheap_init) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(i.main) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup_stm32f40_41xxx.o(.text) for __user_initial_stackheap
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002C) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000001) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000A) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000011) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000033) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_user_alloc_1
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    libinit2.o(.ARM.Collect$$libinit$$00000001) refers to fpinit.o(x$fpl$fpinit) for _fp_init
    libinit2.o(.ARM.Collect$$libinit$$00000010) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000026) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000027) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    argv_veneer.o(.emb_text) refers to no_argv.o(.text) for __ARM_get_argv
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000007) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000010) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_user_alloc_1
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display


==============================================================================

Removing Unused input sections from the image.

    Removing system_stm32f4xx.o(.rev16_text), (4 bytes).
    Removing system_stm32f4xx.o(.revsh_text), (4 bytes).
    Removing system_stm32f4xx.o(.rrx_text), (6 bytes).
    Removing system_stm32f4xx.o(i.SystemCoreClockUpdate), (124 bytes).
    Removing system_stm32f4xx.o(.data), (20 bytes).
    Removing main.o(.rev16_text), (4 bytes).
    Removing main.o(.revsh_text), (4 bytes).
    Removing main.o(.rrx_text), (6 bytes).
    Removing main.o(i.vUart3WriteByte), (20 bytes).
    Removing main.o(i.vUart3WriteString), (22 bytes).
    Removing main.o(.data), (5 bytes).
    Removing systimer.o(.rev16_text), (4 bytes).
    Removing systimer.o(.revsh_text), (4 bytes).
    Removing systimer.o(.rrx_text), (6 bytes).
    Removing xstring.o(i.vStrFormat), (94 bytes).
    Removing xstring.o(i.xGetNumberLength), (20 bytes).
    Removing xstring.o(i.xStrCopy), (30 bytes).
    Removing xstring.o(i.xStrValueOfUInt), (60 bytes).
    Removing xstring.o(.constdata), (16 bytes).
    Removing bluetoothprotocol.o(.rev16_text), (4 bytes).
    Removing bluetoothprotocol.o(.revsh_text), (4 bytes).
    Removing bluetoothprotocol.o(.rrx_text), (6 bytes).
    Removing bluetoothprotocol.o(i.vCreateGPProtocol), (48 bytes).
    Removing bluetoothprotocol.o(i.vCreateReportSensOstepDataProtocol), (28 bytes).
    Removing bluetoothprotocol.o(i.vCreateReportStatusDataProtocol), (40 bytes).
    Removing bluetoothprotocol.o(i.vCreateUpdateSensOstepDataProtocol), (60 bytes).
    Removing bluetoothprotocol.o(i.xParseBluetoothProtocol), (68 bytes).
    Removing periphfsmc.o(.rev16_text), (4 bytes).
    Removing periphfsmc.o(.revsh_text), (4 bytes).
    Removing periphfsmc.o(.rrx_text), (6 bytes).
    Removing periphfsmc.o(i.vFsmcGpioInit), (224 bytes).
    Removing periphfsmc.o(i.vFsmcInit), (48 bytes).
    Removing periphtimer.o(.rev16_text), (4 bytes).
    Removing periphtimer.o(.revsh_text), (4 bytes).
    Removing periphtimer.o(.rrx_text), (6 bytes).
    Removing periphtimer.o(i.vTimerRobotInit), (40 bytes).
    Removing periphtimer.o(i.xGetRobot1Cycle), (40 bytes).
    Removing periphtimer.o(i.xGetRobot2Cycle), (40 bytes).
    Removing periphtimer.o(.data), (8 bytes).
    Removing devicelcd.o(.rev16_text), (4 bytes).
    Removing devicelcd.o(.revsh_text), (4 bytes).
    Removing devicelcd.o(.rrx_text), (6 bytes).
    Removing devicelcd.o(i.vLcdDisplayAscii), (80 bytes).
    Removing devicelcd.o(i.vLcdDisplayAsciiString), (32 bytes).
    Removing devicelcd.o(i.vLcdDisplayChar), (104 bytes).
    Removing devicelcd.o(i.vLcdFullRect), (28 bytes).
    Removing devicelcd.o(i.vLcdInit), (648 bytes).
    Removing devicelcd.o(i.vLcdOpenWindow), (68 bytes).
    Removing devicelcd.o(.constdata), (1856 bytes).
    Removing deviceled.o(.rev16_text), (4 bytes).
    Removing deviceled.o(.revsh_text), (4 bytes).
    Removing deviceled.o(.rrx_text), (6 bytes).
    Removing deviceled.o(i.vLedInit), (16 bytes).
    Removing devicech451s.o(.rev16_text), (4 bytes).
    Removing devicech451s.o(.revsh_text), (4 bytes).
    Removing devicech451s.o(.rrx_text), (6 bytes).
    Removing devicech451s.o(i.vCh451sDisplay), (90 bytes).
    Removing devicebluetooth.o(.rev16_text), (4 bytes).
    Removing devicebluetooth.o(.revsh_text), (4 bytes).
    Removing devicebluetooth.o(.rrx_text), (6 bytes).
    Removing devicebluetooth.o(i.vBluetoothWrite), (48 bytes).
    Removing devicebluetooth.o(i.vBluetoothWriteByte), (20 bytes).
    Removing devicebluetooth.o(i.vBluetoothWriteByteArray), (56 bytes).
    Removing devicebluetooth.o(i.vBluetoothWriteString), (48 bytes).
    Removing devicemoto.o(.rev16_text), (4 bytes).
    Removing devicemoto.o(.revsh_text), (4 bytes).
    Removing devicemoto.o(.rrx_text), (6 bytes).
    Removing devicenrf2401.o(.rev16_text), (4 bytes).
    Removing devicenrf2401.o(.revsh_text), (4 bytes).
    Removing devicenrf2401.o(.rrx_text), (6 bytes).
    Removing devicenrf2401.o(i.xNrfReadRegister), (32 bytes).
    Removing devicenrf2401.o(i.xNrfSendPacket), (84 bytes).
    Removing device74hc165.o(.rev16_text), (4 bytes).
    Removing device74hc165.o(.revsh_text), (4 bytes).
    Removing device74hc165.o(.rrx_text), (6 bytes).
    Removing device74hc165.o(i.x74HC165ReadByte), (52 bytes).
    Removing ch451stask.o(.rev16_text), (4 bytes).
    Removing ch451stask.o(.revsh_text), (4 bytes).
    Removing ch451stask.o(.rrx_text), (6 bytes).
    Removing ch451stask.o(i.AppCh451sTask), (42 bytes).
    Removing ch451stask.o(i.vCh451sTaskStart), (28 bytes).
    Removing ch451stask.o(.bss), (1024 bytes).
    Removing ch451stask.o(.conststring), (11 bytes).
    Removing ch451stask.o(.data), (40 bytes).
    Removing bluetoothreceivertask.o(.rev16_text), (4 bytes).
    Removing bluetoothreceivertask.o(.revsh_text), (4 bytes).
    Removing bluetoothreceivertask.o(.rrx_text), (6 bytes).
    Removing bluetoothreceivertask.o(i.AppBluetoothTask), (108 bytes).
    Removing bluetoothreceivertask.o(i.vBluetoothTaskStart), (40 bytes).
    Removing bluetoothreceivertask.o(.bss), (12 bytes).
    Removing bluetoothreceivertask.o(.constdata), (2 bytes).
    Removing timertask.o(.rev16_text), (4 bytes).
    Removing timertask.o(.revsh_text), (4 bytes).
    Removing timertask.o(.rrx_text), (6 bytes).
    Removing timertask.o(i.AppSensOstepDataUpdateTimer), (40 bytes).
    Removing timertask.o(i.vTimerTaskStart), (44 bytes).
    Removing timertask.o(.bss), (9 bytes).
    Removing timertask.o(.data), (4 bytes).
    Removing motocontroltask.o(.rev16_text), (4 bytes).
    Removing motocontroltask.o(.revsh_text), (4 bytes).
    Removing motocontroltask.o(.rrx_text), (6 bytes).
    Removing motocontroltask.o(i.AppMotoControlTask), (20 bytes).
    Removing motocontroltask.o(i.vDoorMotoDown), (88 bytes).
    Removing motocontroltask.o(i.vDoorMotoUp), (116 bytes).
    Removing motocontroltask.o(i.vMotoControlTaskStart), (32 bytes).
    Removing motocontroltask.o(i.vMotoControlTaskStop), (24 bytes).
    Removing motocontroltask.o(i.vShipmentMotoDown), (64 bytes).
    Removing motocontroltask.o(i.vShipmentMotoUp), (56 bytes).
    Removing motocontroltask.o(i.xPIDControlExec), (70 bytes).
    Removing motocontroltask.o(.bss), (1024 bytes).
    Removing motocontroltask.o(.constdata), (36 bytes).
    Removing motocontroltask.o(.conststring), (16 bytes).
    Removing motocontroltask.o(.data), (4 bytes).
    Removing motoupdowncontroltask.o(.rev16_text), (4 bytes).
    Removing motoupdowncontroltask.o(.revsh_text), (4 bytes).
    Removing motoupdowncontroltask.o(.rrx_text), (6 bytes).
    Removing motoupdowncontroltask.o(i.AppMotoUpDownTask), (80 bytes).
    Removing motoupdowncontroltask.o(i.vMotoUpDownTaskStart), (40 bytes).
    Removing motoupdowncontroltask.o(i.vMotoUpDownTaskStop), (24 bytes).
    Removing motoupdowncontroltask.o(.data), (4 bytes).
    Removing statuschecktask.o(.rev16_text), (4 bytes).
    Removing statuschecktask.o(.revsh_text), (4 bytes).
    Removing statuschecktask.o(.rrx_text), (6 bytes).
    Removing statuschecktask.o(i.AppStatusCheckTask), (42 bytes).
    Removing statuschecktask.o(i.vStartStatusCheckTask), (36 bytes).
    Removing statuschecktask.o(i.vStopStatusCheckTask), (24 bytes).
    Removing statuschecktask.o(.bss), (512 bytes).
    Removing statuschecktask.o(.constdata), (36 bytes).
    Removing statuschecktask.o(.conststring), (16 bytes).
    Removing statuschecktask.o(.data), (4 bytes).
    Removing usb_dcd.o(.rev16_text), (4 bytes).
    Removing usb_dcd.o(.revsh_text), (4 bytes).
    Removing usb_dcd.o(.rrx_text), (6 bytes).
    Removing usb_dcd.o(i.DCD_DevConnect), (16 bytes).
    Removing usb_dcd.o(i.DCD_DevDisconnect), (16 bytes).
    Removing usb_dcd.o(i.DCD_EP_Close), (44 bytes).
    Removing usb_dcd.o(i.DCD_EP_Flush), (24 bytes).
    Removing usb_dcd.o(i.DCD_GetEPStatus), (38 bytes).
    Removing usb_dcd.o(i.DCD_Init), (148 bytes).
    Removing usb_dcd.o(i.DCD_SetEPStatus), (38 bytes).
    Removing usb_dcd.o(.bss), (256 bytes).
    Removing usb_dcd.o(.bss), (4096 bytes).
    Removing usb_dcd_int.o(.rev16_text), (4 bytes).
    Removing usb_dcd_int.o(.revsh_text), (4 bytes).
    Removing usb_dcd_int.o(.rrx_text), (6 bytes).
    Removing usb_dcd_int.o(.data), (1 bytes).
    Removing usb_core.o(.rev16_text), (4 bytes).
    Removing usb_core.o(.revsh_text), (4 bytes).
    Removing usb_core.o(.rrx_text), (6 bytes).
    Removing usb_core.o(i.USB_OTG_ActiveRemoteWakeup), (66 bytes).
    Removing usb_core.o(i.USB_OTG_CoreInit), (128 bytes).
    Removing usb_core.o(i.USB_OTG_CoreInitDev), (304 bytes).
    Removing usb_core.o(i.USB_OTG_CoreReset), (88 bytes).
    Removing usb_core.o(i.USB_OTG_DisableGlobalInt), (16 bytes).
    Removing usb_core.o(i.USB_OTG_EPDeactivate), (52 bytes).
    Removing usb_core.o(i.USB_OTG_EnableDevInt), (72 bytes).
    Removing usb_core.o(i.USB_OTG_EnableGlobalInt), (16 bytes).
    Removing usb_core.o(i.USB_OTG_FlushRxFifo), (56 bytes).
    Removing usb_core.o(i.USB_OTG_GetEPStatus), (66 bytes).
    Removing usb_core.o(i.USB_OTG_GetMode), (10 bytes).
    Removing usb_core.o(i.USB_OTG_InitDevSpeed), (12 bytes).
    Removing usb_core.o(i.USB_OTG_IsHostMode), (14 bytes).
    Removing usb_core.o(i.USB_OTG_ReadOtgItr), (6 bytes).
    Removing usb_core.o(i.USB_OTG_SelectCore), (192 bytes).
    Removing usb_core.o(i.USB_OTG_SetCurrentMode), (42 bytes).
    Removing usb_core.o(i.USB_OTG_SetEPStatus), (110 bytes).
    Removing usb_core.o(i.USB_OTG_StopDevice), (74 bytes).
    Removing usb_core.o(i.USB_OTG_UngateClock), (30 bytes).
    Removing usbd_core.o(.rev16_text), (4 bytes).
    Removing usbd_core.o(.revsh_text), (4 bytes).
    Removing usbd_core.o(.rrx_text), (6 bytes).
    Removing usbd_core.o(i.USBD_DeInit), (4 bytes).
    Removing usbd_core.o(i.USBD_Init), (52 bytes).
    Removing usbd_ioreq.o(.rev16_text), (4 bytes).
    Removing usbd_ioreq.o(.revsh_text), (4 bytes).
    Removing usbd_ioreq.o(.rrx_text), (6 bytes).
    Removing usbd_ioreq.o(i.USBD_CtlPrepareRx), (32 bytes).
    Removing usbd_ioreq.o(i.USBD_GetRxCount), (16 bytes).
    Removing usbd_req.o(.rev16_text), (4 bytes).
    Removing usbd_req.o(.revsh_text), (4 bytes).
    Removing usbd_req.o(.rrx_text), (6 bytes).
    Removing usbd_req.o(i.USBD_GetString), (70 bytes).
    Removing usbd_req.o(.bss), (64 bytes).
    Removing usbd_hid_core.o(.rev16_text), (4 bytes).
    Removing usbd_hid_core.o(.revsh_text), (4 bytes).
    Removing usbd_hid_core.o(.rrx_text), (6 bytes).
    Removing usbd_hid_core.o(i.USBD_Bulk_Send_ep1), (24 bytes).
    Removing usbd_hid_core.o(i.USBD_Bulk_Send_ep2), (24 bytes).
    Removing usbd_hid_core.o(i.USBD_HID_DataIn), (22 bytes).
    Removing usbd_hid_core.o(i.USBD_HID_DataOut), (80 bytes).
    Removing usbd_hid_core.o(i.USBD_HID_DeInit), (38 bytes).
    Removing usbd_hid_core.o(i.USBD_HID_GetCfgDesc), (12 bytes).
    Removing usbd_hid_core.o(i.USBD_HID_Init), (88 bytes).
    Removing usbd_hid_core.o(i.USBD_HID_Setup), (164 bytes).
    Removing usbd_hid_core.o(.data), (44 bytes).
    Removing usbd_hid_core.o(.data), (91 bytes).
    Removing usbd_usr.o(.rev16_text), (4 bytes).
    Removing usbd_usr.o(.revsh_text), (4 bytes).
    Removing usbd_usr.o(.rrx_text), (6 bytes).
    Removing usbd_usr.o(i.USBD_USR_DeviceConfigured), (2 bytes).
    Removing usbd_usr.o(i.USBD_USR_DeviceConnected), (2 bytes).
    Removing usbd_usr.o(i.USBD_USR_DeviceDisconnected), (2 bytes).
    Removing usbd_usr.o(i.USBD_USR_DeviceReset), (2 bytes).
    Removing usbd_usr.o(i.USBD_USR_DeviceResumed), (2 bytes).
    Removing usbd_usr.o(i.USBD_USR_DeviceSuspended), (2 bytes).
    Removing usbd_usr.o(i.USBD_USR_Init), (2 bytes).
    Removing usbd_usr.o(i.usbd_CloseUsb), (12 bytes).
    Removing usbd_usr.o(i.usbd_OpenUsb), (36 bytes).
    Removing usbd_usr.o(.data), (28 bytes).
    Removing usbd_desc.o(.rev16_text), (4 bytes).
    Removing usbd_desc.o(.revsh_text), (4 bytes).
    Removing usbd_desc.o(.rrx_text), (6 bytes).
    Removing usbd_desc.o(i.USBD_USR_ConfigStrDescriptor), (56 bytes).
    Removing usbd_desc.o(i.USBD_USR_DeviceDescriptor), (12 bytes).
    Removing usbd_desc.o(i.USBD_USR_InterfaceStrDescriptor), (64 bytes).
    Removing usbd_desc.o(i.USBD_USR_LangIDStrDescriptor), (12 bytes).
    Removing usbd_desc.o(i.USBD_USR_ManufacturerStrDescriptor), (40 bytes).
    Removing usbd_desc.o(i.USBD_USR_ProductStrDescriptor), (64 bytes).
    Removing usbd_desc.o(i.USBD_USR_SerialStrDescriptor), (60 bytes).
    Removing usbd_desc.o(.data), (28 bytes).
    Removing usbd_desc.o(.data), (22 bytes).
    Removing usbd_desc.o(.data), (10 bytes).
    Removing usb_bsp.o(.rev16_text), (4 bytes).
    Removing usb_bsp.o(.revsh_text), (4 bytes).
    Removing usb_bsp.o(.rrx_text), (6 bytes).
    Removing usb_bsp.o(i.USB_OTG_BSP_EnableInterrupt), (16 bytes).
    Removing usb_bsp.o(i.USB_OTG_BSP_Init), (104 bytes).
    Removing usb_bsp.o(i.USB_OTG_BSP_mDelay), (10 bytes).
    Removing usb_it.o(.rev16_text), (4 bytes).
    Removing usb_it.o(.revsh_text), (4 bytes).
    Removing usb_it.o(.rrx_text), (6 bytes).
    Removing rtx_lib.o(.rev16_text), (4 bytes).
    Removing rtx_lib.o(.revsh_text), (4 bytes).
    Removing rtx_lib.o(.rrx_text), (6 bytes).
    Removing rtx_lib.o(.emb_text), (0 bytes).
    Removing rtx_lib.o(.rodata), (56 bytes).
    Removing rtx_lib.o(i.__user_perthread_libspace), (80 bytes).
    Removing rtx_lib.o(.bss.os.libspace), (1096 bytes).
    Removing rtx_lib.o(.data), (4 bytes).
    Removing rtx_config.o(.rev16_text), (4 bytes).
    Removing rtx_config.o(.revsh_text), (4 bytes).
    Removing rtx_config.o(.rrx_text), (6 bytes).
    Removing rtx_config.o(i.osRtxIdleThread), (2 bytes).
    Removing rtx_kernel.o(.text), (0 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelInitialize), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetInfo), (52 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetInfo), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetInfo), (48 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetInfo), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetState), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetState), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelStart), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelStart), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelLock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelLock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelUnlock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelUnlock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelRestoreLock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelRestoreLock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelSuspend), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelSuspend), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelResume), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelResume), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetTickCount), (40 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetTickCount), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetTickCount), (12 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickCount), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetTickFreq), (40 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetTickFreq), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetTickFreq), (12 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickFreq), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetSysTimerCount), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerCount), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount), (40 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerCount), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetSysTimerFreq), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq), (4 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelInitialize), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelStart), (140 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelStart), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelLock), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelLock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelUnlock), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelUnlock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelRestoreLock), (44 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelRestoreLock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelSuspend), (84 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelSuspend), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelResume), (156 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelResume), (8 bytes).
    Removing rtx_thread.o(.text), (0 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListPut), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListGet), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListSort), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListRemove), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadReadyPut), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayTick), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadRegPtr), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadSwitch), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadStackCheck), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadStackCheck), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDispatch), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadBlock), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitExit), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayRemove), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitEnter), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayInsert), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadStartup), (88 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadStartup), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadNew), (480 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadNew), (8 bytes).
    Removing rtx_thread.o(.text.osThreadNew), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadNew), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetName), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetName), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetId), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetId), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetState), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetState), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetStackSize), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetStackSize), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetStackSpace), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetStackSpace), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSetPriority), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSetPriority), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetPriority), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetPriority), (8 bytes).
    Removing rtx_thread.o(.text.osThreadYield), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadYield), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSuspend), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSuspend), (8 bytes).
    Removing rtx_thread.o(.text.osThreadResume), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadResume), (8 bytes).
    Removing rtx_thread.o(.text.osThreadDetach), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadDetach), (8 bytes).
    Removing rtx_thread.o(.text.osThreadJoin), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadJoin), (8 bytes).
    Removing rtx_thread.o(.text.osThreadExit), (12 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadExit), (8 bytes).
    Removing rtx_thread.o(.text.osThreadTerminate), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadTerminate), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetCount), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetCount), (8 bytes).
    Removing rtx_thread.o(.text.osThreadEnumerate), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadEnumerate), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsSet), (92 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsClear), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsGet), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsGet), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsWait), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsWait), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadPostProcess), (42 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadPostProcess), (8 bytes).
    Removing rtx_thread.o(.text.ThreadFlagsCheck), (106 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.ThreadFlagsCheck), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetName), (20 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetName), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetId), (12 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetId), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetState), (22 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetState), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetStackSize), (20 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSize), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetStackSpace), (68 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSpace), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSetPriority), (80 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetPriority), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetPriority), (30 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetPriority), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadYield), (56 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadYield), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSuspend), (128 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspend), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadResume), (56 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadResume), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadDetach), (64 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadDetach), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadListUnlink), (32 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListUnlink), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadFree), (88 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadFree), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadJoin), (92 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadJoin), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadExit), (104 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadExit), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadTerminate), (188 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadTerminate), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetCount), (56 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetCount), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadEnumerate), (104 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadEnumerate), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsSet), (108 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsClear), (72 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsGet), (28 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsGet), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsWait), (76 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsWait), (8 bytes).
    Removing rtx_delay.o(.text), (0 bytes).
    Removing rtx_delay.o(.text.osDelay), (36 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.osDelay), (8 bytes).
    Removing rtx_delay.o(.text.osDelayUntil), (36 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.osDelayUntil), (8 bytes).
    Removing rtx_delay.o(.text.svcRtxDelay), (20 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.svcRtxDelay), (8 bytes).
    Removing rtx_delay.o(.text.svcRtxDelayUntil), (40 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.svcRtxDelayUntil), (8 bytes).
    Removing rtx_timer.o(.text), (0 bytes).
    Removing rtx_timer.o(.text.osRtxTimerThread), (68 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerThread), (8 bytes).
    Removing rtx_timer.o(.text.osRtxTimerTick), (88 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerTick), (8 bytes).
    Removing rtx_timer.o(.text.osTimerNew), (48 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerNew), (8 bytes).
    Removing rtx_timer.o(.text.osTimerGetName), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerGetName), (8 bytes).
    Removing rtx_timer.o(.text.osTimerStart), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerStart), (8 bytes).
    Removing rtx_timer.o(.text.osTimerStop), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerStop), (8 bytes).
    Removing rtx_timer.o(.text.osTimerIsRunning), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerIsRunning), (8 bytes).
    Removing rtx_timer.o(.text.osTimerDelete), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerDelete), (8 bytes).
    Removing rtx_timer.o(.text.TimerInsert), (80 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.TimerInsert), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerNew), (124 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerNew), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerGetName), (20 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerGetName), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerStart), (72 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerStart), (8 bytes).
    Removing rtx_timer.o(.text.TimerRemove), (48 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.TimerRemove), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerStop), (40 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerStop), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerIsRunning), (24 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerIsRunning), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerDelete), (84 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerDelete), (8 bytes).
    Removing rtx_mutex.o(.text), (0 bytes).
    Removing rtx_mutex.o(.text.osRtxMutexOwnerRelease), (68 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRelease), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexNew), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexGetName), (36 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexGetName), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexAcquire), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexRelease), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexGetOwner), (36 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexGetOwner), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexDelete), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexNew), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexGetName), (20 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetName), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexAcquire), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexRelease), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexGetOwner), (24 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetOwner), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexDelete), (8 bytes).
    Removing rtx_msgqueue.o(.text), (0 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueNew), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueNew), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetName), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetName), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGet), (112 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetCapacity), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCapacity), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity), (20 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCapacity), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetMsgSize), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize), (20 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetCount), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCount), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount), (20 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCount), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetSpace), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetSpace), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace), (24 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetSpace), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueReset), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueReset), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueDelete), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueDelete), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueNew), (312 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueNew), (8 bytes).
    Removing rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess), (214 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueuePostProcess), (8 bytes).
    Removing rtx_msgqueue.o(.text.MessageQueueRemove), (38 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueueRemove), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetName), (20 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetName), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.text.MessageQueueGet), (70 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGet), (240 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueReset), (186 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueReset), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueDelete), (124 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueDelete), (8 bytes).
    Removing irq_cm4f.o(.constdata), (1 bytes).
    Removing rtx_memory.o(.text), (0 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryInit), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryAlloc), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryFree), (8 bytes).
    Removing rtx_mempool.o(.text), (0 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolInit), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolNew), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolNew), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetName), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetName), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolAlloc), (60 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolFree), (84 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetCapacity), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity), (20 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetBlockSize), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize), (20 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetCount), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCount), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetCount), (20 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCount), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetSpace), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetSpace), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace), (24 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetSpace), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolDelete), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolDelete), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolNew), (284 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolNew), (8 bytes).
    Removing rtx_mempool.o(.text.osRtxMemoryPoolPostProcess), (44 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolPostProcess), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetName), (20 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetName), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolAlloc), (60 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolFree), (74 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolDelete), (120 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolDelete), (8 bytes).
    Removing rtx_system.o(.text), (0 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxTick_Handler), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxPendSV_Handler), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxPostProcess), (8 bytes).
    Removing os_systick.o(.text), (0 bytes).
    Removing os_systick.o(.text.OS_Tick_Setup), (64 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Setup), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_Enable), (44 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Enable), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_Disable), (48 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Disable), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetIRQn), (6 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetClock), (12 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetClock), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetInterval), (12 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetCount), (16 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetCount), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetOverflow), (16 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow), (8 bytes).
    Removing os_systick.o(.bss.PendST), (1 bytes).

580 unused section(s) (total 26925 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/dczerorl2.s                0x00000000   Number         0  __dczerorl2.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/scatter.s                  0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxi.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr_w.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_v6.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_w.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../fplib/fpinit.s                        0x00000000   Number         0  fpinit.o ABSOLUTE
    ..\..\..\Source\ARM\irq_cm4f.s           0x00000000   Number         0  irq_cm4f.o ABSOLUTE
    ..\CMSIS\startup_stm32f40_41xxx.s        0x00000000   Number         0  startup_stm32f40_41xxx.o ABSOLUTE
    ..\CMSIS\system_stm32f4xx.c              0x00000000   Number         0  system_stm32f4xx.o ABSOLUTE
    ..\User\BluetoothProtocol.c              0x00000000   Number         0  bluetoothprotocol.o ABSOLUTE
    ..\User\Device\Device74HC165.c           0x00000000   Number         0  device74hc165.o ABSOLUTE
    ..\User\Device\DeviceBluetooth.c         0x00000000   Number         0  devicebluetooth.o ABSOLUTE
    ..\User\Device\DeviceCh451s.c            0x00000000   Number         0  devicech451s.o ABSOLUTE
    ..\User\Device\DeviceLcd.c               0x00000000   Number         0  devicelcd.o ABSOLUTE
    ..\User\Device\DeviceLed.c               0x00000000   Number         0  deviceled.o ABSOLUTE
    ..\User\Device\DeviceMoto.c              0x00000000   Number         0  devicemoto.o ABSOLUTE
    ..\User\Device\DeviceNrf2401.c           0x00000000   Number         0  devicenrf2401.o ABSOLUTE
    ..\User\Periph\PeriphFsmc.c              0x00000000   Number         0  periphfsmc.o ABSOLUTE
    ..\User\Periph\PeriphTimer.c             0x00000000   Number         0  periphtimer.o ABSOLUTE
    ..\User\SysTimer.c                       0x00000000   Number         0  systimer.o ABSOLUTE
    ..\User\Task\BluetoothReceiverTask.c     0x00000000   Number         0  bluetoothreceivertask.o ABSOLUTE
    ..\User\Task\Ch451sTask.c                0x00000000   Number         0  ch451stask.o ABSOLUTE
    ..\User\Task\MotoControlTask.c           0x00000000   Number         0  motocontroltask.o ABSOLUTE
    ..\User\Task\MotoUpDownControlTask.c     0x00000000   Number         0  motoupdowncontroltask.o ABSOLUTE
    ..\User\Task\StatusCheckTask.c           0x00000000   Number         0  statuschecktask.o ABSOLUTE
    ..\User\Task\TimerTask.c                 0x00000000   Number         0  timertask.o ABSOLUTE
    ..\User\Usb\APP\usb_bsp.c                0x00000000   Number         0  usb_bsp.o ABSOLUTE
    ..\User\Usb\APP\usb_it.c                 0x00000000   Number         0  usb_it.o ABSOLUTE
    ..\User\Usb\APP\usbd_desc.c              0x00000000   Number         0  usbd_desc.o ABSOLUTE
    ..\User\Usb\APP\usbd_usr.c               0x00000000   Number         0  usbd_usr.o ABSOLUTE
    ..\User\Usb\DEVICE\hid\src\usbd_hid_core.c 0x00000000   Number         0  usbd_hid_core.o ABSOLUTE
    ..\User\Usb\DEVICE\src\usbd_core.c       0x00000000   Number         0  usbd_core.o ABSOLUTE
    ..\User\Usb\DEVICE\src\usbd_ioreq.c      0x00000000   Number         0  usbd_ioreq.o ABSOLUTE
    ..\User\Usb\DEVICE\src\usbd_req.c        0x00000000   Number         0  usbd_req.o ABSOLUTE
    ..\User\Usb\OTG\src\usb_core.c           0x00000000   Number         0  usb_core.o ABSOLUTE
    ..\User\Usb\OTG\src\usb_dcd.c            0x00000000   Number         0  usb_dcd.o ABSOLUTE
    ..\User\Usb\OTG\src\usb_dcd_int.c        0x00000000   Number         0  usb_dcd_int.o ABSOLUTE
    ..\User\main.c                           0x00000000   Number         0  main.o ABSOLUTE
    ..\User\xString.c                        0x00000000   Number         0  xstring.o ABSOLUTE
    ..\\CMSIS\\system_stm32f4xx.c            0x00000000   Number         0  system_stm32f4xx.o ABSOLUTE
    ..\\User\\BluetoothProtocol.c            0x00000000   Number         0  bluetoothprotocol.o ABSOLUTE
    ..\\User\\Device\\Device74HC165.c        0x00000000   Number         0  device74hc165.o ABSOLUTE
    ..\\User\\Device\\DeviceBluetooth.c      0x00000000   Number         0  devicebluetooth.o ABSOLUTE
    ..\\User\\Device\\DeviceCh451s.c         0x00000000   Number         0  devicech451s.o ABSOLUTE
    ..\\User\\Device\\DeviceLcd.c            0x00000000   Number         0  devicelcd.o ABSOLUTE
    ..\\User\\Device\\DeviceLed.c            0x00000000   Number         0  deviceled.o ABSOLUTE
    ..\\User\\Device\\DeviceMoto.c           0x00000000   Number         0  devicemoto.o ABSOLUTE
    ..\\User\\Device\\DeviceNrf2401.c        0x00000000   Number         0  devicenrf2401.o ABSOLUTE
    ..\\User\\Periph\\PeriphFsmc.c           0x00000000   Number         0  periphfsmc.o ABSOLUTE
    ..\\User\\Periph\\PeriphTimer.c          0x00000000   Number         0  periphtimer.o ABSOLUTE
    ..\\User\\SysTimer.c                     0x00000000   Number         0  systimer.o ABSOLUTE
    ..\\User\\Task\\BluetoothReceiverTask.c  0x00000000   Number         0  bluetoothreceivertask.o ABSOLUTE
    ..\\User\\Task\\Ch451sTask.c             0x00000000   Number         0  ch451stask.o ABSOLUTE
    ..\\User\\Task\\MotoControlTask.c        0x00000000   Number         0  motocontroltask.o ABSOLUTE
    ..\\User\\Task\\MotoUpDownControlTask.c  0x00000000   Number         0  motoupdowncontroltask.o ABSOLUTE
    ..\\User\\Task\\StatusCheckTask.c        0x00000000   Number         0  statuschecktask.o ABSOLUTE
    ..\\User\\Task\\TimerTask.c              0x00000000   Number         0  timertask.o ABSOLUTE
    ..\\User\\Usb\\APP\\usb_bsp.c            0x00000000   Number         0  usb_bsp.o ABSOLUTE
    ..\\User\\Usb\\APP\\usb_it.c             0x00000000   Number         0  usb_it.o ABSOLUTE
    ..\\User\\Usb\\APP\\usbd_desc.c          0x00000000   Number         0  usbd_desc.o ABSOLUTE
    ..\\User\\Usb\\APP\\usbd_usr.c           0x00000000   Number         0  usbd_usr.o ABSOLUTE
    ..\\User\\Usb\\DEVICE\\hid\\src\\usbd_hid_core.c 0x00000000   Number         0  usbd_hid_core.o ABSOLUTE
    ..\\User\\Usb\\DEVICE\\src\\usbd_core.c  0x00000000   Number         0  usbd_core.o ABSOLUTE
    ..\\User\\Usb\\DEVICE\\src\\usbd_ioreq.c 0x00000000   Number         0  usbd_ioreq.o ABSOLUTE
    ..\\User\\Usb\\DEVICE\\src\\usbd_req.c   0x00000000   Number         0  usbd_req.o ABSOLUTE
    ..\\User\\Usb\\OTG\\src\\usb_core.c      0x00000000   Number         0  usb_core.o ABSOLUTE
    ..\\User\\Usb\\OTG\\src\\usb_dcd.c       0x00000000   Number         0  usb_dcd.o ABSOLUTE
    ..\\User\\Usb\\OTG\\src\\usb_dcd_int.c   0x00000000   Number         0  usb_dcd_int.o ABSOLUTE
    ..\\User\\main.c                         0x00000000   Number         0  main.o ABSOLUTE
    D:\\keil\\ARM\\PACK\\ARM\\CMSIS\\5.3.0\\CMSIS\\RTOS2\\RTX\\Source\\rtx_lib.c 0x00000000   Number         0  rtx_lib.o ABSOLUTE
    D:\keil\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS2\RTX\Source\rtx_lib.c 0x00000000   Number         0  rtx_lib.o ABSOLUTE
    RTE\CMSIS\RTX_Config.c                   0x00000000   Number         0  rtx_config.o ABSOLUTE
    RTE\\CMSIS\\RTX_Config.c                 0x00000000   Number         0  rtx_config.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    os_systick.c                             0x00000000   Number         0  os_systick.o ABSOLUTE
    rtx_delay.c                              0x00000000   Number         0  rtx_delay.o ABSOLUTE
    rtx_kernel.c                             0x00000000   Number         0  rtx_kernel.o ABSOLUTE
    rtx_memory.c                             0x00000000   Number         0  rtx_memory.o ABSOLUTE
    rtx_mempool.c                            0x00000000   Number         0  rtx_mempool.o ABSOLUTE
    rtx_msgqueue.c                           0x00000000   Number         0  rtx_msgqueue.o ABSOLUTE
    rtx_mutex.c                              0x00000000   Number         0  rtx_mutex.o ABSOLUTE
    rtx_system.c                             0x00000000   Number         0  rtx_system.o ABSOLUTE
    rtx_thread.c                             0x00000000   Number         0  rtx_thread.o ABSOLUTE
    rtx_timer.c                              0x00000000   Number         0  rtx_timer.o ABSOLUTE
    RESET                                    0x08000000   Section      392  startup_stm32f40_41xxx.o(RESET)
    !!!main                                  0x08000188   Section        8  __main.o(!!!main)
    !!!scatter                               0x08000190   Section       52  __scatter.o(!!!scatter)
    !!dczerorl2                              0x080001c4   Section       90  __dczerorl2.o(!!dczerorl2)
    !!handler_zi                             0x08000220   Section       28  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$libinit$$00000000          0x0800023c   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000001          0x0800023e   Section        4  libinit2.o(.ARM.Collect$$libinit$$00000001)
    .ARM.Collect$$libinit$$00000004          0x08000242   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$0000000A          0x08000242   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    .ARM.Collect$$libinit$$0000000C          0x08000242   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000E          0x08000242   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$00000011          0x08000242   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    .ARM.Collect$$libinit$$00000013          0x08000242   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x08000242   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x08000242   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x08000242   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x08000242   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x08000242   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x08000242   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x08000242   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x08000242   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000025          0x08000242   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$0000002C          0x08000242   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    .ARM.Collect$$libinit$$0000002E          0x08000242   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x08000242   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000032          0x08000242   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000033          0x08000242   Section        2  libinit2.o(.ARM.Collect$$libinit$$00000033)
    .ARM.Collect$$libshutdown$$00000000      0x08000244   Section        2  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000002      0x08000246   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    .ARM.Collect$$libshutdown$$00000004      0x08000246   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    .ARM.Collect$$libshutdown$$00000007      0x08000246   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    .ARM.Collect$$libshutdown$$0000000A      0x08000246   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    .ARM.Collect$$libshutdown$$0000000C      0x08000246   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    .ARM.Collect$$libshutdown$$0000000F      0x08000246   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$libshutdown$$00000010      0x08000246   Section        2  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    .ARM.Collect$$rtentry$$00000000          0x08000248   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x08000248   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x08000248   Section        6  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000008          0x0800024e   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$00000008)
    .ARM.Collect$$rtentry$$0000000A          0x08000256   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x0800025a   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x0800025a   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtexit$$00000000           0x08000262   Section        2  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x08000264   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x08000264   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x08000268   Section        6  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    .text                                    0x08000270   Section       60  startup_stm32f40_41xxx.o(.text)
    $v0                                      0x08000270   Number         0  startup_stm32f40_41xxx.o(.text)
    .text                                    0x080002ac   Section      196  irq_cm4f.o(.text)
    $v0                                      0x080002ac   Number         0  irq_cm4f.o(.text)
    .text                                    0x08000370   Section      138  rt_memcpy_v6.o(.text)
    .text                                    0x080003fa   Section       78  rt_memclr_w.o(.text)
    .text                                    0x08000448   Section        0  heapauxi.o(.text)
    .text                                    0x0800044e   Section      100  rt_memcpy_w.o(.text)
    .text                                    0x080004b2   Section       74  sys_stackheap_outer.o(.text)
    .text                                    0x080004fc   Section        0  exit.o(.text)
    .text                                    0x08000510   Section        8  libspace.o(.text)
    .text                                    0x08000518   Section        0  sys_exit.o(.text)
    .text                                    0x08000524   Section        2  use_no_semi.o(.text)
    [Anonymous Symbol]                       0x08000526   Section        0  rtx_msgqueue.o(.text.MessageQueuePut)
    .text                                    0x08000526   Section        0  indicate_semi.o(.text)
    MessageQueuePut                          0x08000527   Thumb Code   100  rtx_msgqueue.o(.text.MessageQueuePut)
    [Anonymous Symbol]                       0x0800058c   Section        0  os_systick.o(.text.OS_Tick_AcknowledgeIRQ)
    __arm_cp.3_0                             0x08000594   Number         4  os_systick.o(.text.OS_Tick_AcknowledgeIRQ)
    [Anonymous Symbol]                       0x08000598   Section        0  rtx_kernel.o(.text.osKernelGetState)
    __arm_cp.3_0                             0x080005c4   Number         4  rtx_kernel.o(.text.osKernelGetState)
    __arm_cp.3_1                             0x080005c8   Number         4  rtx_kernel.o(.text.osKernelGetState)
    [Anonymous Symbol]                       0x080005cc   Section        0  rtx_kernel.o(.text.osKernelInitialize)
    __arm_cp.0_0                             0x080005ec   Number         4  rtx_kernel.o(.text.osKernelInitialize)
    [Anonymous Symbol]                       0x080005f0   Section        0  rtx_msgqueue.o(.text.osMessageQueuePut)
    __arm_cp.2_0                             0x0800066c   Number         4  rtx_msgqueue.o(.text.osMessageQueuePut)
    [Anonymous Symbol]                       0x08000670   Section        0  rtx_mutex.o(.text.osMutexAcquire)
    __arm_cp.3_0                             0x08000690   Number         4  rtx_mutex.o(.text.osMutexAcquire)
    [Anonymous Symbol]                       0x08000694   Section        0  rtx_mutex.o(.text.osMutexDelete)
    __arm_cp.6_0                             0x080006b4   Number         4  rtx_mutex.o(.text.osMutexDelete)
    [Anonymous Symbol]                       0x080006b8   Section        0  rtx_mutex.o(.text.osMutexNew)
    __arm_cp.1_0                             0x080006d8   Number         4  rtx_mutex.o(.text.osMutexNew)
    [Anonymous Symbol]                       0x080006dc   Section        0  rtx_mutex.o(.text.osMutexRelease)
    __arm_cp.4_0                             0x080006fc   Number         4  rtx_mutex.o(.text.osMutexRelease)
    [Anonymous Symbol]                       0x08000700   Section        0  rtx_memory.o(.text.osRtxMemoryAlloc)
    [Anonymous Symbol]                       0x08000780   Section        0  rtx_memory.o(.text.osRtxMemoryFree)
    [Anonymous Symbol]                       0x080007d2   Section        0  rtx_memory.o(.text.osRtxMemoryInit)
    [Anonymous Symbol]                       0x08000808   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolAlloc)
    [Anonymous Symbol]                       0x08000852   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolFree)
    [Anonymous Symbol]                       0x080008a8   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolInit)
    [Anonymous Symbol]                       0x080008fc   Section        0  rtx_system.o(.text.osRtxPendSV_Handler)
    __arm_cp.1_0                             0x08000988   Number         4  rtx_system.o(.text.osRtxPendSV_Handler)
    [Anonymous Symbol]                       0x0800098c   Section        0  rtx_system.o(.text.osRtxPostProcess)
    __arm_cp.2_0                             0x080009f8   Number         4  rtx_system.o(.text.osRtxPostProcess)
    __arm_cp.2_1                             0x080009fc   Number         4  rtx_system.o(.text.osRtxPostProcess)
    [Anonymous Symbol]                       0x08000a00   Section        0  rtx_thread.o(.text.osRtxThreadBlock)
    osRtxThreadBlock                         0x08000a01   Thumb Code    60  rtx_thread.o(.text.osRtxThreadBlock)
    __arm_cp.10_0                            0x08000a38   Number         4  rtx_thread.o(.text.osRtxThreadBlock)
    [Anonymous Symbol]                       0x08000a3c   Section        0  rtx_thread.o(.text.osRtxThreadDelayInsert)
    osRtxThreadDelayInsert                   0x08000a3d   Thumb Code   148  rtx_thread.o(.text.osRtxThreadDelayInsert)
    __arm_cp.14_0                            0x08000acc   Number         4  rtx_thread.o(.text.osRtxThreadDelayInsert)
    [Anonymous Symbol]                       0x08000ad0   Section        0  rtx_thread.o(.text.osRtxThreadDelayRemove)
    osRtxThreadDelayRemove                   0x08000ad1   Thumb Code    88  rtx_thread.o(.text.osRtxThreadDelayRemove)
    __arm_cp.12_0                            0x08000b24   Number         4  rtx_thread.o(.text.osRtxThreadDelayRemove)
    [Anonymous Symbol]                       0x08000b28   Section        0  rtx_thread.o(.text.osRtxThreadDelayTick)
    __arm_cp.5_0                             0x08000b5c   Number         4  rtx_thread.o(.text.osRtxThreadDelayTick)
    [Anonymous Symbol]                       0x08000b60   Section        0  rtx_thread.o(.text.osRtxThreadDispatch)
    __arm_cp.9_0                             0x08000bbc   Number         4  rtx_thread.o(.text.osRtxThreadDispatch)
    [Anonymous Symbol]                       0x08000bc0   Section        0  rtx_thread.o(.text.osRtxThreadListGet)
    [Anonymous Symbol]                       0x08000bd6   Section        0  rtx_thread.o(.text.osRtxThreadListPut)
    [Anonymous Symbol]                       0x08000c0e   Section        0  rtx_thread.o(.text.osRtxThreadListRemove)
    [Anonymous Symbol]                       0x08000c22   Section        0  rtx_thread.o(.text.osRtxThreadListSort)
    [Anonymous Symbol]                       0x08000c4c   Section        0  rtx_thread.o(.text.osRtxThreadReadyPut)
    __arm_cp.4_0                             0x08000c5c   Number         4  rtx_thread.o(.text.osRtxThreadReadyPut)
    [Anonymous Symbol]                       0x08000c60   Section        0  rtx_thread.o(.text.osRtxThreadRegPtr)
    [Anonymous Symbol]                       0x08000c74   Section        0  rtx_thread.o(.text.osRtxThreadSwitch)
    __arm_cp.7_0                             0x08000c80   Number         4  rtx_thread.o(.text.osRtxThreadSwitch)
    [Anonymous Symbol]                       0x08000c84   Section        0  rtx_thread.o(.text.osRtxThreadWaitEnter)
    __arm_cp.13_0                            0x08000cb8   Number         4  rtx_thread.o(.text.osRtxThreadWaitEnter)
    [Anonymous Symbol]                       0x08000cbc   Section        0  rtx_thread.o(.text.osRtxThreadWaitExit)
    [Anonymous Symbol]                       0x08000cf0   Section        0  rtx_system.o(.text.osRtxTick_Handler)
    __arm_cp.0_0                             0x08000d5c   Number         4  rtx_system.o(.text.osRtxTick_Handler)
    [Anonymous Symbol]                       0x08000d60   Section        0  rtx_kernel.o(.text.svcRtxKernelGetState)
    svcRtxKernelGetState                     0x08000d61   Thumb Code    12  rtx_kernel.o(.text.svcRtxKernelGetState)
    __arm_cp.4_0                             0x08000d68   Number         4  rtx_kernel.o(.text.svcRtxKernelGetState)
    [Anonymous Symbol]                       0x08000d6c   Section        0  rtx_kernel.o(.text.svcRtxKernelInitialize)
    svcRtxKernelInitialize                   0x08000d6d   Thumb Code   376  rtx_kernel.o(.text.svcRtxKernelInitialize)
    __arm_cp.19_0                            0x08000ed8   Number         4  rtx_kernel.o(.text.svcRtxKernelInitialize)
    __arm_cp.19_1                            0x08000edc   Number         4  rtx_kernel.o(.text.svcRtxKernelInitialize)
    __arm_cp.19_2                            0x08000ee0   Number         4  rtx_kernel.o(.text.svcRtxKernelInitialize)
    [Anonymous Symbol]                       0x08000ee4   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    svcRtxMessageQueuePut                    0x08000ee5   Thumb Code   200  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    __arm_cp.19_0                            0x08000fa8   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    [Anonymous Symbol]                       0x08000fac   Section        0  rtx_mutex.o(.text.svcRtxMutexAcquire)
    svcRtxMutexAcquire                       0x08000fad   Thumb Code   152  rtx_mutex.o(.text.svcRtxMutexAcquire)
    __arm_cp.9_0                             0x08001040   Number         4  rtx_mutex.o(.text.svcRtxMutexAcquire)
    [Anonymous Symbol]                       0x08001044   Section        0  rtx_mutex.o(.text.svcRtxMutexDelete)
    svcRtxMutexDelete                        0x08001045   Thumb Code   212  rtx_mutex.o(.text.svcRtxMutexDelete)
    __arm_cp.12_0                            0x08001114   Number         4  rtx_mutex.o(.text.svcRtxMutexDelete)
    [Anonymous Symbol]                       0x08001118   Section        0  rtx_mutex.o(.text.svcRtxMutexNew)
    svcRtxMutexNew                           0x08001119   Thumb Code   108  rtx_mutex.o(.text.svcRtxMutexNew)
    __arm_cp.7_0                             0x08001180   Number         4  rtx_mutex.o(.text.svcRtxMutexNew)
    [Anonymous Symbol]                       0x08001184   Section        0  rtx_mutex.o(.text.svcRtxMutexRelease)
    svcRtxMutexRelease                       0x08001185   Thumb Code   188  rtx_mutex.o(.text.svcRtxMutexRelease)
    __arm_cp.10_0                            0x0800123c   Number         4  rtx_mutex.o(.text.svcRtxMutexRelease)
    i.DCD_EP_ClrStall                        0x08001240   Section        0  usb_dcd.o(i.DCD_EP_ClrStall)
    i.DCD_EP_Open                            0x08001278   Section        0  usb_dcd.o(i.DCD_EP_Open)
    i.DCD_EP_PrepareRx                       0x080012b4   Section        0  usb_dcd.o(i.DCD_EP_PrepareRx)
    i.DCD_EP_SetAddress                      0x080012f8   Section        0  usb_dcd.o(i.DCD_EP_SetAddress)
    i.DCD_EP_Stall                           0x08001308   Section        0  usb_dcd.o(i.DCD_EP_Stall)
    i.DCD_EP_Tx                              0x08001340   Section        0  usb_dcd.o(i.DCD_EP_Tx)
    i.DCD_HandleInEP_ISR                     0x08001380   Section        0  usb_dcd_int.o(i.DCD_HandleInEP_ISR)
    DCD_HandleInEP_ISR                       0x08001381   Thumb Code   198  usb_dcd_int.o(i.DCD_HandleInEP_ISR)
    i.DCD_HandleOutEP_ISR                    0x0800144c   Section        0  usb_dcd_int.o(i.DCD_HandleOutEP_ISR)
    DCD_HandleOutEP_ISR                      0x0800144d   Thumb Code   166  usb_dcd_int.o(i.DCD_HandleOutEP_ISR)
    i.DCD_HandleRxStatusQueueLevel_ISR       0x080014f8   Section        0  usb_dcd_int.o(i.DCD_HandleRxStatusQueueLevel_ISR)
    DCD_HandleRxStatusQueueLevel_ISR         0x080014f9   Thumb Code   124  usb_dcd_int.o(i.DCD_HandleRxStatusQueueLevel_ISR)
    i.DCD_HandleUSBSuspend_ISR               0x08001574   Section        0  usb_dcd_int.o(i.DCD_HandleUSBSuspend_ISR)
    DCD_HandleUSBSuspend_ISR                 0x08001575   Thumb Code   102  usb_dcd_int.o(i.DCD_HandleUSBSuspend_ISR)
    i.DCD_HandleUsbReset_ISR                 0x080015e4   Section        0  usb_dcd_int.o(i.DCD_HandleUsbReset_ISR)
    DCD_HandleUsbReset_ISR                   0x080015e5   Thumb Code   128  usb_dcd_int.o(i.DCD_HandleUsbReset_ISR)
    i.DCD_WriteEmptyTxFifo                   0x08001668   Section        0  usb_dcd_int.o(i.DCD_WriteEmptyTxFifo)
    DCD_WriteEmptyTxFifo                     0x08001669   Thumb Code   134  usb_dcd_int.o(i.DCD_WriteEmptyTxFifo)
    i.OTG_FS_IRQHandler                      0x080016f4   Section        0  usb_it.o(i.OTG_FS_IRQHandler)
    i.SetSysClock                            0x08001700   Section        0  system_stm32f4xx.o(i.SetSysClock)
    SetSysClock                              0x08001701   Thumb Code   162  system_stm32f4xx.o(i.SetSysClock)
    i.SystemInit                             0x080017b4   Section        0  system_stm32f4xx.o(i.SystemInit)
    i.USART2_IRQHandler                      0x08001810   Section        0  devicebluetooth.o(i.USART2_IRQHandler)
    i.USBD_ClrCfg                            0x08001878   Section        0  usbd_core.o(i.USBD_ClrCfg)
    i.USBD_CtlContinueRx                     0x08001886   Section        0  usbd_ioreq.o(i.USBD_CtlContinueRx)
    i.USBD_CtlContinueSendData               0x08001898   Section        0  usbd_ioreq.o(i.USBD_CtlContinueSendData)
    i.USBD_CtlError                          0x080018aa   Section        0  usbd_req.o(i.USBD_CtlError)
    i.USBD_CtlReceiveStatus                  0x080018c6   Section        0  usbd_ioreq.o(i.USBD_CtlReceiveStatus)
    i.USBD_CtlSendData                       0x080018e8   Section        0  usbd_ioreq.o(i.USBD_CtlSendData)
    i.USBD_CtlSendStatus                     0x08001908   Section        0  usbd_ioreq.o(i.USBD_CtlSendStatus)
    i.USBD_DataInStage                       0x0800192c   Section        0  usbd_core.o(i.USBD_DataInStage)
    USBD_DataInStage                         0x0800192d   Thumb Code   172  usbd_core.o(i.USBD_DataInStage)
    i.USBD_DataOutStage                      0x080019dc   Section        0  usbd_core.o(i.USBD_DataOutStage)
    USBD_DataOutStage                        0x080019dd   Thumb Code   120  usbd_core.o(i.USBD_DataOutStage)
    i.USBD_GetDescriptor                     0x08001a54   Section        0  usbd_req.o(i.USBD_GetDescriptor)
    USBD_GetDescriptor                       0x08001a55   Thumb Code   206  usbd_req.o(i.USBD_GetDescriptor)
    i.USBD_IsoINIncomplete                   0x08001b22   Section        0  usbd_core.o(i.USBD_IsoINIncomplete)
    USBD_IsoINIncomplete                     0x08001b23   Thumb Code    14  usbd_core.o(i.USBD_IsoINIncomplete)
    i.USBD_IsoOUTIncomplete                  0x08001b30   Section        0  usbd_core.o(i.USBD_IsoOUTIncomplete)
    USBD_IsoOUTIncomplete                    0x08001b31   Thumb Code    14  usbd_core.o(i.USBD_IsoOUTIncomplete)
    i.USBD_OTG_ISR_Handler                   0x08001b40   Section        0  usb_dcd_int.o(i.USBD_OTG_ISR_Handler)
    i.USBD_ParseSetupRequest                 0x08001c8c   Section        0  usbd_req.o(i.USBD_ParseSetupRequest)
    i.USBD_Reset                             0x08001cd0   Section        0  usbd_core.o(i.USBD_Reset)
    USBD_Reset                               0x08001cd1   Thumb Code    46  usbd_core.o(i.USBD_Reset)
    i.USBD_Resume                            0x08001cfe   Section        0  usbd_core.o(i.USBD_Resume)
    USBD_Resume                              0x08001cff   Thumb Code    22  usbd_core.o(i.USBD_Resume)
    i.USBD_SOF                               0x08001d14   Section        0  usbd_core.o(i.USBD_SOF)
    USBD_SOF                                 0x08001d15   Thumb Code    16  usbd_core.o(i.USBD_SOF)
    i.USBD_SetCfg                            0x08001d24   Section        0  usbd_core.o(i.USBD_SetCfg)
    i.USBD_SetConfig                         0x08001d40   Section        0  usbd_req.o(i.USBD_SetConfig)
    USBD_SetConfig                           0x08001d41   Thumb Code   112  usbd_req.o(i.USBD_SetConfig)
    i.USBD_SetFeature                        0x08001db4   Section        0  usbd_req.o(i.USBD_SetFeature)
    USBD_SetFeature                          0x08001db5   Thumb Code   118  usbd_req.o(i.USBD_SetFeature)
    i.USBD_SetupStage                        0x08001e30   Section        0  usbd_core.o(i.USBD_SetupStage)
    USBD_SetupStage                          0x08001e31   Thumb Code    72  usbd_core.o(i.USBD_SetupStage)
    i.USBD_StdDevReq                         0x08001e78   Section        0  usbd_req.o(i.USBD_StdDevReq)
    i.USBD_StdEPReq                          0x08001f68   Section        0  usbd_req.o(i.USBD_StdEPReq)
    i.USBD_StdItfReq                         0x0800203c   Section        0  usbd_req.o(i.USBD_StdItfReq)
    i.USBD_Suspend                           0x08002072   Section        0  usbd_core.o(i.USBD_Suspend)
    USBD_Suspend                             0x08002073   Thumb Code    28  usbd_core.o(i.USBD_Suspend)
    i.USB_OTG_BSP_uDelay                     0x0800208e   Section        0  usb_bsp.o(i.USB_OTG_BSP_uDelay)
    i.USB_OTG_EP0Activate                    0x0800209e   Section        0  usb_core.o(i.USB_OTG_EP0Activate)
    i.USB_OTG_EP0StartXfer                   0x080020d8   Section        0  usb_core.o(i.USB_OTG_EP0StartXfer)
    i.USB_OTG_EP0_OutStart                   0x08002190   Section        0  usb_core.o(i.USB_OTG_EP0_OutStart)
    i.USB_OTG_EPActivate                     0x080021b4   Section        0  usb_core.o(i.USB_OTG_EPActivate)
    i.USB_OTG_EPClearStall                   0x08002206   Section        0  usb_core.o(i.USB_OTG_EPClearStall)
    i.USB_OTG_EPSetStall                     0x08002238   Section        0  usb_core.o(i.USB_OTG_EPSetStall)
    i.USB_OTG_EPStartXfer                    0x08002268   Section        0  usb_core.o(i.USB_OTG_EPStartXfer)
    i.USB_OTG_FlushTxFifo                    0x08002388   Section        0  usb_core.o(i.USB_OTG_FlushTxFifo)
    i.USB_OTG_GetDeviceSpeed                 0x080023c8   Section        0  usb_core.o(i.USB_OTG_GetDeviceSpeed)
    i.USB_OTG_IsDeviceMode                   0x080023ee   Section        0  usb_core.o(i.USB_OTG_IsDeviceMode)
    i.USB_OTG_ReadCoreItr                    0x08002400   Section        0  usb_core.o(i.USB_OTG_ReadCoreItr)
    i.USB_OTG_ReadDevAllInEPItr              0x0800240a   Section        0  usb_core.o(i.USB_OTG_ReadDevAllInEPItr)
    i.USB_OTG_ReadDevAllOutEp_itr            0x08002416   Section        0  usb_core.o(i.USB_OTG_ReadDevAllOutEp_itr)
    i.USB_OTG_ReadDevOutEP_itr               0x08002422   Section        0  usb_core.o(i.USB_OTG_ReadDevOutEP_itr)
    i.USB_OTG_ReadPacket                     0x08002432   Section        0  usb_core.o(i.USB_OTG_ReadPacket)
    i.USB_OTG_WritePacket                    0x08002452   Section        0  usb_core.o(i.USB_OTG_WritePacket)
    i._mutex_acquire                         0x0800247a   Section        0  rtx_lib.o(i._mutex_acquire)
    __tagsym$$used                           0x0800247b   Number         0  rtx_lib.o(i._mutex_acquire)
    i._mutex_free                            0x08002496   Section        0  rtx_lib.o(i._mutex_free)
    __tagsym$$used                           0x08002497   Number         0  rtx_lib.o(i._mutex_free)
    i._mutex_initialize                      0x0800249c   Section        0  rtx_lib.o(i._mutex_initialize)
    __tagsym$$used                           0x0800249d   Number         0  rtx_lib.o(i._mutex_initialize)
    i._mutex_release                         0x080024bc   Section        0  rtx_lib.o(i._mutex_release)
    __tagsym$$used                           0x080024bd   Number         0  rtx_lib.o(i._mutex_release)
    i._platform_post_stackheap_init          0x080024d4   Section        0  rtx_lib.o(i._platform_post_stackheap_init)
    i.delay                                  0x080024d8   Section        0  devicech451s.o(i.delay)
    delay                                    0x080024d9   Thumb Code    10  devicech451s.o(i.delay)
    i.main                                   0x080024e4   Section        0  main.o(i.main)
    i.osRtxErrorNotify                       0x08002564   Section        0  rtx_config.o(i.osRtxErrorNotify)
    i.osRtxThreadStackCheck                  0x08002566   Section        0  rtx_lib.o(i.osRtxThreadStackCheck)
    i.os_kernel_is_active                    0x08002568   Section        0  rtx_lib.o(i.os_kernel_is_active)
    os_kernel_is_active                      0x08002569   Thumb Code    24  rtx_lib.o(i.os_kernel_is_active)
    i.v74HC165Init                           0x08002584   Section        0  device74hc165.o(i.v74HC165Init)
    i.vBluetoothBufferOver                   0x080025d4   Section        0  devicebluetooth.o(i.vBluetoothBufferOver)
    vBluetoothBufferOver                     0x080025d5   Thumb Code    78  devicebluetooth.o(i.vBluetoothBufferOver)
    i.vBluetoothGpioInit                     0x0800262c   Section        0  devicebluetooth.o(i.vBluetoothGpioInit)
    vBluetoothGpioInit                       0x0800262d   Thumb Code    98  devicebluetooth.o(i.vBluetoothGpioInit)
    i.vBluetoothInit                         0x08002698   Section        0  devicebluetooth.o(i.vBluetoothInit)
    i.vCh451sInit                            0x08002728   Section        0  devicech451s.o(i.vCh451sInit)
    i.vCh451sWriteData                       0x080027a0   Section        0  devicech451s.o(i.vCh451sWriteData)
    i.vMotoDisableAll                        0x080027f0   Section        0  devicemoto.o(i.vMotoDisableAll)
    i.vMotoInit                              0x08002810   Section        0  devicemoto.o(i.vMotoInit)
    i.vMotoSelect                            0x080028e0   Section        0  devicemoto.o(i.vMotoSelect)
    i.vMotoSetDir                            0x08002920   Section        0  devicemoto.o(i.vMotoSetDir)
    i.vNrf2401Init                           0x0800293c   Section        0  devicenrf2401.o(i.vNrf2401Init)
    i.vNrfEnterTxMode                        0x080029a0   Section        0  devicenrf2401.o(i.vNrfEnterTxMode)
    i.vSysTimerDelay                         0x08002a10   Section        0  systimer.o(i.vSysTimerDelay)
    i.vSysTimerInit                          0x08002a3c   Section        0  systimer.o(i.vSysTimerInit)
    i.vTimer1Init                            0x08002a50   Section        0  periphtimer.o(i.vTimer1Init)
    i.vTimer2Init                            0x08002ad0   Section        0  periphtimer.o(i.vTimer2Init)
    i.vTimer3Init                            0x08002b4c   Section        0  periphtimer.o(i.vTimer3Init)
    i.vTimer4Init                            0x08002bf0   Section        0  periphtimer.o(i.vTimer4Init)
    i.vTimer5Init                            0x08002c88   Section        0  periphtimer.o(i.vTimer5Init)
    i.vUart3Init                             0x08002d24   Section        0  main.o(i.vUart3Init)
    i.xNrfCheck                              0x08002dbc   Section        0  devicenrf2401.o(i.xNrfCheck)
    i.xNrfReadRegisterOfBuffer               0x08002e04   Section        0  devicenrf2401.o(i.xNrfReadRegisterOfBuffer)
    i.xNrfWriteRegister                      0x08002e40   Section        0  devicenrf2401.o(i.xNrfWriteRegister)
    i.xNrfWriteRegisterOfBuffer              0x08002e68   Section        0  devicenrf2401.o(i.xNrfWriteRegisterOfBuffer)
    i.xSpiTranslateByte                      0x08002ea4   Section        0  devicenrf2401.o(i.xSpiTranslateByte)
    xSpiTranslateByte                        0x08002ea5   Thumb Code    72  devicenrf2401.o(i.xSpiTranslateByte)
    x$fpl$fpinit                             0x08002ef0   Section       10  fpinit.o(x$fpl$fpinit)
    $v0                                      0x08002ef0   Number         0  fpinit.o(x$fpl$fpinit)
    .constdata                               0x08002efa   Section       10  devicenrf2401.o(.constdata)
    NrfTxAddress                             0x08002efa   Data           5  devicenrf2401.o(.constdata)
    NrfRxAddress                             0x08002eff   Data           5  devicenrf2401.o(.constdata)
    .constdata                               0x08002f04   Section       36  rtx_lib.o(.constdata)
    os_idle_thread_attr                      0x08002f04   Data          36  rtx_lib.o(.constdata)
    .constdata                               0x08002f28   Section       36  rtx_lib.o(.constdata)
    os_timer_thread_attr                     0x08002f28   Data          36  rtx_lib.o(.constdata)
    .constdata                               0x08002f4c   Section       24  rtx_lib.o(.constdata)
    os_timer_mq_attr                         0x08002f4c   Data          24  rtx_lib.o(.constdata)
    .constdata                               0x08002f64   Section        4  rtx_lib.o(.constdata)
    .conststring                             0x08002f68   Section       16  devicebluetooth.o(.conststring)
    .conststring                             0x08002f78   Section       14  bluetoothreceivertask.o(.conststring)
    .rodata                                  0x08002f88   Section      104  rtx_lib.o(.rodata)
    __tagsym$$used                           0x08002f88   Number         0  rtx_lib.o(.rodata)
    [Anonymous Symbol]                       0x08002ff0   Section        0  rtx_kernel.o(.rodata.str1.4)
    .L.str                                   0x08002ff0   Data          11  rtx_kernel.o(.rodata.str1.4)
    .bss.os                                  0x20000000   Section    40960  rtx_lib.o(.bss.os)
    os_mem                                   0x20000000   Data       40960  rtx_lib.o(.bss.os)
    .bss.os                                  0x2000a000   Section       64  rtx_lib.o(.bss.os)
    os_isr_queue                             0x2000a000   Data          64  rtx_lib.o(.bss.os)
    .bss.os.msgqueue.cb                      0x2000a040   Section       52  rtx_lib.o(.bss.os.msgqueue.cb)
    os_timer_mq_cb                           0x2000a040   Data          52  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.msgqueue.mem                     0x2000a074   Section       80  rtx_lib.o(.bss.os.msgqueue.mem)
    os_timer_mq_data                         0x2000a074   Data          80  rtx_lib.o(.bss.os.msgqueue.mem)
    .bss.os.thread.cb                        0x2000a0c4   Section      680  rtx_lib.o(.bss.os.thread.cb)
    os_thread_cb                             0x2000a0c4   Data         680  rtx_lib.o(.bss.os.thread.cb)
    .bss.os.thread.cb                        0x2000a36c   Section       68  rtx_lib.o(.bss.os.thread.cb)
    os_idle_thread_cb                        0x2000a36c   Data          68  rtx_lib.o(.bss.os.thread.cb)
    .bss.os.thread.cb                        0x2000a3b0   Section       68  rtx_lib.o(.bss.os.thread.cb)
    os_timer_thread_cb                       0x2000a3b0   Data          68  rtx_lib.o(.bss.os.thread.cb)
    .bss.os.thread.stack                     0x2000a3f8   Section      512  rtx_lib.o(.bss.os.thread.stack)
    os_idle_thread_stack                     0x2000a3f8   Data         512  rtx_lib.o(.bss.os.thread.stack)
    .bss.os.thread.stack                     0x2000a5f8   Section      512  rtx_lib.o(.bss.os.thread.stack)
    os_timer_thread_stack                    0x2000a5f8   Data         512  rtx_lib.o(.bss.os.thread.stack)
    .bss.os.timer.cb                         0x2000a7f8   Section      160  rtx_lib.o(.bss.os.timer.cb)
    os_timer_cb                              0x2000a7f8   Data         160  rtx_lib.o(.bss.os.timer.cb)
    .data                                    0x2000a898   Section       36  devicebluetooth.o(.data)
    RecvStartIndex                           0x2000a898   Data           4  devicebluetooth.o(.data)
    RecvEndIndex                             0x2000a89c   Data           4  devicebluetooth.o(.data)
    BluetoothMutex                           0x2000a8a0   Data           4  devicebluetooth.o(.data)
    BluetoothRecver                          0x2000a8a4   Data           8  devicebluetooth.o(.data)
    BluetoothMutextAttr                      0x2000a8ac   Data          16  devicebluetooth.o(.data)
    .data                                    0x2000a8bc   Section       44  bluetoothreceivertask.o(.data)
    BluetoothTaskAttr                        0x2000a8c4   Data          36  bluetoothreceivertask.o(.data)
    .data                                    0x2000a8e8   Section        1  usb_dcd_int.o(.data)
    .data                                    0x2000a8ec   Section       44  usbd_core.o(.data)
    .data                                    0x2000a918   Section        4  usbd_core.o(.data)
    .data                                    0x2000a91c   Section        4  usbd_core.o(.data)
    .data                                    0x2000a920   Section       16  usbd_req.o(.data)
    cfgidx                                   0x2000a920   Data           1  usbd_req.o(.data)
    .data                                    0x2000a930   Section        1  rtx_lib.o(.data)
    os_kernel_active                         0x2000a930   Data           1  rtx_lib.o(.data)
    .data.os.thread.mpi                      0x2000a9d8   Section       24  rtx_lib.o(.data.os.thread.mpi)
    os_mpi_thread                            0x2000a9d8   Data          24  rtx_lib.o(.data.os.thread.mpi)
    .data.os.timer.mpi                       0x2000a9f0   Section       24  rtx_lib.o(.data.os.timer.mpi)
    os_mpi_timer                             0x2000a9f0   Data          24  rtx_lib.o(.data.os.timer.mpi)
    .bss                                     0x2000aa08   Section     1044  devicebluetooth.o(.bss)
    BluetoothReceiverBuffer                  0x2000aa08   Data        1024  devicebluetooth.o(.bss)
    BluetoothBuffer                          0x2000ae08   Data          20  devicebluetooth.o(.bss)
    .bss                                     0x2000ae20   Section     8192  bluetoothreceivertask.o(.bss)
    BluetoothTaskStack                       0x2000ae20   Data        8192  bluetoothreceivertask.o(.bss)
    .bss                                     0x2000ce20   Section     1524  usbd_usr.o(.bss)
    .bss                                     0x2000d414   Section       96  libspace.o(.bss)
    HEAP                                     0x2000d478   Section        0  startup_stm32f40_41xxx.o(HEAP)
    STACK                                    0x2000d478   Section     1024  startup_stm32f40_41xxx.o(STACK)
    Heap_Mem                                 0x2000d478   Data           0  startup_stm32f40_41xxx.o(HEAP)
    Stack_Mem                                0x2000d478   Data        1024  startup_stm32f40_41xxx.o(STACK)
    __initial_sp                             0x2000d878   Data           0  startup_stm32f40_41xxx.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$E$P$D$K$B$S$7EM$VFPi3$EXTD16$VFPS$VFMA$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OSPACE$ROPI$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __ARM_use_no_argv                        0x00000000   Number         0  main.o ABSOLUTE
    .bss.os.evflags.cb$$Base                  - Undefined Weak Reference
    .bss.os.evflags.cb$$Limit                 - Undefined Weak Reference
    .bss.os.mempool.cb$$Base                  - Undefined Weak Reference
    .bss.os.mempool.cb$$Limit                 - Undefined Weak Reference
    .bss.os.mutex.cb$$Base                    - Undefined Weak Reference
    .bss.os.mutex.cb$$Limit                   - Undefined Weak Reference
    .bss.os.semaphore.cb$$Base                - Undefined Weak Reference
    .bss.os.semaphore.cb$$Limit               - Undefined Weak Reference
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __rt_locale                               - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_ctype                             - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_numeric                           - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _init_alloc                               - Undefined Weak Reference
    _init_user_alloc                          - Undefined Weak Reference
    _initio                                   - Undefined Weak Reference
    _rand_init                                - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    _terminate_alloc                          - Undefined Weak Reference
    _terminate_user_alloc                     - Undefined Weak Reference
    _terminateio                              - Undefined Weak Reference
    __Vectors_Size                           0x00000188   Number         0  startup_stm32f40_41xxx.o ABSOLUTE
    __Vectors                                0x08000000   Data           4  startup_stm32f40_41xxx.o(RESET)
    __Vectors_End                            0x08000188   Data           0  startup_stm32f40_41xxx.o(RESET)
    __main                                   0x08000189   Thumb Code     8  __main.o(!!!main)
    __scatterload                            0x08000191   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x08000191   Thumb Code    44  __scatter.o(!!!scatter)
    __scatterload_rt2_thumb_only             0x08000191   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_null                       0x0800019f   Thumb Code     0  __scatter.o(!!!scatter)
    __decompress                             0x080001c5   Thumb Code    90  __dczerorl2.o(!!dczerorl2)
    __decompress1                            0x080001c5   Thumb Code     0  __dczerorl2.o(!!dczerorl2)
    __scatterload_zeroinit                   0x08000221   Thumb Code    28  __scatter_zi.o(!!handler_zi)
    __rt_lib_init                            0x0800023d   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_fp_1                       0x0800023f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000001)
    __rt_lib_init_alloca_1                   0x08000243   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_argv_1                     0x08000243   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    __rt_lib_init_atexit_1                   0x08000243   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_clock_1                    0x08000243   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_cpp_1                      0x08000243   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_exceptions_1               0x08000243   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_fp_trap_1                  0x08000243   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_getenv_1                   0x08000243   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_heap_1                     0x08000243   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    __rt_lib_init_lc_collate_1               0x08000243   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    __rt_lib_init_lc_ctype_1                 0x08000243   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_monetary_1              0x08000243   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_numeric_1               0x08000243   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_time_1                  0x08000243   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_preinit_1                  0x08000243   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_rand_1                     0x08000243   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_init_return                     0x08000243   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000033)
    __rt_lib_init_signal_1                   0x08000243   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_stdio_1                    0x08000243   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    __rt_lib_init_user_alloc_1               0x08000243   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    __rt_lib_shutdown                        0x08000245   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_cpp_1                  0x08000247   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    __rt_lib_shutdown_fp_trap_1              0x08000247   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    __rt_lib_shutdown_heap_1                 0x08000247   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_return                 0x08000247   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    __rt_lib_shutdown_signal_1               0x08000247   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    __rt_lib_shutdown_stdio_1                0x08000247   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    __rt_lib_shutdown_user_alloc_1           0x08000247   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    __rt_entry                               0x08000249   Thumb Code     0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x08000249   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x08000249   Thumb Code     0  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_postsh_1                      0x0800024f   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000008)
    __rt_entry_li                            0x08000257   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_main                          0x0800025b   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x0800025b   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    __rt_exit                                0x08000263   Thumb Code     0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x08000265   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x08000265   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x08000269   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    Reset_Handler                            0x08000271   Thumb Code     8  startup_stm32f40_41xxx.o(.text)
    NMI_Handler                              0x08000279   Thumb Code     2  startup_stm32f40_41xxx.o(.text)
    HardFault_Handler                        0x0800027b   Thumb Code     2  startup_stm32f40_41xxx.o(.text)
    MemManage_Handler                        0x0800027d   Thumb Code     2  startup_stm32f40_41xxx.o(.text)
    BusFault_Handler                         0x0800027f   Thumb Code     2  startup_stm32f40_41xxx.o(.text)
    UsageFault_Handler                       0x08000281   Thumb Code     2  startup_stm32f40_41xxx.o(.text)
    DebugMon_Handler                         0x08000285   Thumb Code     2  startup_stm32f40_41xxx.o(.text)
    ADC_IRQHandler                           0x0800028b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    CAN1_RX0_IRQHandler                      0x0800028b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    CAN1_RX1_IRQHandler                      0x0800028b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    CAN1_SCE_IRQHandler                      0x0800028b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    CAN1_TX_IRQHandler                       0x0800028b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    CAN2_RX0_IRQHandler                      0x0800028b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    CAN2_RX1_IRQHandler                      0x0800028b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    CAN2_SCE_IRQHandler                      0x0800028b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    CAN2_TX_IRQHandler                       0x0800028b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    CRYP_IRQHandler                          0x0800028b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    DCMI_IRQHandler                          0x0800028b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    DMA1_Stream0_IRQHandler                  0x0800028b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    DMA1_Stream1_IRQHandler                  0x0800028b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    DMA1_Stream2_IRQHandler                  0x0800028b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    DMA1_Stream3_IRQHandler                  0x0800028b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    DMA1_Stream4_IRQHandler                  0x0800028b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    DMA1_Stream5_IRQHandler                  0x0800028b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    DMA1_Stream6_IRQHandler                  0x0800028b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    DMA1_Stream7_IRQHandler                  0x0800028b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    DMA2_Stream0_IRQHandler                  0x0800028b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    DMA2_Stream1_IRQHandler                  0x0800028b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    DMA2_Stream2_IRQHandler                  0x0800028b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    DMA2_Stream3_IRQHandler                  0x0800028b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    DMA2_Stream4_IRQHandler                  0x0800028b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    DMA2_Stream5_IRQHandler                  0x0800028b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    DMA2_Stream6_IRQHandler                  0x0800028b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    DMA2_Stream7_IRQHandler                  0x0800028b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    ETH_IRQHandler                           0x0800028b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    ETH_WKUP_IRQHandler                      0x0800028b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    EXTI0_IRQHandler                         0x0800028b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    EXTI15_10_IRQHandler                     0x0800028b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    EXTI1_IRQHandler                         0x0800028b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    EXTI2_IRQHandler                         0x0800028b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    EXTI3_IRQHandler                         0x0800028b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    EXTI4_IRQHandler                         0x0800028b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    EXTI9_5_IRQHandler                       0x0800028b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    FLASH_IRQHandler                         0x0800028b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    FPU_IRQHandler                           0x0800028b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    FSMC_IRQHandler                          0x0800028b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    HASH_RNG_IRQHandler                      0x0800028b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    I2C1_ER_IRQHandler                       0x0800028b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    I2C1_EV_IRQHandler                       0x0800028b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    I2C2_ER_IRQHandler                       0x0800028b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    I2C2_EV_IRQHandler                       0x0800028b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    I2C3_ER_IRQHandler                       0x0800028b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    I2C3_EV_IRQHandler                       0x0800028b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    OTG_FS_WKUP_IRQHandler                   0x0800028b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    OTG_HS_EP1_IN_IRQHandler                 0x0800028b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    OTG_HS_EP1_OUT_IRQHandler                0x0800028b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    OTG_HS_IRQHandler                        0x0800028b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    OTG_HS_WKUP_IRQHandler                   0x0800028b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    PVD_IRQHandler                           0x0800028b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    RCC_IRQHandler                           0x0800028b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    RTC_Alarm_IRQHandler                     0x0800028b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    RTC_WKUP_IRQHandler                      0x0800028b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    SDIO_IRQHandler                          0x0800028b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    SPI1_IRQHandler                          0x0800028b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    SPI2_IRQHandler                          0x0800028b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    SPI3_IRQHandler                          0x0800028b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    TAMP_STAMP_IRQHandler                    0x0800028b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    TIM1_BRK_TIM9_IRQHandler                 0x0800028b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    TIM1_CC_IRQHandler                       0x0800028b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    TIM1_TRG_COM_TIM11_IRQHandler            0x0800028b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    TIM1_UP_TIM10_IRQHandler                 0x0800028b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    TIM2_IRQHandler                          0x0800028b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    TIM3_IRQHandler                          0x0800028b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    TIM4_IRQHandler                          0x0800028b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    TIM5_IRQHandler                          0x0800028b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    TIM6_DAC_IRQHandler                      0x0800028b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    TIM7_IRQHandler                          0x0800028b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    TIM8_BRK_TIM12_IRQHandler                0x0800028b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    TIM8_CC_IRQHandler                       0x0800028b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    TIM8_TRG_COM_TIM14_IRQHandler            0x0800028b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    TIM8_UP_TIM13_IRQHandler                 0x0800028b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    UART4_IRQHandler                         0x0800028b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    UART5_IRQHandler                         0x0800028b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    USART1_IRQHandler                        0x0800028b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    USART3_IRQHandler                        0x0800028b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    USART6_IRQHandler                        0x0800028b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    WWDG_IRQHandler                          0x0800028b   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    __user_initial_stackheap                 0x0800028d   Thumb Code     0  startup_stm32f40_41xxx.o(.text)
    SVC_Handler                              0x080002ad   Thumb Code   152  irq_cm4f.o(.text)
    PendSV_Handler                           0x08000345   Thumb Code    16  irq_cm4f.o(.text)
    SysTick_Handler                          0x08000355   Thumb Code    16  irq_cm4f.o(.text)
    __aeabi_memcpy                           0x08000371   Thumb Code     0  rt_memcpy_v6.o(.text)
    __rt_memcpy                              0x08000371   Thumb Code   138  rt_memcpy_v6.o(.text)
    _memcpy_lastbytes                        0x080003d7   Thumb Code     0  rt_memcpy_v6.o(.text)
    __aeabi_memclr4                          0x080003fb   Thumb Code     0  rt_memclr_w.o(.text)
    __aeabi_memclr8                          0x080003fb   Thumb Code     0  rt_memclr_w.o(.text)
    __rt_memclr_w                            0x080003fb   Thumb Code    78  rt_memclr_w.o(.text)
    _memset_w                                0x080003ff   Thumb Code     0  rt_memclr_w.o(.text)
    __use_two_region_memory                  0x08000449   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_escrow$2region                 0x0800044b   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_expand$2region                 0x0800044d   Thumb Code     2  heapauxi.o(.text)
    __aeabi_memcpy4                          0x0800044f   Thumb Code     0  rt_memcpy_w.o(.text)
    __aeabi_memcpy8                          0x0800044f   Thumb Code     0  rt_memcpy_w.o(.text)
    __rt_memcpy_w                            0x0800044f   Thumb Code   100  rt_memcpy_w.o(.text)
    _memcpy_lastbytes_aligned                0x08000497   Thumb Code     0  rt_memcpy_w.o(.text)
    __user_setup_stackheap                   0x080004b3   Thumb Code    74  sys_stackheap_outer.o(.text)
    exit                                     0x080004fd   Thumb Code    18  exit.o(.text)
    __user_libspace                          0x08000511   Thumb Code     8  libspace.o(.text)
    __user_perproc_libspace                  0x08000511   Thumb Code     0  libspace.o(.text)
    _sys_exit                                0x08000519   Thumb Code     8  sys_exit.o(.text)
    __I$use$semihosting                      0x08000525   Thumb Code     0  use_no_semi.o(.text)
    __use_no_semihosting_swi                 0x08000525   Thumb Code     2  use_no_semi.o(.text)
    __semihosting_library_function           0x08000527   Thumb Code     0  indicate_semi.o(.text)
    OS_Tick_AcknowledgeIRQ                   0x0800058d   Thumb Code    12  os_systick.o(.text.OS_Tick_AcknowledgeIRQ)
    osKernelGetState                         0x08000599   Thumb Code    52  rtx_kernel.o(.text.osKernelGetState)
    osKernelInitialize                       0x080005cd   Thumb Code    36  rtx_kernel.o(.text.osKernelInitialize)
    osMessageQueuePut                        0x080005f1   Thumb Code   128  rtx_msgqueue.o(.text.osMessageQueuePut)
    osMutexAcquire                           0x08000671   Thumb Code    36  rtx_mutex.o(.text.osMutexAcquire)
    osMutexDelete                            0x08000695   Thumb Code    36  rtx_mutex.o(.text.osMutexDelete)
    osMutexNew                               0x080006b9   Thumb Code    36  rtx_mutex.o(.text.osMutexNew)
    osMutexRelease                           0x080006dd   Thumb Code    36  rtx_mutex.o(.text.osMutexRelease)
    osRtxMemoryAlloc                         0x08000701   Thumb Code   128  rtx_memory.o(.text.osRtxMemoryAlloc)
    osRtxMemoryFree                          0x08000781   Thumb Code    82  rtx_memory.o(.text.osRtxMemoryFree)
    osRtxMemoryInit                          0x080007d3   Thumb Code    54  rtx_memory.o(.text.osRtxMemoryInit)
    osRtxMemoryPoolAlloc                     0x08000809   Thumb Code    74  rtx_mempool.o(.text.osRtxMemoryPoolAlloc)
    osRtxMemoryPoolFree                      0x08000853   Thumb Code    86  rtx_mempool.o(.text.osRtxMemoryPoolFree)
    osRtxMemoryPoolInit                      0x080008a9   Thumb Code    84  rtx_mempool.o(.text.osRtxMemoryPoolInit)
    osRtxPendSV_Handler                      0x080008fd   Thumb Code   144  rtx_system.o(.text.osRtxPendSV_Handler)
    osRtxPostProcess                         0x0800098d   Thumb Code   116  rtx_system.o(.text.osRtxPostProcess)
    osRtxThreadDelayTick                     0x08000b29   Thumb Code    56  rtx_thread.o(.text.osRtxThreadDelayTick)
    osRtxThreadDispatch                      0x08000b61   Thumb Code    96  rtx_thread.o(.text.osRtxThreadDispatch)
    osRtxThreadListGet                       0x08000bc1   Thumb Code    22  rtx_thread.o(.text.osRtxThreadListGet)
    osRtxThreadListPut                       0x08000bd7   Thumb Code    56  rtx_thread.o(.text.osRtxThreadListPut)
    osRtxThreadListRemove                    0x08000c0f   Thumb Code    20  rtx_thread.o(.text.osRtxThreadListRemove)
    osRtxThreadListSort                      0x08000c23   Thumb Code    40  rtx_thread.o(.text.osRtxThreadListSort)
    osRtxThreadReadyPut                      0x08000c4d   Thumb Code    20  rtx_thread.o(.text.osRtxThreadReadyPut)
    osRtxThreadRegPtr                        0x08000c61   Thumb Code    20  rtx_thread.o(.text.osRtxThreadRegPtr)
    osRtxThreadSwitch                        0x08000c75   Thumb Code    16  rtx_thread.o(.text.osRtxThreadSwitch)
    osRtxThreadWaitEnter                     0x08000c85   Thumb Code    56  rtx_thread.o(.text.osRtxThreadWaitEnter)
    osRtxThreadWaitExit                      0x08000cbd   Thumb Code    50  rtx_thread.o(.text.osRtxThreadWaitExit)
    osRtxTick_Handler                        0x08000cf1   Thumb Code   112  rtx_system.o(.text.osRtxTick_Handler)
    DCD_EP_ClrStall                          0x08001241   Thumb Code    56  usb_dcd.o(i.DCD_EP_ClrStall)
    DCD_EP_Open                              0x08001279   Thumb Code    60  usb_dcd.o(i.DCD_EP_Open)
    DCD_EP_PrepareRx                         0x080012b5   Thumb Code    68  usb_dcd.o(i.DCD_EP_PrepareRx)
    DCD_EP_SetAddress                        0x080012f9   Thumb Code    16  usb_dcd.o(i.DCD_EP_SetAddress)
    DCD_EP_Stall                             0x08001309   Thumb Code    56  usb_dcd.o(i.DCD_EP_Stall)
    DCD_EP_Tx                                0x08001341   Thumb Code    62  usb_dcd.o(i.DCD_EP_Tx)
    OTG_FS_IRQHandler                        0x080016f5   Thumb Code     6  usb_it.o(i.OTG_FS_IRQHandler)
    SystemInit                               0x080017b5   Thumb Code    74  system_stm32f4xx.o(i.SystemInit)
    USART2_IRQHandler                        0x08001811   Thumb Code    82  devicebluetooth.o(i.USART2_IRQHandler)
    USBD_ClrCfg                              0x08001879   Thumb Code    14  usbd_core.o(i.USBD_ClrCfg)
    USBD_CtlContinueRx                       0x08001887   Thumb Code    18  usbd_ioreq.o(i.USBD_CtlContinueRx)
    USBD_CtlContinueSendData                 0x08001899   Thumb Code    18  usbd_ioreq.o(i.USBD_CtlContinueSendData)
    USBD_CtlError                            0x080018ab   Thumb Code    28  usbd_req.o(i.USBD_CtlError)
    USBD_CtlReceiveStatus                    0x080018c7   Thumb Code    34  usbd_ioreq.o(i.USBD_CtlReceiveStatus)
    USBD_CtlSendData                         0x080018e9   Thumb Code    32  usbd_ioreq.o(i.USBD_CtlSendData)
    USBD_CtlSendStatus                       0x08001909   Thumb Code    34  usbd_ioreq.o(i.USBD_CtlSendStatus)
    USBD_OTG_ISR_Handler                     0x08001b41   Thumb Code   326  usb_dcd_int.o(i.USBD_OTG_ISR_Handler)
    USBD_ParseSetupRequest                   0x08001c8d   Thumb Code    68  usbd_req.o(i.USBD_ParseSetupRequest)
    USBD_SetCfg                              0x08001d25   Thumb Code    26  usbd_core.o(i.USBD_SetCfg)
    USBD_StdDevReq                           0x08001e79   Thumb Code   236  usbd_req.o(i.USBD_StdDevReq)
    USBD_StdEPReq                            0x08001f69   Thumb Code   208  usbd_req.o(i.USBD_StdEPReq)
    USBD_StdItfReq                           0x0800203d   Thumb Code    54  usbd_req.o(i.USBD_StdItfReq)
    USB_OTG_BSP_uDelay                       0x0800208f   Thumb Code    16  usb_bsp.o(i.USB_OTG_BSP_uDelay)
    USB_OTG_EP0Activate                      0x0800209f   Thumb Code    58  usb_core.o(i.USB_OTG_EP0Activate)
    USB_OTG_EP0StartXfer                     0x080020d9   Thumb Code   182  usb_core.o(i.USB_OTG_EP0StartXfer)
    USB_OTG_EP0_OutStart                     0x08002191   Thumb Code    32  usb_core.o(i.USB_OTG_EP0_OutStart)
    USB_OTG_EPActivate                       0x080021b5   Thumb Code    82  usb_core.o(i.USB_OTG_EPActivate)
    USB_OTG_EPClearStall                     0x08002207   Thumb Code    50  usb_core.o(i.USB_OTG_EPClearStall)
    USB_OTG_EPSetStall                       0x08002239   Thumb Code    48  usb_core.o(i.USB_OTG_EPSetStall)
    USB_OTG_EPStartXfer                      0x08002269   Thumb Code   288  usb_core.o(i.USB_OTG_EPStartXfer)
    USB_OTG_FlushTxFifo                      0x08002389   Thumb Code    60  usb_core.o(i.USB_OTG_FlushTxFifo)
    USB_OTG_GetDeviceSpeed                   0x080023c9   Thumb Code    38  usb_core.o(i.USB_OTG_GetDeviceSpeed)
    USB_OTG_IsDeviceMode                     0x080023ef   Thumb Code    18  usb_core.o(i.USB_OTG_IsDeviceMode)
    USB_OTG_ReadCoreItr                      0x08002401   Thumb Code    10  usb_core.o(i.USB_OTG_ReadCoreItr)
    USB_OTG_ReadDevAllInEPItr                0x0800240b   Thumb Code    12  usb_core.o(i.USB_OTG_ReadDevAllInEPItr)
    USB_OTG_ReadDevAllOutEp_itr              0x08002417   Thumb Code    12  usb_core.o(i.USB_OTG_ReadDevAllOutEp_itr)
    USB_OTG_ReadDevOutEP_itr                 0x08002423   Thumb Code    16  usb_core.o(i.USB_OTG_ReadDevOutEP_itr)
    USB_OTG_ReadPacket                       0x08002433   Thumb Code    32  usb_core.o(i.USB_OTG_ReadPacket)
    USB_OTG_WritePacket                      0x08002453   Thumb Code    40  usb_core.o(i.USB_OTG_WritePacket)
    _mutex_acquire                           0x0800247b   Thumb Code    28  rtx_lib.o(i._mutex_acquire)
    _mutex_free                              0x08002497   Thumb Code     6  rtx_lib.o(i._mutex_free)
    _mutex_initialize                        0x0800249d   Thumb Code    32  rtx_lib.o(i._mutex_initialize)
    _mutex_release                           0x080024bd   Thumb Code    24  rtx_lib.o(i._mutex_release)
    _platform_post_stackheap_init            0x080024d5   Thumb Code     4  rtx_lib.o(i._platform_post_stackheap_init)
    main                                     0x080024e5   Thumb Code   116  main.o(i.main)
    osRtxErrorNotify                         0x08002565   Thumb Code     2  rtx_config.o(i.osRtxErrorNotify)
    osRtxThreadStackCheck                    0x08002567   Thumb Code     2  rtx_lib.o(i.osRtxThreadStackCheck)
    v74HC165Init                             0x08002585   Thumb Code    72  device74hc165.o(i.v74HC165Init)
    vBluetoothInit                           0x08002699   Thumb Code   116  devicebluetooth.o(i.vBluetoothInit)
    vCh451sInit                              0x08002729   Thumb Code   100  devicech451s.o(i.vCh451sInit)
    vCh451sWriteData                         0x080027a1   Thumb Code    74  devicech451s.o(i.vCh451sWriteData)
    vMotoDisableAll                          0x080027f1   Thumb Code    20  devicemoto.o(i.vMotoDisableAll)
    vMotoInit                                0x08002811   Thumb Code   190  devicemoto.o(i.vMotoInit)
    vMotoSelect                              0x080028e1   Thumb Code    52  devicemoto.o(i.vMotoSelect)
    vMotoSetDir                              0x08002921   Thumb Code    24  devicemoto.o(i.vMotoSetDir)
    vNrf2401Init                             0x0800293d   Thumb Code    84  devicenrf2401.o(i.vNrf2401Init)
    vNrfEnterTxMode                          0x080029a1   Thumb Code   104  devicenrf2401.o(i.vNrfEnterTxMode)
    vSysTimerDelay                           0x08002a11   Thumb Code    44  systimer.o(i.vSysTimerDelay)
    vSysTimerInit                            0x08002a3d   Thumb Code    20  systimer.o(i.vSysTimerInit)
    vTimer1Init                              0x08002a51   Thumb Code   116  periphtimer.o(i.vTimer1Init)
    vTimer2Init                              0x08002ad1   Thumb Code   114  periphtimer.o(i.vTimer2Init)
    vTimer3Init                              0x08002b4d   Thumb Code   150  periphtimer.o(i.vTimer3Init)
    vTimer4Init                              0x08002bf1   Thumb Code   140  periphtimer.o(i.vTimer4Init)
    vTimer5Init                              0x08002c89   Thumb Code   144  periphtimer.o(i.vTimer5Init)
    vUart3Init                               0x08002d25   Thumb Code   140  main.o(i.vUart3Init)
    xNrfCheck                                0x08002dbd   Thumb Code    64  devicenrf2401.o(i.xNrfCheck)
    xNrfReadRegisterOfBuffer                 0x08002e05   Thumb Code    56  devicenrf2401.o(i.xNrfReadRegisterOfBuffer)
    xNrfWriteRegister                        0x08002e41   Thumb Code    34  devicenrf2401.o(i.xNrfWriteRegister)
    xNrfWriteRegisterOfBuffer                0x08002e69   Thumb Code    56  devicenrf2401.o(i.xNrfWriteRegisterOfBuffer)
    _fp_init                                 0x08002ef1   Thumb Code    10  fpinit.o(x$fpl$fpinit)
    __fplib_config_fpu_vfp                   0x08002ef9   Thumb Code     0  fpinit.o(x$fpl$fpinit)
    __fplib_config_pureend_doubles           0x08002ef9   Thumb Code     0  fpinit.o(x$fpl$fpinit)
    osRtxUserSVC                             0x08002f64   Data           4  rtx_lib.o(.constdata)
    osRtxConfig                              0x08002f88   Data         104  rtx_lib.o(.rodata)
    Region$$Table$$Base                      0x08002ffc   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x0800301c   Number         0  anon$$obj.o(Region$$Table)
    .bss.os.msgqueue.cb$$Base                0x2000a040   Number         0  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.msgqueue.cb$$Limit               0x2000a074   Number         0  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.thread.cb$$Base                  0x2000a0c4   Number         0  rtx_lib.o(.bss.os.thread.cb)
    .bss.os.thread.cb$$Limit                 0x2000a3f4   Number         0  rtx_lib.o(.bss.os.thread.cb)
    .bss.os.timer.cb$$Base                   0x2000a7f8   Number         0  rtx_lib.o(.bss.os.timer.cb)
    .bss.os.timer.cb$$Limit                  0x2000a898   Number         0  rtx_lib.o(.bss.os.timer.cb)
    BluetoothTaskId                          0x2000a8bc   Data           4  bluetoothreceivertask.o(.data)
    BluetoothReceiverMQId                    0x2000a8c0   Data           4  bluetoothreceivertask.o(.data)
    send_flag_ep1                            0x2000a8e8   Data           1  usb_dcd_int.o(.data)
    USBD_DCD_INT_cb                          0x2000a8ec   Data          44  usbd_core.o(.data)
    USBD_DCD_INT_fops                        0x2000a918   Data           4  usbd_core.o(.data)
    SET_TEST_MODE                            0x2000a91c   Data           4  usbd_core.o(.data)
    USBD_ep_status                           0x2000a924   Data           4  usbd_req.o(.data)
    USBD_default_cfg                         0x2000a928   Data           4  usbd_req.o(.data)
    USBD_cfg_status                          0x2000a92c   Data           4  usbd_req.o(.data)
    osRtxInfo                                0x2000a934   Data         164  rtx_kernel.o(.data.os)
    USB_OTG_dev                              0x2000ce20   Data        1524  usbd_usr.o(.bss)
    __libspace_start                         0x2000d414   Data          96  libspace.o(.bss)
    __temporary_stack_top$libspace           0x2000d474   Data           0  libspace.o(.bss)



==============================================================================

Memory Map of the image

  Image Entry point : 0x08000189

  Load Region LR_IROM1 (Base: 0x08000000, Size: 0x0000da24, Max: 0x00080000, ABSOLUTE, COMPRESSED[0x000031c4])

    Execution Region ER_IROM1 (Base: 0x08000000, Size: 0x0000301c, Max: 0x00080000, ABSOLUTE)

    Base Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x08000000   0x00000188   Data   RO           66    RESET               startup_stm32f40_41xxx.o
    0x08000188   0x00000008   Code   RO         2603  * !!!main             c_w.l(__main.o)
    0x08000190   0x00000034   Code   RO         2762    !!!scatter          c_w.l(__scatter.o)
    0x080001c4   0x0000005a   Code   RO         2760    !!dczerorl2         c_w.l(__dczerorl2.o)
    0x0800021e   0x00000002   PAD
    0x08000220   0x0000001c   Code   RO         2764    !!handler_zi        c_w.l(__scatter_zi.o)
    0x0800023c   0x00000002   Code   RO         2630    .ARM.Collect$$libinit$$00000000  c_w.l(libinit.o)
    0x0800023e   0x00000004   Code   RO         2636    .ARM.Collect$$libinit$$00000001  c_w.l(libinit2.o)
    0x08000242   0x00000000   Code   RO         2639    .ARM.Collect$$libinit$$00000004  c_w.l(libinit2.o)
    0x08000242   0x00000000   Code   RO         2642    .ARM.Collect$$libinit$$0000000A  c_w.l(libinit2.o)
    0x08000242   0x00000000   Code   RO         2644    .ARM.Collect$$libinit$$0000000C  c_w.l(libinit2.o)
    0x08000242   0x00000000   Code   RO         2646    .ARM.Collect$$libinit$$0000000E  c_w.l(libinit2.o)
    0x08000242   0x00000000   Code   RO         2649    .ARM.Collect$$libinit$$00000011  c_w.l(libinit2.o)
    0x08000242   0x00000000   Code   RO         2651    .ARM.Collect$$libinit$$00000013  c_w.l(libinit2.o)
    0x08000242   0x00000000   Code   RO         2653    .ARM.Collect$$libinit$$00000015  c_w.l(libinit2.o)
    0x08000242   0x00000000   Code   RO         2655    .ARM.Collect$$libinit$$00000017  c_w.l(libinit2.o)
    0x08000242   0x00000000   Code   RO         2657    .ARM.Collect$$libinit$$00000019  c_w.l(libinit2.o)
    0x08000242   0x00000000   Code   RO         2659    .ARM.Collect$$libinit$$0000001B  c_w.l(libinit2.o)
    0x08000242   0x00000000   Code   RO         2661    .ARM.Collect$$libinit$$0000001D  c_w.l(libinit2.o)
    0x08000242   0x00000000   Code   RO         2663    .ARM.Collect$$libinit$$0000001F  c_w.l(libinit2.o)
    0x08000242   0x00000000   Code   RO         2665    .ARM.Collect$$libinit$$00000021  c_w.l(libinit2.o)
    0x08000242   0x00000000   Code   RO         2667    .ARM.Collect$$libinit$$00000023  c_w.l(libinit2.o)
    0x08000242   0x00000000   Code   RO         2669    .ARM.Collect$$libinit$$00000025  c_w.l(libinit2.o)
    0x08000242   0x00000000   Code   RO         2673    .ARM.Collect$$libinit$$0000002C  c_w.l(libinit2.o)
    0x08000242   0x00000000   Code   RO         2675    .ARM.Collect$$libinit$$0000002E  c_w.l(libinit2.o)
    0x08000242   0x00000000   Code   RO         2677    .ARM.Collect$$libinit$$00000030  c_w.l(libinit2.o)
    0x08000242   0x00000000   Code   RO         2679    .ARM.Collect$$libinit$$00000032  c_w.l(libinit2.o)
    0x08000242   0x00000002   Code   RO         2680    .ARM.Collect$$libinit$$00000033  c_w.l(libinit2.o)
    0x08000244   0x00000002   Code   RO         2700    .ARM.Collect$$libshutdown$$00000000  c_w.l(libshutdown.o)
    0x08000246   0x00000000   Code   RO         2713    .ARM.Collect$$libshutdown$$00000002  c_w.l(libshutdown2.o)
    0x08000246   0x00000000   Code   RO         2715    .ARM.Collect$$libshutdown$$00000004  c_w.l(libshutdown2.o)
    0x08000246   0x00000000   Code   RO         2718    .ARM.Collect$$libshutdown$$00000007  c_w.l(libshutdown2.o)
    0x08000246   0x00000000   Code   RO         2721    .ARM.Collect$$libshutdown$$0000000A  c_w.l(libshutdown2.o)
    0x08000246   0x00000000   Code   RO         2723    .ARM.Collect$$libshutdown$$0000000C  c_w.l(libshutdown2.o)
    0x08000246   0x00000000   Code   RO         2726    .ARM.Collect$$libshutdown$$0000000F  c_w.l(libshutdown2.o)
    0x08000246   0x00000002   Code   RO         2727    .ARM.Collect$$libshutdown$$00000010  c_w.l(libshutdown2.o)
    0x08000248   0x00000000   Code   RO         2605    .ARM.Collect$$rtentry$$00000000  c_w.l(__rtentry.o)
    0x08000248   0x00000000   Code   RO         2609    .ARM.Collect$$rtentry$$00000002  c_w.l(__rtentry2.o)
    0x08000248   0x00000006   Code   RO         2621    .ARM.Collect$$rtentry$$00000004  c_w.l(__rtentry4.o)
    0x0800024e   0x00000008   Code   RO         2610    .ARM.Collect$$rtentry$$00000008  c_w.l(__rtentry2.o)
    0x08000256   0x00000004   Code   RO         2612    .ARM.Collect$$rtentry$$0000000A  c_w.l(__rtentry2.o)
    0x0800025a   0x00000000   Code   RO         2614    .ARM.Collect$$rtentry$$0000000C  c_w.l(__rtentry2.o)
    0x0800025a   0x00000008   Code   RO         2615    .ARM.Collect$$rtentry$$0000000D  c_w.l(__rtentry2.o)
    0x08000262   0x00000002   Code   RO         2634    .ARM.Collect$$rtexit$$00000000  c_w.l(rtexit.o)
    0x08000264   0x00000000   Code   RO         2682    .ARM.Collect$$rtexit$$00000002  c_w.l(rtexit2.o)
    0x08000264   0x00000004   Code   RO         2683    .ARM.Collect$$rtexit$$00000003  c_w.l(rtexit2.o)
    0x08000268   0x00000006   Code   RO         2684    .ARM.Collect$$rtexit$$00000004  c_w.l(rtexit2.o)
    0x0800026e   0x00000002   PAD
    0x08000270   0x0000003c   Code   RO           67    .text               startup_stm32f40_41xxx.o
    0x080002ac   0x000000c4   Code   RO         2470    .text               RTX_CM4F.lib(irq_cm4f.o)
    0x08000370   0x0000008a   Code   RO         2595    .text               c_w.l(rt_memcpy_v6.o)
    0x080003fa   0x0000004e   Code   RO         2599    .text               c_w.l(rt_memclr_w.o)
    0x08000448   0x00000006   Code   RO         2601    .text               c_w.l(heapauxi.o)
    0x0800044e   0x00000064   Code   RO         2606    .text               c_w.l(rt_memcpy_w.o)
    0x080004b2   0x0000004a   Code   RO         2623    .text               c_w.l(sys_stackheap_outer.o)
    0x080004fc   0x00000012   Code   RO         2625    .text               c_w.l(exit.o)
    0x0800050e   0x00000002   PAD
    0x08000510   0x00000008   Code   RO         2631    .text               c_w.l(libspace.o)
    0x08000518   0x0000000c   Code   RO         2692    .text               c_w.l(sys_exit.o)
    0x08000524   0x00000002   Code   RO         2703    .text               c_w.l(use_no_semi.o)
    0x08000526   0x00000000   Code   RO         2705    .text               c_w.l(indicate_semi.o)
    0x08000526   0x00000064   Code   RO         2445    .text.MessageQueuePut  RTX_CM4F.lib(rtx_msgqueue.o)
    0x0800058a   0x00000002   PAD
    0x0800058c   0x0000000c   Code   RO         2570    .text.OS_Tick_AcknowledgeIRQ  RTX_CM4F.lib(os_systick.o)
    0x08000598   0x00000034   Code   RO         2118    .text.osKernelGetState  RTX_CM4F.lib(rtx_kernel.o)
    0x080005cc   0x00000024   Code   RO         2112    .text.osKernelInitialize  RTX_CM4F.lib(rtx_kernel.o)
    0x080005f0   0x00000080   Code   RO         2415    .text.osMessageQueuePut  RTX_CM4F.lib(rtx_msgqueue.o)
    0x08000670   0x00000024   Code   RO         2380    .text.osMutexAcquire  RTX_CM4F.lib(rtx_mutex.o)
    0x08000694   0x00000024   Code   RO         2386    .text.osMutexDelete  RTX_CM4F.lib(rtx_mutex.o)
    0x080006b8   0x00000024   Code   RO         2376    .text.osMutexNew    RTX_CM4F.lib(rtx_mutex.o)
    0x080006dc   0x00000024   Code   RO         2382    .text.osMutexRelease  RTX_CM4F.lib(rtx_mutex.o)
    0x08000700   0x00000080   Code   RO         2477    .text.osRtxMemoryAlloc  RTX_CM4F.lib(rtx_memory.o)
    0x08000780   0x00000052   Code   RO         2479    .text.osRtxMemoryFree  RTX_CM4F.lib(rtx_memory.o)
    0x080007d2   0x00000036   Code   RO         2475    .text.osRtxMemoryInit  RTX_CM4F.lib(rtx_memory.o)
    0x08000808   0x0000004a   Code   RO         2494    .text.osRtxMemoryPoolAlloc  RTX_CM4F.lib(rtx_mempool.o)
    0x08000852   0x00000056   Code   RO         2496    .text.osRtxMemoryPoolFree  RTX_CM4F.lib(rtx_mempool.o)
    0x080008a8   0x00000054   Code   RO         2492    .text.osRtxMemoryPoolInit  RTX_CM4F.lib(rtx_mempool.o)
    0x080008fc   0x00000090   Code   RO         2549    .text.osRtxPendSV_Handler  RTX_CM4F.lib(rtx_system.o)
    0x0800098c   0x00000074   Code   RO         2551    .text.osRtxPostProcess  RTX_CM4F.lib(rtx_system.o)
    0x08000a00   0x0000003c   Code   RO         2197    .text.osRtxThreadBlock  RTX_CM4F.lib(rtx_thread.o)
    0x08000a3c   0x00000094   Code   RO         2205    .text.osRtxThreadDelayInsert  RTX_CM4F.lib(rtx_thread.o)
    0x08000ad0   0x00000058   Code   RO         2201    .text.osRtxThreadDelayRemove  RTX_CM4F.lib(rtx_thread.o)
    0x08000b28   0x00000038   Code   RO         2187    .text.osRtxThreadDelayTick  RTX_CM4F.lib(rtx_thread.o)
    0x08000b60   0x00000060   Code   RO         2195    .text.osRtxThreadDispatch  RTX_CM4F.lib(rtx_thread.o)
    0x08000bc0   0x00000016   Code   RO         2179    .text.osRtxThreadListGet  RTX_CM4F.lib(rtx_thread.o)
    0x08000bd6   0x00000038   Code   RO         2177    .text.osRtxThreadListPut  RTX_CM4F.lib(rtx_thread.o)
    0x08000c0e   0x00000014   Code   RO         2183    .text.osRtxThreadListRemove  RTX_CM4F.lib(rtx_thread.o)
    0x08000c22   0x00000028   Code   RO         2181    .text.osRtxThreadListSort  RTX_CM4F.lib(rtx_thread.o)
    0x08000c4a   0x00000002   PAD
    0x08000c4c   0x00000014   Code   RO         2185    .text.osRtxThreadReadyPut  RTX_CM4F.lib(rtx_thread.o)
    0x08000c60   0x00000014   Code   RO         2189    .text.osRtxThreadRegPtr  RTX_CM4F.lib(rtx_thread.o)
    0x08000c74   0x00000010   Code   RO         2191    .text.osRtxThreadSwitch  RTX_CM4F.lib(rtx_thread.o)
    0x08000c84   0x00000038   Code   RO         2203    .text.osRtxThreadWaitEnter  RTX_CM4F.lib(rtx_thread.o)
    0x08000cbc   0x00000032   Code   RO         2199    .text.osRtxThreadWaitExit  RTX_CM4F.lib(rtx_thread.o)
    0x08000cee   0x00000002   PAD
    0x08000cf0   0x00000070   Code   RO         2547    .text.osRtxTick_Handler  RTX_CM4F.lib(rtx_system.o)
    0x08000d60   0x0000000c   Code   RO         2120    .text.svcRtxKernelGetState  RTX_CM4F.lib(rtx_kernel.o)
    0x08000d6c   0x00000178   Code   RO         2150    .text.svcRtxKernelInitialize  RTX_CM4F.lib(rtx_kernel.o)
    0x08000ee4   0x000000c8   Code   RO         2449    .text.svcRtxMessageQueuePut  RTX_CM4F.lib(rtx_msgqueue.o)
    0x08000fac   0x00000098   Code   RO         2392    .text.svcRtxMutexAcquire  RTX_CM4F.lib(rtx_mutex.o)
    0x08001044   0x000000d4   Code   RO         2398    .text.svcRtxMutexDelete  RTX_CM4F.lib(rtx_mutex.o)
    0x08001118   0x0000006c   Code   RO         2388    .text.svcRtxMutexNew  RTX_CM4F.lib(rtx_mutex.o)
    0x08001184   0x000000bc   Code   RO         2394    .text.svcRtxMutexRelease  RTX_CM4F.lib(rtx_mutex.o)
    0x08001240   0x00000038   Code   RO         1041    i.DCD_EP_ClrStall   usb_dcd.o
    0x08001278   0x0000003c   Code   RO         1043    i.DCD_EP_Open       usb_dcd.o
    0x080012b4   0x00000044   Code   RO         1044    i.DCD_EP_PrepareRx  usb_dcd.o
    0x080012f8   0x00000010   Code   RO         1045    i.DCD_EP_SetAddress  usb_dcd.o
    0x08001308   0x00000038   Code   RO         1046    i.DCD_EP_Stall      usb_dcd.o
    0x08001340   0x0000003e   Code   RO         1047    i.DCD_EP_Tx         usb_dcd.o
    0x0800137e   0x00000002   PAD
    0x08001380   0x000000cc   Code   RO         1141    i.DCD_HandleInEP_ISR  usb_dcd_int.o
    0x0800144c   0x000000ac   Code   RO         1142    i.DCD_HandleOutEP_ISR  usb_dcd_int.o
    0x080014f8   0x0000007c   Code   RO         1143    i.DCD_HandleRxStatusQueueLevel_ISR  usb_dcd_int.o
    0x08001574   0x00000070   Code   RO         1144    i.DCD_HandleUSBSuspend_ISR  usb_dcd_int.o
    0x080015e4   0x00000084   Code   RO         1145    i.DCD_HandleUsbReset_ISR  usb_dcd_int.o
    0x08001668   0x0000008c   Code   RO         1146    i.DCD_WriteEmptyTxFifo  usb_dcd_int.o
    0x080016f4   0x0000000c   Code   RO         1942    i.OTG_FS_IRQHandler  usb_it.o
    0x08001700   0x000000b4   Code   RO            4    i.SetSysClock       system_stm32f4xx.o
    0x080017b4   0x0000005c   Code   RO            6    i.SystemInit        system_stm32f4xx.o
    0x08001810   0x00000068   Code   RO          548    i.USART2_IRQHandler  devicebluetooth.o
    0x08001878   0x0000000e   Code   RO         1430    i.USBD_ClrCfg       usbd_core.o
    0x08001886   0x00000012   Code   RO         1534    i.USBD_CtlContinueRx  usbd_ioreq.o
    0x08001898   0x00000012   Code   RO         1535    i.USBD_CtlContinueSendData  usbd_ioreq.o
    0x080018aa   0x0000001c   Code   RO         1594    i.USBD_CtlError     usbd_req.o
    0x080018c6   0x00000022   Code   RO         1537    i.USBD_CtlReceiveStatus  usbd_ioreq.o
    0x080018e8   0x00000020   Code   RO         1538    i.USBD_CtlSendData  usbd_ioreq.o
    0x08001908   0x00000022   Code   RO         1539    i.USBD_CtlSendStatus  usbd_ioreq.o
    0x0800192a   0x00000002   PAD
    0x0800192c   0x000000b0   Code   RO         1431    i.USBD_DataInStage  usbd_core.o
    0x080019dc   0x00000078   Code   RO         1432    i.USBD_DataOutStage  usbd_core.o
    0x08001a54   0x000000ce   Code   RO         1595    i.USBD_GetDescriptor  usbd_req.o
    0x08001b22   0x0000000e   Code   RO         1435    i.USBD_IsoINIncomplete  usbd_core.o
    0x08001b30   0x0000000e   Code   RO         1436    i.USBD_IsoOUTIncomplete  usbd_core.o
    0x08001b3e   0x00000002   PAD
    0x08001b40   0x0000014c   Code   RO         1147    i.USBD_OTG_ISR_Handler  usb_dcd_int.o
    0x08001c8c   0x00000044   Code   RO         1597    i.USBD_ParseSetupRequest  usbd_req.o
    0x08001cd0   0x0000002e   Code   RO         1437    i.USBD_Reset        usbd_core.o
    0x08001cfe   0x00000016   Code   RO         1438    i.USBD_Resume       usbd_core.o
    0x08001d14   0x00000010   Code   RO         1439    i.USBD_SOF          usbd_core.o
    0x08001d24   0x0000001a   Code   RO         1440    i.USBD_SetCfg       usbd_core.o
    0x08001d3e   0x00000002   PAD
    0x08001d40   0x00000074   Code   RO         1598    i.USBD_SetConfig    usbd_req.o
    0x08001db4   0x0000007c   Code   RO         1599    i.USBD_SetFeature   usbd_req.o
    0x08001e30   0x00000048   Code   RO         1441    i.USBD_SetupStage   usbd_core.o
    0x08001e78   0x000000f0   Code   RO         1600    i.USBD_StdDevReq    usbd_req.o
    0x08001f68   0x000000d4   Code   RO         1601    i.USBD_StdEPReq     usbd_req.o
    0x0800203c   0x00000036   Code   RO         1602    i.USBD_StdItfReq    usbd_req.o
    0x08002072   0x0000001c   Code   RO         1442    i.USBD_Suspend      usbd_core.o
    0x0800208e   0x00000010   Code   RO         1903    i.USB_OTG_BSP_uDelay  usb_bsp.o
    0x0800209e   0x0000003a   Code   RO         1209    i.USB_OTG_EP0Activate  usb_core.o
    0x080020d8   0x000000b6   Code   RO         1210    i.USB_OTG_EP0StartXfer  usb_core.o
    0x0800218e   0x00000002   PAD
    0x08002190   0x00000024   Code   RO         1211    i.USB_OTG_EP0_OutStart  usb_core.o
    0x080021b4   0x00000052   Code   RO         1212    i.USB_OTG_EPActivate  usb_core.o
    0x08002206   0x00000032   Code   RO         1213    i.USB_OTG_EPClearStall  usb_core.o
    0x08002238   0x00000030   Code   RO         1215    i.USB_OTG_EPSetStall  usb_core.o
    0x08002268   0x00000120   Code   RO         1216    i.USB_OTG_EPStartXfer  usb_core.o
    0x08002388   0x00000040   Code   RO         1220    i.USB_OTG_FlushTxFifo  usb_core.o
    0x080023c8   0x00000026   Code   RO         1221    i.USB_OTG_GetDeviceSpeed  usb_core.o
    0x080023ee   0x00000012   Code   RO         1225    i.USB_OTG_IsDeviceMode  usb_core.o
    0x08002400   0x0000000a   Code   RO         1227    i.USB_OTG_ReadCoreItr  usb_core.o
    0x0800240a   0x0000000c   Code   RO         1228    i.USB_OTG_ReadDevAllInEPItr  usb_core.o
    0x08002416   0x0000000c   Code   RO         1229    i.USB_OTG_ReadDevAllOutEp_itr  usb_core.o
    0x08002422   0x00000010   Code   RO         1230    i.USB_OTG_ReadDevOutEP_itr  usb_core.o
    0x08002432   0x00000020   Code   RO         1232    i.USB_OTG_ReadPacket  usb_core.o
    0x08002452   0x00000028   Code   RO         1238    i.USB_OTG_WritePacket  usb_core.o
    0x0800247a   0x0000001c   Code   RO         1977    i._mutex_acquire    rtx_lib.o
    0x08002496   0x00000006   Code   RO         1978    i._mutex_free       rtx_lib.o
    0x0800249c   0x00000020   Code   RO         1979    i._mutex_initialize  rtx_lib.o
    0x080024bc   0x00000018   Code   RO         1980    i._mutex_release    rtx_lib.o
    0x080024d4   0x00000004   Code   RO         1981    i._platform_post_stackheap_init  rtx_lib.o
    0x080024d8   0x0000000a   Code   RO          507    i.delay             devicech451s.o
    0x080024e2   0x00000002   PAD
    0x080024e4   0x00000080   Code   RO           74    i.main              main.o
    0x08002564   0x00000002   Code   RO         2080    i.osRtxErrorNotify  rtx_config.o
    0x08002566   0x00000002   Code   RO         1982    i.osRtxThreadStackCheck  rtx_lib.o
    0x08002568   0x0000001c   Code   RO         1983    i.os_kernel_is_active  rtx_lib.o
    0x08002584   0x00000050   Code   RO          738    i.v74HC165Init      device74hc165.o
    0x080025d4   0x00000058   Code   RO          549    i.vBluetoothBufferOver  devicebluetooth.o
    0x0800262c   0x0000006c   Code   RO          550    i.vBluetoothGpioInit  devicebluetooth.o
    0x08002698   0x00000090   Code   RO          551    i.vBluetoothInit    devicebluetooth.o
    0x08002728   0x00000078   Code   RO          509    i.vCh451sInit       devicech451s.o
    0x080027a0   0x00000050   Code   RO          510    i.vCh451sWriteData  devicech451s.o
    0x080027f0   0x00000020   Code   RO          624    i.vMotoDisableAll   devicemoto.o
    0x08002810   0x000000d0   Code   RO          625    i.vMotoInit         devicemoto.o
    0x080028e0   0x00000040   Code   RO          626    i.vMotoSelect       devicemoto.o
    0x08002920   0x0000001c   Code   RO          627    i.vMotoSetDir       devicemoto.o
    0x0800293c   0x00000064   Code   RO          666    i.vNrf2401Init      devicenrf2401.o
    0x080029a0   0x00000070   Code   RO          667    i.vNrfEnterTxMode   devicenrf2401.o
    0x08002a10   0x0000002c   Code   RO          213    i.vSysTimerDelay    systimer.o
    0x08002a3c   0x00000014   Code   RO          214    i.vSysTimerInit     systimer.o
    0x08002a50   0x00000080   Code   RO          357    i.vTimer1Init       periphtimer.o
    0x08002ad0   0x0000007c   Code   RO          358    i.vTimer2Init       periphtimer.o
    0x08002b4c   0x000000a4   Code   RO          359    i.vTimer3Init       periphtimer.o
    0x08002bf0   0x00000098   Code   RO          360    i.vTimer4Init       periphtimer.o
    0x08002c88   0x0000009c   Code   RO          361    i.vTimer5Init       periphtimer.o
    0x08002d24   0x00000098   Code   RO           75    i.vUart3Init        main.o
    0x08002dbc   0x00000048   Code   RO          668    i.xNrfCheck         devicenrf2401.o
    0x08002e04   0x0000003c   Code   RO          670    i.xNrfReadRegisterOfBuffer  devicenrf2401.o
    0x08002e40   0x00000028   Code   RO          672    i.xNrfWriteRegister  devicenrf2401.o
    0x08002e68   0x0000003c   Code   RO          673    i.xNrfWriteRegisterOfBuffer  devicenrf2401.o
    0x08002ea4   0x0000004c   Code   RO          674    i.xSpiTranslateByte  devicenrf2401.o
    0x08002ef0   0x0000000a   Code   RO         2690    x$fpl$fpinit        fz_wm.l(fpinit.o)
    0x08002efa   0x0000000a   Data   RO          675    .constdata          devicenrf2401.o
    0x08002f04   0x00000024   Data   RO         1995    .constdata          rtx_lib.o
    0x08002f28   0x00000024   Data   RO         1996    .constdata          rtx_lib.o
    0x08002f4c   0x00000018   Data   RO         1997    .constdata          rtx_lib.o
    0x08002f64   0x00000004   Data   RO         1998    .constdata          rtx_lib.o
    0x08002f68   0x00000010   Data   RO          557    .conststring        devicebluetooth.o
    0x08002f78   0x0000000e   Data   RO          807    .conststring        bluetoothreceivertask.o
    0x08002f86   0x00000002   PAD
    0x08002f88   0x00000068   Data   RO         2003    .rodata             rtx_lib.o
    0x08002ff0   0x0000000b   Data   RO         2164    .rodata.str1.4      RTX_CM4F.lib(rtx_kernel.o)
    0x08002ffb   0x00000001   PAD
    0x08002ffc   0x00000020   Data   RO         2758    Region$$Table       anon$$obj.o


    Execution Region RW_IRAM1 (Base: 0x20000000, Size: 0x0000d878, Max: 0x00020000, ABSOLUTE, COMPRESSED[0x000001a8])

    Base Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x0000a000   Data   RW         1984    .bss.os             rtx_lib.o
    0x2000a000   0x00000040   Data   RW         1985    .bss.os             rtx_lib.o
    0x2000a040   0x00000034   Data   RW         1987    .bss.os.msgqueue.cb  rtx_lib.o
    0x2000a074   0x00000050   Data   RW         1988    .bss.os.msgqueue.mem  rtx_lib.o
    0x2000a0c4   0x000002a8   Data   RW         1989    .bss.os.thread.cb   rtx_lib.o
    0x2000a36c   0x00000044   Data   RW         1990    .bss.os.thread.cb   rtx_lib.o
    0x2000a3b0   0x00000044   Data   RW         1991    .bss.os.thread.cb   rtx_lib.o
    0x2000a3f4   0x00000004   PAD
    0x2000a3f8   0x00000200   Data   RW         1992    .bss.os.thread.stack  rtx_lib.o
    0x2000a5f8   0x00000200   Data   RW         1993    .bss.os.thread.stack  rtx_lib.o
    0x2000a7f8   0x000000a0   Data   RW         1994    .bss.os.timer.cb    rtx_lib.o
    0x2000a898   0x00000024   Data   RW          558    .data               devicebluetooth.o
    0x2000a8bc   0x0000002c   Data   RW          808    .data               bluetoothreceivertask.o
    0x2000a8e8   0x00000001   Data   RW         1148    .data               usb_dcd_int.o
    0x2000a8e9   0x00000003   PAD
    0x2000a8ec   0x0000002c   Data   RW         1443    .data               usbd_core.o
    0x2000a918   0x00000004   Data   RW         1444    .data               usbd_core.o
    0x2000a91c   0x00000004   Data   RW         1445    .data               usbd_core.o
    0x2000a920   0x00000010   Data   RW         1604    .data               usbd_req.o
    0x2000a930   0x00000001   Data   RW         2000    .data               rtx_lib.o
    0x2000a931   0x00000003   PAD
    0x2000a934   0x000000a4   Data   RW         2165    .data.os            RTX_CM4F.lib(rtx_kernel.o)
    0x2000a9d8   0x00000018   Data   RW         2001    .data.os.thread.mpi  rtx_lib.o
    0x2000a9f0   0x00000018   Data   RW         2002    .data.os.timer.mpi  rtx_lib.o
    0x2000aa08   0x00000414   Zero   RW          556    .bss                devicebluetooth.o
    0x2000ae1c   0x00000004   PAD
    0x2000ae20   0x00002000   Zero   RW          804    .bss                bluetoothreceivertask.o
    0x2000ce20   0x000005f4   Zero   RW         1752    .bss                usbd_usr.o
    0x2000d414   0x00000060   Zero   RW         2632    .bss                c_w.l(libspace.o)
    0x2000d474   0x00000004   PAD
    0x2000d478   0x00000000   Zero   RW           65    HEAP                startup_stm32f40_41xxx.o
    0x2000d478   0x00000400   Zero   RW           64    STACK               startup_stm32f40_41xxx.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

         0          0         14         44       8192       1657   bluetoothreceivertask.o
        80          8          0          0          0        487   device74hc165.o
       444         70         16         36       1044      29334   devicebluetooth.o
       210         26          0          0          0       2185   devicech451s.o
       332         52          0          0          0       2086   devicemoto.o
       520         50         10          0          0       6133   devicenrf2401.o
       280         24          0          0          0      25020   main.o
       724         60          0          0          0       2606   periphtimer.o
         2          0          0          0          0        503   rtx_config.o
       124          4        204      43205          0      16239   rtx_lib.o
        60         22        392          0       1024        824   startup_stm32f40_41xxx.o
       272         36          0          0          0     242673   system_stm32f4xx.o
        64          0          0          0          0       1145   systimer.o
        16          0          0          0          0        933   usb_bsp.o
       986          8          0          0          0      12026   usb_core.o
       318          0          0          0          0       4410   usb_dcd.o
      1216         46          0          1          0       7472   usb_dcd_int.o
        12          6          0          0          0        452   usb_it.o
       548          4          0         52          0       8206   usbd_core.o
       136          0          0          0          0       3484   usbd_ioreq.o
      1048         44          0         16          0       7396   usbd_req.o
         0          0          0          0       1524        238   usbd_usr.o

    ----------------------------------------------------------------------
      7404        460        670      43364      11788     375509   Object Totals
         0          0         32          0          0          0   (incl. Generated)
        12          0          2         10          4          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

       196         12          0          0          0        540   irq_cm4f.o
        12          4          0          0          0       3578   os_systick.o
       476         28         11        164          0      18714   rtx_kernel.o
       264          0          0          0          0       2707   rtx_memory.o
       244          0          0          0          0      15835   rtx_mempool.o
       428          8          0          0          0      18606   rtx_msgqueue.o
       804         32          0          0          0      10258   rtx_mutex.o
       372         24          0          0          0       5544   rtx_system.o
       748         32          0          0          0      33996   rtx_thread.o
        90          0          0          0          0          0   __dczerorl2.o
         8          0          0          0          0         68   __main.o
         0          0          0          0          0          0   __rtentry.o
        20          0          0          0          0          0   __rtentry2.o
         6          0          0          0          0          0   __rtentry4.o
        52          8          0          0          0          0   __scatter.o
        28          0          0          0          0          0   __scatter_zi.o
        18          0          0          0          0         80   exit.o
         6          0          0          0          0        152   heapauxi.o
         0          0          0          0          0          0   indicate_semi.o
         2          0          0          0          0          0   libinit.o
         6          0          0          0          0          0   libinit2.o
         2          0          0          0          0          0   libshutdown.o
         2          0          0          0          0          0   libshutdown2.o
         8          4          0          0         96         68   libspace.o
        78          0          0          0          0         80   rt_memclr_w.o
       138          0          0          0          0         68   rt_memcpy_v6.o
       100          0          0          0          0         80   rt_memcpy_w.o
         2          0          0          0          0          0   rtexit.o
        10          0          0          0          0          0   rtexit2.o
        12          4          0          0          0         68   sys_exit.o
        74          0          0          0          0         80   sys_stackheap_outer.o
         2          0          0          0          0         68   use_no_semi.o
        10          0          0          0          0        116   fpinit.o

    ----------------------------------------------------------------------
      4230        156         12        164        100     110706   Library Totals
        12          0          1          0          4          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

      3544        140         11        164          0     109778   RTX_CM4F.lib
       664         16          0          0         96        812   c_w.l
        10          0          0          0          0        116   fz_wm.l

    ----------------------------------------------------------------------
      4230        156         12        164        100     110706   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     11634        616        682      43528      11888     477091   Grand Totals
     11634        616        682        424      11888     477091   ELF Image Totals (compressed)
     11634        616        682        424          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                12316 (  12.03kB)
    Total RW  Size (RW Data + ZI Data)             55416 (  54.12kB)
    Total ROM Size (Code + RO Data + RW Data)      12740 (  12.44kB)

==============================================================================

